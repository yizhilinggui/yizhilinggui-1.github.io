<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java语法</title>
      <link href="/2023/11/15/Java-%E7%A8%8B%E5%BA%8F%E7%9A%84%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/11/15/Java-%E7%A8%8B%E5%BA%8F%E7%9A%84%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>小记：本章是实践，故前面是记录语法的</p><h1 id="1、语法"><a href="#1、语法" class="headerlink" title="1、语法"></a>1、语法</h1><h2 id="1-1、JFrame"><a href="#1-1、JFrame" class="headerlink" title="1.1、JFrame"></a>1.1、JFrame</h2>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java项目2(游戏)</title>
      <link href="/2023/08/02/java%E9%A1%B9%E7%9B%AE/"/>
      <url>/2023/08/02/java%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="1-设计游戏的目的"><a href="#1-设计游戏的目的" class="headerlink" title="1. 设计游戏的目的"></a>1. 设计游戏的目的</h2><ul><li>锻炼逻辑思维能力</li><li>利用Java的图形化界面，写一个项目，知道前面学习的知识点在实际开发中的应用场景</li></ul><h2 id="2-游戏的最终效果呈现"><a href="#2-游戏的最终效果呈现" class="headerlink" title="2. 游戏的最终效果呈现"></a>2. 游戏的最终效果呈现</h2><p>Hello，各位同学大家好。今天，我们要写一个非常有意思的小游戏 —-《拼图小游戏》<br>我们先来看一下游戏的最终成品展示，然后再一步一步的从0开始，完成游戏里面每一个细节。<br>游戏运行之后，就是这样的界面。<br>                                         <img src="https://public-img.pages.dev/img.2/游戏项目图/img.1/最终效果1.png" alt="创建项目1">) </p><p>刚开始打开，是登录页面，因为是第一次运行，需要注册。点击注册就会跳转到注册页面</p><p>​                                       <img src="https://public-img.pages.dev/img.2/游戏项目图/img.1/最终效果2.png" alt="创建项目2"></p><p>在注册页面我们可以注册账号，用户名如果已存在则会注册失败。</p><p>​                                       <img src="https://public-img.pages.dev/img.2/游戏项目图/img.1/最终效果3.png" alt="创建项目1"></p><p>在游戏主界面中，我们可以利用上下左右移动小图片去玩游戏，还有快捷键A可以查看最终效果，W一键通关。</p><h2 id="3-实现思路"><a href="#3-实现思路" class="headerlink" title="3. 实现思路"></a>3. 实现思路</h2><p>我们在写游戏的时候，也是一部分一部分完成的。</p><p>先写游戏主界面，实现步骤如下：</p><p>1，完成最外层窗体的搭建。</p><p>2，再把菜单添加到窗体当中。</p><p>3，把小图片添加到窗体当中。</p><p>4，打乱数字图片的顺序。</p><p>5，让数字图片可以移动起来。</p><p>6，通关之后的胜利判断。</p><p>7，添加其他额外的功能。</p><h2 id="4-三行代码实现主界面搭建"><a href="#4-三行代码实现主界面搭建" class="headerlink" title="4. 三行代码实现主界面搭建"></a>4. 三行代码实现主界面搭建</h2><h3 id="界面效果："><a href="#界面效果：" class="headerlink" title="界面效果："></a>界面效果：</h3><p><img src="https://public-img.pages.dev/img.2/游戏项目图/img.1/初始界面.png" alt="初始界面"></p><h3 id="实现步骤："><a href="#实现步骤：" class="headerlink" title="实现步骤："></a>实现步骤：</h3><ol><li><p>创建App类, 编写main方法</p><p>作用: 程序的主入口</p></li><li><p>书写以下代码</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.召唤主界面</span></span><br><span class="line"><span class="type">JFrame</span> <span class="variable">jFrame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JFrame</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.设置主界面的大小</span></span><br><span class="line">jFrame.setSize(<span class="number">514</span>,<span class="number">595</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.让主界面显示出来</span></span><br><span class="line">jFrame.setVisible(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><h2 id="5-主界面的其他设置"><a href="#5-主界面的其他设置" class="headerlink" title="5. 主界面的其他设置"></a>5. 主界面的其他设置</h2>   <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.召唤主界面</span></span><br><span class="line"><span class="type">JFrame</span> <span class="variable">jFrame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JFrame</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置主界面的大小</span></span><br><span class="line">jFrame.setSize(<span class="number">514</span>,<span class="number">595</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将主界面设置到屏幕的正中央</span></span><br><span class="line">jFrame.setLocationRelativeTo(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将主界面置顶</span></span><br><span class="line">jFrame.setAlwaysOnTop(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭主界面的时候让代码一起停止</span></span><br><span class="line">jFrame.setDefaultCloseOperation(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//给主界面设置一个标题</span></span><br><span class="line">jFrame.setTitle(<span class="string">&quot;拼图游戏单机版 v1.0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.让主界面显示出来</span></span><br><span class="line">jFrame.setVisible(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><p>   注意事项：</p><p>​    jFrame.setVisible(true);必须要写在最后一行。</p><h2 id="6-利用继承简化代码"><a href="#6-利用继承简化代码" class="headerlink" title="6. 利用继承简化代码"></a>6. 利用继承简化代码</h2><p>需求：</p><p>​    如果把所有的代码都写在main方法中，那么main方法里面的代码，就包含游戏主界面的代码，登录界面的代码，注册界面的代码，会变得非常臃肿后期维护也是一件非常难的事情，所以我们需要用继承改进，改进之后，代码就可以分类了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//登录界面</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginJFrame</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="comment">//LoginJFrame 表示登录界面</span></span><br><span class="line">    <span class="comment">//以后所有跟登录相关的代码，都写在这里</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LoginJFrame</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//在创建登录界面的时候，同时给这个界面去设置一些信息</span></span><br><span class="line">        <span class="comment">//比如，宽高，直接展示出来</span></span><br><span class="line">        <span class="built_in">this</span>.setSize(<span class="number">488</span>,<span class="number">430</span>);</span><br><span class="line">        <span class="comment">//设置界面的标题</span></span><br><span class="line">        <span class="built_in">this</span>.setTitle(<span class="string">&quot;拼图 登录&quot;</span>);</span><br><span class="line">        <span class="comment">//设置界面置顶</span></span><br><span class="line">        <span class="built_in">this</span>.setAlwaysOnTop(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//设置界面居中</span></span><br><span class="line">        <span class="built_in">this</span>.setLocationRelativeTo(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//设置关闭模式</span></span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">        <span class="comment">//让显示显示出来，建议写在最后</span></span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//注册界面</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RegisterJFrame</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="comment">//跟注册相关的代码，都写在这个界面中</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">RegisterJFrame</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setSize(<span class="number">488</span>,<span class="number">500</span>);</span><br><span class="line">        <span class="comment">//设置界面的标题</span></span><br><span class="line">        <span class="built_in">this</span>.setTitle(<span class="string">&quot;拼图 注册&quot;</span>);</span><br><span class="line">        <span class="comment">//设置界面置顶</span></span><br><span class="line">        <span class="built_in">this</span>.setAlwaysOnTop(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//设置界面居中</span></span><br><span class="line">        <span class="built_in">this</span>.setLocationRelativeTo(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//设置关闭模式</span></span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">        <span class="comment">//让显示显示出来，建议写在最后</span></span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        getContentPane();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏主界面</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GameJFrame</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GameJFrame</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//设置界面的宽高</span></span><br><span class="line">        <span class="built_in">this</span>.setSize(<span class="number">603</span>, <span class="number">680</span>);</span><br><span class="line">        <span class="comment">//设置界面的标题</span></span><br><span class="line">        <span class="built_in">this</span>.setTitle(<span class="string">&quot;拼图单机版 v1.0&quot;</span>);</span><br><span class="line">        <span class="comment">//设置界面置顶</span></span><br><span class="line">        <span class="built_in">this</span>.setAlwaysOnTop(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//设置界面居中</span></span><br><span class="line">        <span class="built_in">this</span>.setLocationRelativeTo(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//设置关闭模式</span></span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">        <span class="comment">//取消默认的居中放置，只有取消了才会按照XY轴的形式添加组件</span></span><br><span class="line">        <span class="built_in">this</span>.setLayout(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//让界面显示出来，建议写在最后</span></span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意点：</p><p>​    其中this表示当前窗体的意思。</p><h2 id="7-菜单制作"><a href="#7-菜单制作" class="headerlink" title="7. 菜单制作"></a>7. 菜单制作</h2><p>菜单就是下图红色边框的内容。</p><p><img src="https://public-img.pages.dev/img.2/游戏项目图/img.1/菜单.png" alt="初始界面"></p><h3 id="7-1菜单的组成"><a href="#7-1菜单的组成" class="headerlink" title="7.1菜单的组成"></a>7.1菜单的组成</h3><p><img src="https://public-img.pages.dev/img.2/游戏项目图/img.1/菜单2.png" alt="初始界面"><br>在菜单中有：JMenuBar、JMenu、JMenuItem三个角色。</p><p>JMenuBar：如上图中红色边框</p><p>JMenu：如上图蓝色边框</p><p>JMenuItem：如上图绿色字体处</p><p>其中JMenuBar是整体，一个界面中一般只有一个JMenuBar。</p><p>而JMenu是菜单中的选项，可以有多个。</p><p>JMenuItem是选项下面的条目，也可以有多个。</p><h3 id="7-2代码书写步骤"><a href="#7-2代码书写步骤" class="headerlink" title="7.2代码书写步骤"></a>7.2代码书写步骤</h3><p>1，创建JMenuBar对象</p><p>2，创建JMenu对象</p><p>3，创建JMenuItem对象</p><p>4，把JMenuItem添加到JMenu中</p><p>5，把JMenu添加到JMenuBar中</p><p>6，把整个JMenuBar设置到整个界面中</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个菜单对象</span></span><br><span class="line"><span class="type">JMenuBar</span> <span class="variable">jMenuBar</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuBar</span>();</span><br><span class="line"><span class="comment">//设置菜单的宽高</span></span><br><span class="line">jMenuBar.setSize(<span class="number">514</span>, <span class="number">20</span>);</span><br><span class="line"><span class="comment">//创建一个选项</span></span><br><span class="line"><span class="type">JMenu</span> <span class="variable">jMenu1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenu</span>(<span class="string">&quot;功能&quot;</span>);</span><br><span class="line"><span class="comment">//创建一个条目</span></span><br><span class="line">jMenuItem1 = <span class="keyword">new</span> <span class="title class_">JMenuItem</span>(<span class="string">&quot;重新游戏&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//把条目添加到选项当中</span></span><br><span class="line">jMenu1.add(jMenuItem1);</span><br><span class="line"><span class="comment">//把选项添加到菜单当中</span></span><br><span class="line">jMenuBar.add(jMenu1);</span><br><span class="line"><span class="comment">//把菜单添加到最外层的窗体当中</span></span><br><span class="line"><span class="built_in">this</span>.setJMenuBar(jMenuBar);</span><br></pre></td></tr></table></figure><h2 id="8-添加图片"><a href="#8-添加图片" class="headerlink" title="8.添加图片"></a>8.添加图片</h2><p><img src="https://public-img.pages.dev/img.2/游戏项目图/img.1/添加图片.png" alt=""></p><p>在上图中，其实是15张小图片。我们在添加图片的时候，要把添加图片的操作重复15次，才能把所有图片都添加到界面当中。</p><h3 id="8-1使用到的Java类"><a href="#8-1使用到的Java类" class="headerlink" title="8.1使用到的Java类"></a>8.1使用到的Java类</h3><p>​    ImageIcon：描述图片的类，可以关联计算中任意位置的图片。</p><p>​                但是一般会把图片拷贝到当前项目中。</p><p>​    JLabel：用来管理图片，文字的类。</p><p>​              可以用来设置位置，宽高。</p><h3 id="8-2位置坐标"><a href="#8-2位置坐标" class="headerlink" title="8.2位置坐标"></a>8.2位置坐标</h3><p><img src="https://public-img.pages.dev/img.2/游戏项目图/img.1/坐标.png" alt=""></p><p>界面左上角的点可以看做是坐标的原点，横向的是X轴，纵向的是Y轴。</p><p>图片的位置其实取决于图片左上角的点，在坐标中的位置。</p><p>如果是（0,0）那么该图片会显示再屏幕的左上角。</p><h3 id="8-3添加步骤："><a href="#8-3添加步骤：" class="headerlink" title="8.3添加步骤："></a>8.3添加步骤：</h3><p>​    1，取消整个界面的默认居中布局</p><p>​    2，创建ImageIcon对象，并制定图片位置。</p><p>​    3，创建JLabel对象，并把ImageIcon对象放到小括号中。</p><p>​    4，利用JLabel对象设置大小，宽高。</p><p>​    5，将JLabel对象添加到整个界面当中。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1，先对整个界面进行设置</span></span><br><span class="line"><span class="comment">//取消内部居中放置方式</span></span><br><span class="line"><span class="built_in">this</span>.setLayout(<span class="literal">null</span>);</span><br><span class="line"><span class="comment">//2，创建ImageIcon对象，并制定图片位置。</span></span><br><span class="line"><span class="type">ImageIcon</span> <span class="variable">imageIcon1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;image\\1.png&quot;</span>);</span><br><span class="line"><span class="comment">//3，创建JLabel对象，并把ImageIcon对象放到小括号中。</span></span><br><span class="line"><span class="type">JLabel</span> <span class="variable">jLabel1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(imageIcon1);</span><br><span class="line"><span class="comment">//4，利用JLabel对象设置大小，宽高。</span></span><br><span class="line">jLabel1.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line"><span class="comment">//5，将JLabel对象添加到整个界面当中。</span></span><br><span class="line"><span class="built_in">this</span>.add(jLabel1);</span><br></pre></td></tr></table></figure><p>以此类推，只要能确定15张图片的位置，把上面的代码重复写15遍，就可以将所有图片都添加到界面中了。</p><h3 id="8-4-打乱图片的位置"><a href="#8-4-打乱图片的位置" class="headerlink" title="8.4 打乱图片的位置"></a>8.4 打乱图片的位置</h3><p>每一张图片都对应1~15之间的数字，空白处为0，打乱图片实际上就是把数字打乱，添加图片的时候按照打乱的图片添加即可</p><h4 id="8-4-1-打乱数组中数据的练习"><a href="#8-4-1-打乱数组中数据的练习" class="headerlink" title="8.4.1 打乱数组中数据的练习"></a>8.4.1 打乱数组中数据的练习</h4><p>​    int[] tempArr = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};</p><p>​    要求：打乱一维数组中的数据，并按照4个一组的方式添加到二维数组中。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//需求：</span></span><br><span class="line">        <span class="comment">//把一个一维数组中的数据：0~15 打乱顺序</span></span><br><span class="line">        <span class="comment">//然后再按照4个一组的方式添加到二维数组当中</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.定义一个一维数组</span></span><br><span class="line">        <span class="type">int</span>[] tempArr = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>&#125;;</span><br><span class="line">        <span class="comment">//2.打乱数组中的数据的顺序</span></span><br><span class="line">        <span class="comment">//遍历数组，得到每一个元素，拿着每一个元素跟随机索引上的数据进行交换</span></span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; tempArr.length; i++) &#123;</span><br><span class="line">            <span class="comment">//获取到随机索引</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> r.nextInt(tempArr.length);</span><br><span class="line">            <span class="comment">//拿着遍历到的每一个数据，跟随机索引上的数据进行交换</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> tempArr[i];</span><br><span class="line">            tempArr[i] = tempArr[index];</span><br><span class="line">            tempArr[index] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3.遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; tempArr.length; i++) &#123;</span><br><span class="line">            System.out.print(tempArr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.创建一个二维数组</span></span><br><span class="line">        <span class="type">int</span>[][] data = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.给二维数组添加数据</span></span><br><span class="line">        <span class="comment">//解法一：</span></span><br><span class="line">        <span class="comment">//遍历一维数组tempArr得到每一个元素，把每一个元素依次添加到二维数组当中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; tempArr.length; i++) &#123;</span><br><span class="line">            data[i / <span class="number">4</span>][i % <span class="number">4</span>] = tempArr[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历二维数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; data.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; data[i].length; j++) &#123;</span><br><span class="line">                System.out.print(data[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="8-4-2-打乱图片"><a href="#8-4-2-打乱图片" class="headerlink" title="8.4.2 打乱图片"></a>8.4.2 打乱图片</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GameJFrame</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="comment">//JFrame 界面，窗体</span></span><br><span class="line">    <span class="comment">//子类呢？也表示界面，窗体</span></span><br><span class="line">    <span class="comment">//规定：GameJFrame这个界面表示的就是游戏的主界面</span></span><br><span class="line">    <span class="comment">//以后跟游戏相关的所有逻辑都写在这个类中</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建一个二维数组</span></span><br><span class="line">    <span class="comment">//目的：用来管理数据</span></span><br><span class="line">    <span class="comment">//加载图片的时候，会根据二维数组中的数据进行加载</span></span><br><span class="line">    <span class="type">int</span>[][] data = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GameJFrame</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//初始化界面</span></span><br><span class="line">        initJFrame();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化菜单</span></span><br><span class="line">        initJMenuBar();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化数据（打乱）</span></span><br><span class="line">        initData();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化图片（根据打乱之后的结果去加载图片）</span></span><br><span class="line">        initImage();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//让界面显示出来，建议写在最后</span></span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化数据（打乱）</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//1.定义一个一维数组</span></span><br><span class="line">        <span class="type">int</span>[] tempArr = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>&#125;;</span><br><span class="line">        <span class="comment">//2.打乱数组中的数据的顺序</span></span><br><span class="line">        <span class="comment">//遍历数组，得到每一个元素，拿着每一个元素跟随机索引上的数据进行交换</span></span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; tempArr.length; i++) &#123;</span><br><span class="line">            <span class="comment">//获取到随机索引</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> r.nextInt(tempArr.length);</span><br><span class="line">            <span class="comment">//拿着遍历到的每一个数据，跟随机索引上的数据进行交换</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> tempArr[i];</span><br><span class="line">            tempArr[i] = tempArr[index];</span><br><span class="line">            tempArr[index] = temp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.给二维数组添加数据</span></span><br><span class="line">        <span class="comment">//遍历一维数组tempArr得到每一个元素，把每一个元素依次添加到二维数组当中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; tempArr.length; i++) &#123;</span><br><span class="line">            data[i / <span class="number">4</span>][i % <span class="number">4</span>] = tempArr[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化图片</span></span><br><span class="line">    <span class="comment">//添加图片的时候，就需要按照二维数组中管理的数据添加图片</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initImage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//外循环 --- 把内循环重复执行了4次。</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//内循环 --- 表示在一行添加4张图片</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">                <span class="comment">//获取当前要加载图片的序号</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> data[i][j];</span><br><span class="line">                <span class="comment">//创建一个JLabel的对象（管理容器）</span></span><br><span class="line">                <span class="type">JLabel</span> <span class="variable">jLabel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;C:\\Users\\moon\\IdeaProjects\\basic-code\\puzzlegame\\image\\animal\\animal3\\&quot;</span> + num + <span class="string">&quot;.jpg&quot;</span>));</span><br><span class="line">                <span class="comment">//指定图片位置</span></span><br><span class="line">                jLabel.setBounds(<span class="number">105</span> * j, <span class="number">105</span> * i, <span class="number">105</span>, <span class="number">105</span>);</span><br><span class="line">                <span class="comment">//把管理容器添加到界面中</span></span><br><span class="line">                <span class="built_in">this</span>.getContentPane().add(jLabel);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initJMenuBar</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//创建整个的菜单对象</span></span><br><span class="line">        <span class="type">JMenuBar</span> <span class="variable">jMenuBar</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuBar</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建菜单上面的两个选项的对象 （功能  关于我们）</span></span><br><span class="line">        <span class="type">JMenu</span> <span class="variable">functionJMenu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenu</span>(<span class="string">&quot;功能&quot;</span>);</span><br><span class="line">        <span class="type">JMenu</span> <span class="variable">aboutJMenu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenu</span>(<span class="string">&quot;关于我们&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建选项下面的条目对象</span></span><br><span class="line">        <span class="type">JMenuItem</span> <span class="variable">replayItem</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuItem</span>(<span class="string">&quot;重新游戏&quot;</span>);</span><br><span class="line">        <span class="type">JMenuItem</span> <span class="variable">reLoginItem</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuItem</span>(<span class="string">&quot;重新登录&quot;</span>);</span><br><span class="line">        <span class="type">JMenuItem</span> <span class="variable">closeItem</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuItem</span>(<span class="string">&quot;关闭游戏&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">JMenuItem</span> <span class="variable">accountItem</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuItem</span>(<span class="string">&quot;公众号&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将每一个选项下面的条目天极爱到选项当中</span></span><br><span class="line">        functionJMenu.add(replayItem);</span><br><span class="line">        functionJMenu.add(reLoginItem);</span><br><span class="line">        functionJMenu.add(closeItem);</span><br><span class="line"></span><br><span class="line">        aboutJMenu.add(accountItem);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将菜单里面的两个选项添加到菜单当中</span></span><br><span class="line">        jMenuBar.add(functionJMenu);</span><br><span class="line">        jMenuBar.add(aboutJMenu);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给整个界面设置菜单</span></span><br><span class="line">        <span class="built_in">this</span>.setJMenuBar(jMenuBar);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initJFrame</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//设置界面的宽高</span></span><br><span class="line">        <span class="built_in">this</span>.setSize(<span class="number">603</span>, <span class="number">680</span>);</span><br><span class="line">        <span class="comment">//设置界面的标题</span></span><br><span class="line">        <span class="built_in">this</span>.setTitle(<span class="string">&quot;拼图单机版 v1.0&quot;</span>);</span><br><span class="line">        <span class="comment">//设置界面置顶</span></span><br><span class="line">        <span class="built_in">this</span>.setAlwaysOnTop(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//设置界面居中</span></span><br><span class="line">        <span class="built_in">this</span>.setLocationRelativeTo(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//设置关闭模式</span></span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">        <span class="comment">//取消默认的居中放置，只有取消了才会按照XY轴的形式添加组件</span></span><br><span class="line">        <span class="built_in">this</span>.setLayout(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-事件"><a href="#9-事件" class="headerlink" title="9. 事件"></a>9. 事件</h2><p>​    事件是可以被组件识别的操作。</p><h3 id="9-1-常见的三个核心要素"><a href="#9-1-常见的三个核心要素" class="headerlink" title="9.1 常见的三个核心要素"></a>9.1 常见的三个核心要素</h3><ul><li>事件源： 按钮 图片 窗体… </li><li>事件：某些操作</li><li>绑定监听：当事件源上发生了某个事件，则执行某段代码 </li></ul><h3 id="9-2-常见的三种事件监听"><a href="#9-2-常见的三种事件监听" class="headerlink" title="9.2 常见的三种事件监听"></a>9.2 常见的三种事件监听</h3><ul><li>键盘监听 KeyListener</li><li>鼠标监听 MouseListener</li><li>动作监听 ActionListener</li></ul><h3 id="9-3-动作监听"><a href="#9-3-动作监听" class="headerlink" title="9.3 动作监听"></a>9.3 动作监听</h3><p>包含：</p><ul><li>鼠标左键点击</li><li>空格</li></ul><h4 id="9-3-1-事件的三种实现方式"><a href="#9-3-1-事件的三种实现方式" class="headerlink" title="9.3.1 事件的三种实现方式"></a>9.3.1 事件的三种实现方式</h4><ul><li>定义实现类实现接口</li><li>匿名内部类</li><li>本类实现接口</li></ul><h4 id="方式一：实现类"><a href="#方式一：实现类" class="headerlink" title="方式一：实现类"></a>方式一：实现类</h4><p>​    定义实现类实现ActionListener接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">JFrame</span> <span class="variable">jFrame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JFrame</span>();</span><br><span class="line">        <span class="comment">//设置界面的宽高</span></span><br><span class="line">        jFrame.setSize(<span class="number">603</span>, <span class="number">680</span>);</span><br><span class="line">        <span class="comment">//设置界面的标题</span></span><br><span class="line">        jFrame.setTitle(<span class="string">&quot;事件演示&quot;</span>);</span><br><span class="line">        <span class="comment">//设置界面置顶</span></span><br><span class="line">        jFrame.setAlwaysOnTop(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//设置界面居中</span></span><br><span class="line">        jFrame.setLocationRelativeTo(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//设置关闭模式</span></span><br><span class="line">        jFrame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">        <span class="comment">//取消默认的居中放置，只有取消了才会按照XY轴的形式添加组件</span></span><br><span class="line">        jFrame.setLayout(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个按钮对象</span></span><br><span class="line">        <span class="type">JButton</span> <span class="variable">jtb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;点我啊&quot;</span>);</span><br><span class="line">        <span class="comment">//设置位置和宽高</span></span><br><span class="line">        jtb.setBounds(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">50</span>);</span><br><span class="line">        <span class="comment">//给按钮添加动作监听</span></span><br><span class="line">        <span class="comment">//jtb:组件对象，表示你要给哪个组件添加事件</span></span><br><span class="line">        <span class="comment">//addActionListener：表示我要给组件添加哪个事件监听（动作监听包含鼠标左键点击，空格）</span></span><br><span class="line">        <span class="comment">//参数：表示事件被触发之后要执行的代码</span></span><br><span class="line">        jtb.addActionListener(<span class="keyword">new</span> <span class="title class_">MyActionListener</span>());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//把按钮添加到界面当中</span></span><br><span class="line">        jFrame.getContentPane().add(jtb);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        jFrame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyActionListener</span> <span class="keyword">implements</span> <span class="title class_">ActionListener</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;按钮被点击了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方式二：匿名内部类"><a href="#方式二：匿名内部类" class="headerlink" title="方式二：匿名内部类"></a>方式二：匿名内部类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">JFrame</span> <span class="variable">jFrame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JFrame</span>();</span><br><span class="line">        <span class="comment">//设置界面的宽高</span></span><br><span class="line">        jFrame.setSize(<span class="number">603</span>, <span class="number">680</span>);</span><br><span class="line">        <span class="comment">//设置界面的标题</span></span><br><span class="line">        jFrame.setTitle(<span class="string">&quot;事件演示&quot;</span>);</span><br><span class="line">        <span class="comment">//设置界面置顶</span></span><br><span class="line">        jFrame.setAlwaysOnTop(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//设置界面居中</span></span><br><span class="line">        jFrame.setLocationRelativeTo(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//设置关闭模式</span></span><br><span class="line">        jFrame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">        <span class="comment">//取消默认的居中放置，只有取消了才会按照XY轴的形式添加组件</span></span><br><span class="line">        jFrame.setLayout(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个按钮对象</span></span><br><span class="line">        <span class="type">JButton</span> <span class="variable">jtb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;点我啊&quot;</span>);</span><br><span class="line">        <span class="comment">//设置位置和宽高</span></span><br><span class="line">        jtb.setBounds(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">50</span>);</span><br><span class="line">        <span class="comment">//给按钮添加动作监听</span></span><br><span class="line">        <span class="comment">//jtb:组件对象，表示你要给哪个组件添加事件</span></span><br><span class="line">        <span class="comment">//addActionListener：表示我要给组件添加哪个事件监听（动作监听包含鼠标左键点击，空格）</span></span><br><span class="line">        <span class="comment">//参数：表示事件被触发之后要执行的代码</span></span><br><span class="line"></span><br><span class="line">        jtb.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;达咩~不要点我哟~&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//把按钮添加到界面当中</span></span><br><span class="line">        jFrame.getContentPane().add(jtb);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        jFrame.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方式三：本类实现接口"><a href="#方式三：本类实现接口" class="headerlink" title="方式三：本类实现接口"></a>方式三：本类实现接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyJFrame</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> <span class="keyword">implements</span> <span class="title class_">ActionListener</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建一个按钮对象</span></span><br><span class="line">    <span class="type">JButton</span> <span class="variable">jtb1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;点我啊&quot;</span>);</span><br><span class="line">    <span class="comment">//创建一个按钮对象</span></span><br><span class="line">    <span class="type">JButton</span> <span class="variable">jtb2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;再点我啊&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyJFrame</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//设置界面的宽高</span></span><br><span class="line">        <span class="built_in">this</span>.setSize(<span class="number">603</span>, <span class="number">680</span>);</span><br><span class="line">        <span class="comment">//设置界面的标题</span></span><br><span class="line">        <span class="built_in">this</span>.setTitle(<span class="string">&quot;拼图单机版 v1.0&quot;</span>);</span><br><span class="line">        <span class="comment">//设置界面置顶</span></span><br><span class="line">        <span class="built_in">this</span>.setAlwaysOnTop(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//设置界面居中</span></span><br><span class="line">        <span class="built_in">this</span>.setLocationRelativeTo(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//设置关闭模式</span></span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">        <span class="comment">//取消默认的居中放置，只有取消了才会按照XY轴的形式添加组件</span></span><br><span class="line">        <span class="built_in">this</span>.setLayout(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//给按钮设置位置和宽高</span></span><br><span class="line">        jtb1.setBounds(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">50</span>);</span><br><span class="line">        <span class="comment">//给按钮添加事件</span></span><br><span class="line">        jtb1.addActionListener(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//给按钮设置位置和宽高</span></span><br><span class="line">        jtb2.setBounds(<span class="number">100</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">50</span>);</span><br><span class="line">        jtb2.addActionListener(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//那按钮添加到整个界面当中</span></span><br><span class="line">        <span class="built_in">this</span>.getContentPane().add(jtb1);</span><br><span class="line">        <span class="built_in">this</span>.getContentPane().add(jtb2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//让整个界面显示出来</span></span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">        <span class="comment">//对当前的按钮进行判断</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取当前被操作的那个按钮对象</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">source</span> <span class="operator">=</span> e.getSource();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(source == jtb1)&#123;</span><br><span class="line">            jtb1.setSize(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(source == jtb2)&#123;</span><br><span class="line">            <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">            jtb2.setLocation(r.nextInt(<span class="number">500</span>),r.nextInt(<span class="number">500</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-附带的练习"><a href="#10-附带的练习" class="headerlink" title="10.附带的练习"></a>10.附带的练习</h2><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>eclipse快捷键修改</title>
      <link href="/2023/07/20/%E4%BF%AE%E6%94%B9%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2023/07/20/%E4%BF%AE%E6%94%B9%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="1、常用快捷键"><a href="#1、常用快捷键" class="headerlink" title="1、常用快捷键"></a>1、常用快捷键</h1><h2 id="1-1代码编辑快捷键"><a href="#1-1代码编辑快捷键" class="headerlink" title="1.1代码编辑快捷键"></a>1.1代码编辑快捷键</h2><p>1.复制： ctrl + c<br>2.剪切：ctrl + x<br>3.粘贴：ctrl + v<br>4.保存： ctrl + s<br>5.撤销： ctrl + z<br>6.反撤销： ctrl + y<br>7.全选：ctrl + a<br>8.标准格式化代码： ctrl + shift + f<br>9.选中数行，整体往后移动：tab<br>10.选中数行，整体往前移动：shift + tab<br>11.使用单行注释：ctrl + /<br>12.使用多行注释： ctrl + shift + /<br>13.取消多行注释：ctrl + shift + \<br>14.复制指定行的代码：ctrl + alt + down 或 ctrl + alt + up<br>15.删除指定行的代码：ctrl + d<br>16.上下移动代码：alt + up 或 alt + down<br>17.切换到下一行代码空位：shift + enter<br>18.切换到上一行代码空位：ctrl + shift + enter<br>19.批量修改指定的变量名、方法名、类名等：alt + shift + r<br>20.选中的结构的大小写的切换：变成大写： ctrl + shift + x<br>21.选中的结构的大小写的切换：变成小写：ctrl + shift + y<br>22.直接定位到当前行的首位：home<br>23.直接定位到当前行的末位：end</p><h2 id="1-2其他快捷键"><a href="#1-2其他快捷键" class="headerlink" title="1.2其他快捷键"></a>1.2其他快捷键</h2><p>1.补全代码的声明：alt + /<br>2.快速修复: ctrl + 1<br>3.批量导包：ctrl + shift + o<br>4.如何查看源码：ctrl + 选中指定的结构 或 ctrl + shift + t<br>5.退回到前一个编辑的页面：alt + left<br>6.进入到下一个编辑的页面：alt + right<br>7.光标选中指定的类，查看继承树结构：ctrl + t<br>8.在当前类中，显示类结构，并支持搜索指定的方法、属性等：ctrl + o<br>9.调出生成 getter/setter/构造器等结构： alt + shift + s<br>10.显示当前选择资源(工程 or 文件)的属性：alt + enter<br>11.快速查找：参照选中的 Word 快速定位到下一个 ：ctrl + k<br>12.关闭当前窗口：ctrl + w<br>13.关闭所有的窗口：ctrl + shift + w<br>14.查看指定的结构使用过的地方：ctrl + alt + g<br>15.查找与替换：ctrl + f<br>16.最大化当前的 View：ctrl + m</p><h1 id="2、快捷键自定义修改"><a href="#2、快捷键自定义修改" class="headerlink" title="2、快捷键自定义修改"></a>2、快捷键自定义修改</h1><p>有时eclipse快捷键与系统快捷键冲突，或用户使用多个IDE进行开发需要统一快捷键时，用户可以根据自己的使用习惯进行快捷键修改：<br>点击Window–&gt;Preferences</p><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/修改快捷键图1.png" alt=""></p><p>在弹出的窗口左侧选择General—&gt;Keys，在右侧的搜索框可以搜索需要修改的快捷键或名称，并进行修改即可。</p><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/修改快捷键图2.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> eclipse </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>面向对象进阶</title>
      <link href="/2023/07/06/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/"/>
      <url>/2023/07/06/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="1、static"><a href="#1、static" class="headerlink" title="1、static"></a>1、static</h1><h2 id="①静态变量"><a href="#①静态变量" class="headerlink" title="①静态变量"></a>①静态变量</h2><p>static表示静态，是Java中的一个修饰符，可以修饰成员方法，成员变量</p><p>①静态变量：被static修饰的成员变量（随着类的加载而加载）</p><p>特点：被该类所有对象共享</p><p>调用方式：a、类名调用（推荐）</p><p>​                    b、对象名调用</p><p><img src="https://public-img.pages.dev/img.2/static%E5%86%85%E5%AD%98%E5%9B%BE.png" alt="static内存图"></p><p>②成员变量：被static修饰的成员方法</p><p>特点：a、多用在测试类和工具类中</p><p>​            b、javabean中很少用</p><p>调用方式：a、类名调用</p><p>​                    b、对象名调用</p><p>Javabean类：用来描述一类事事物的类。比如。student,teacher,dog等</p><p>测试类：用类检查其他类书写是否正确，带有main方法的类，是程序入口</p><p>工具类：不是用来描述一类事物的，而是帮我们做一些事情的类。</p><p>①类名见名知意。</p><p>②私有化构造方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//②</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Arr</span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="title function_">arr</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>③方法定义为静态</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//②</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Arr</span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="title function_">arr</span><span class="params">()</span>&#123;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getMax</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="例题1"><a href="#例题1" class="headerlink" title="例题1"></a>例题1</h3><p><img src="https://public-img.pages.dev/img.2/%E5%AE%9A%E4%B9%89%E6%95%B0%E7%BB%84%E5%B7%A5%E5%85%B7%E7%B1%BB.png" alt="定义数组工具类"></p><p>工具类ArrarUtil</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Static;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrarUtil</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有化构造方法</span></span><br><span class="line"><span class="comment">//不让外界构造他的对象</span></span><br><span class="line"><span class="keyword">private</span>  <span class="title function_">ArrarUtil</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//需要定义为静态，方便调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">printArr</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">sb.append(<span class="string">&quot;[&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i==arr.length-<span class="number">1</span>) &#123;</span><br><span class="line">sb.append(arr[i]);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">sb.append(arr[i]).append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sb.append(<span class="string">&quot;]&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span>  <span class="title function_">getAerage</span><span class="params">(<span class="type">double</span>[] arr )</span> &#123;</span><br><span class="line"><span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">sum = sum+arr[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum/arr.length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>测试类TestDemo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Static;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestDemo</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="type">int</span>[] arr1 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> ArrarUtil.printArr(arr1);</span><br><span class="line">System.out.println(str);</span><br><span class="line"><span class="type">double</span>[] arr2 = &#123;<span class="number">2.1</span>,<span class="number">3.2</span>,<span class="number">4.5</span>,<span class="number">3.2</span>,<span class="number">5.0</span>&#125;;</span><br><span class="line"><span class="type">double</span> <span class="variable">str2</span> <span class="operator">=</span> ArrarUtil.getAerage(arr2);</span><br><span class="line">System.out.println(str2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="例题二"><a href="#例题二" class="headerlink" title="例题二"></a>例题二</h3><p><img src="https://public-img.pages.dev/img.2/%E5%AE%9A%E4%B9%89%E5%AD%A6%E7%94%9F%E5%B7%A5%E5%85%B7%E7%B1%BB.png" alt="定义学生工具类"></p><p>测试类Test</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> student1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">ArrayList&lt;student&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="type">student</span> <span class="variable">stu1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">student</span>(<span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line"><span class="type">student</span> <span class="variable">stu2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">student</span>(<span class="string">&quot;例四&quot;</span>,<span class="number">20</span>,<span class="string">&quot;女&quot;</span>);</span><br><span class="line"><span class="type">student</span> <span class="variable">stu3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">student</span>(<span class="string">&quot;王五&quot;</span>,<span class="number">45</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line">list.add(stu3);</span><br><span class="line">list.add(stu2);</span><br><span class="line">list.add(stu1);</span><br><span class="line"><span class="comment">//调用工具类方法</span></span><br><span class="line"><span class="type">int</span> <span class="variable">maxAge</span> <span class="operator">=</span> StudentUtil.getMaxAge(list);</span><br><span class="line">System.out.println(maxAge);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>javabean类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> student1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">student</span> &#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"><span class="keyword">private</span> String gender;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">student</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">student</span><span class="params">(String name, <span class="type">int</span> age, String gender)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line"><span class="built_in">this</span>.gender = gender;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> gender;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(String gender)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.gender = gender;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> student1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentUtil</span> &#123;</span><br><span class="line"><span class="keyword">private</span>   <span class="title function_">StudentUtil</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>  <span class="title function_">getMaxAge</span><span class="params">(ArrayList&lt;student&gt; list)</span> &#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">mage</span> <span class="operator">=</span> list.get(<span class="number">0</span>).getAge();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> list.get(i).getAge();</span><br><span class="line"><span class="keyword">if</span> (mage&lt;temp) &#123;</span><br><span class="line">mage=temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> mage;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="②注意事项"><a href="#②注意事项" class="headerlink" title="②注意事项"></a>②注意事项</h2><p>①静态方法只能访问静态变量和静态方法</p><p>②非静态方法可以访问静态变量或静态方法，也可以访问非静态的成员变量和非静态的成员方法</p><p>③静态方法中是没有this关键字</p><p>非静态方法中，属性只和对象相关，必要要有this。而静态方法中，对象数据不变，不需要this</p><p>总结：</p><p>静态方法中没有this关键字</p><p>静态方法中，只能访问静态</p><p>非静态方法可以访问所有</p><h2 id="③小结"><a href="#③小结" class="headerlink" title="③小结"></a>③小结</h2><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/static小结.png" alt="static小结"></p><h1 id="2、继承"><a href="#2、继承" class="headerlink" title="2、继承"></a>2、继承</h1><p>类与类之间的父子关系</p><h2 id="①概述"><a href="#①概述" class="headerlink" title="①概述"></a>①概述</h2><p>假如多个类中存在相同属性和行为时，我们可以将这些内容抽取到单独一个类中，那么多个类无需再定义这些属性和行为，只要<strong>继承</strong>那一个类即可。</p><p>其中，多个类可以称为<strong>子类</strong>，单独被继承的那一个类称为<strong>父类</strong>、<strong>超类（superclass）</strong>或者<strong>基类</strong>。</p><p>1、什么是继承、继承的好处?<br>继承是面向对象三大特征之一，可以让类跟类之间产生子父的关系。<br>可以把多个子类中重复的代码抽取到父类中，子类可以直接使用，减少代码冗余，提高代码的复用性<br>2、继承的格式?<br>public class  子类 extends 父类 { }<br>3、继承后子类的特点?<br>子类可以得到父类的属性和行为，子类可以使用。子类可以在父类的基础上新增其他功能，子类更强大。</p><h2 id="②继承的特点"><a href="#②继承的特点" class="headerlink" title="②继承的特点"></a>②继承的特点</h2><p>顶层父类是Object类。所有的类默认继承Object，作为父类。</p><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/继承总结.png" alt=""></p><h2 id="③子类能继承父类的内容"><a href="#③子类能继承父类的内容" class="headerlink" title="③子类能继承父类的内容"></a>③子类能继承父类的内容</h2><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/子类能继承父类中的内容.png" alt=""></p><p>成员变量的，privtae能继承但不能直接用。</p><p>构造方法的名字要和类名相同。</p><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/构造方法.png" alt=""></p><p>此图构造方法的名字是Fu，而类名为Zi</p><h2 id="④继承结构中的语法特点"><a href="#④继承结构中的语法特点" class="headerlink" title="④继承结构中的语法特点"></a>④继承结构中的语法特点</h2><h3 id="A、成员变量的访问特点"><a href="#A、成员变量的访问特点" class="headerlink" title="A、成员变量的访问特点"></a>A、成员变量的访问特点</h3><p> 就近原则</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">fU</span>&#123;</span><br><span class="line">String name=<span class="string">&quot;Fu&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Zi</span> <span class="keyword">extends</span> <span class="title class_">Fu</span>&#123;</span><br><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;Zi&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">ziShow</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;ziShow&quot;</span>;</span><br><span class="line">System.out.println(name);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就近原则，println打印“ziShow”，如果zishow不存在，则打印Zi，如若Zi与ziShow都不存在，则打印Fu</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="type">Zi</span> <span class="variable">z</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Zi</span>();</span><br><span class="line">z.ziShow();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">YE</span>&#123;</span><br><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span><span class="string">&quot;ye&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Fu</span>  <span class="keyword">extends</span> <span class="title class_">YE</span>&#123;</span><br><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;Fu&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Zi</span> <span class="keyword">extends</span> <span class="title class_">Fu</span>&#123;</span><br><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;Zi&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">ziShow</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;Zishow&quot;</span>;</span><br><span class="line">System.out.println(name);<span class="comment">//如果仍然是name，则只打印Zishow</span></span><br><span class="line">System.out.println(name);</span><br><span class="line">System.out.println(name);</span><br><span class="line">System.out.println(<span class="built_in">this</span>.name);<span class="comment">//this则会在本类，即从Zi方法从头开始找。如果子类没有，再去父类找。</span></span><br><span class="line">System.out.println(<span class="built_in">super</span>.name);<span class="comment">//super会从父类从头开始找。但super只能调用一个父类，即，最多输出Fu，而不会输出ye</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/继承语法1.png" alt=""></p><h3 id="B、方法的重写"><a href="#B、方法的重写" class="headerlink" title="B、方法的重写"></a>B、方法的重写</h3><p>当父类的方法不能满足子类现在的需求时，需要进行方法的重写。</p><h4 id="书写格式"><a href="#书写格式" class="headerlink" title="书写格式"></a>书写格式</h4><p>在继承体系中，子类出现了和父类中一模一样的方法声明，我们就称子类这个方法是重写的方法。本质就是父类，但声明的东西改了。</p><h4 id="Override重写注解"><a href="#Override重写注解" class="headerlink" title="@Override重写注解"></a>@Override重写注解</h4><ol><li>@Override是放在重写后的方法上，校验子类重写时语法是否正确。</li><li>加上注解后如果有红色波浪线，表示语法错误。</li><li>建议重写方法都加上@Override注解，代码安全。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">class</span> <span class="title class_">qwe</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">class</span> <span class="title class_">qwer</span> <span class="keyword">extends</span> <span class="title class_">qwe</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">launch</span><span class="params">()</span> &#123;</span><br><span class="line">eat();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;456&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/方法重写的本质1.png" alt=""></p><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/方法重写的本质2.png" alt=""></p><p><strong>但要记住，创建哪个类的对象，并且调用哪个里面的方法，则要去哪个类中找方法，不能直接套用最后子类的虚方法表</strong></p><h4 id="法重写注意事项和要求"><a href="#法重写注意事项和要求" class="headerlink" title="法重写注意事项和要求"></a>法重写注意事项和要求</h4><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/方法重写注意事项和要求.png" alt="法重写注意事项和要求"></p><h3 id="C、例题"><a href="#C、例题" class="headerlink" title="C、例题"></a>C、例题</h3><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/继承例题1.png" alt=""></p><p>animal</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">animal</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;吃狗粮&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">drink</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;喝水&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">active</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;看家&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>haxki</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">haski</span> <span class="keyword">extends</span> <span class="title class_">animal</span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">active</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="built_in">super</span>.active();</span><br><span class="line">System.out.println(<span class="string">&quot;拆家&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>shapi</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">shapi</span> <span class="keyword">extends</span> <span class="title class_">animal</span> &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="built_in">super</span>.eat();</span><br><span class="line">System.out.println(<span class="string">&quot;吃骨头&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tianyuan</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">tianyaun</span> <span class="keyword">extends</span> <span class="title class_">animal</span> &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;吃剩饭&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Test</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="type">haski</span> <span class="variable">h</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">haski</span>();</span><br><span class="line">h.eat();</span><br><span class="line">h.drink();</span><br><span class="line">h.active();</span><br><span class="line">System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">shapi</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">shapi</span>();</span><br><span class="line">s.eat();</span><br><span class="line">s.drink();</span><br><span class="line">s.active();</span><br><span class="line">System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">tianyaun</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">tianyaun</span>();</span><br><span class="line">t.eat();</span><br><span class="line">t.drink();</span><br><span class="line">t.active();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/继承总结2.png" alt=""></p><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/构造方法的访问特点1.png" alt="构造方法的访问特点"></p><h2 id="⑤this、super使用总结"><a href="#⑤this、super使用总结" class="headerlink" title="⑤this、super使用总结"></a>⑤this、super使用总结</h2><ol><li>this：理解为一个变量，表示当前方法调用者的地址值。</li><li>super：代表父类存储空间</li></ol><div class="table-container"><table><thead><tr><th>关键字</th><th>访问成员变量</th><th>访问成员方法</th><th>访问构造方法</th></tr></thead><tbody><tr><td>this</td><td>this.成员变量<br />访问本类成员变量</td><td>this.成员方法(…)<br />访问本类成员方法</td><td>this.(…)<br />访问本类构造方法</td></tr><tr><td>super</td><td>super.成员变量<br />访问父类成员变量</td><td>super.成员方法(…)<br />访问父类成员方法</td><td>supei(…)<br />访问父类构造方法</td></tr></tbody></table></div><h3 id="A、例题"><a href="#A、例题" class="headerlink" title="A、例题"></a>A、例题</h3><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/继承例题2.png" alt="例题1"></p><p>cook</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">cooker</span> <span class="keyword">extends</span> <span class="title class_">employee</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">cooker</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">cooker</span><span class="params">(String name, <span class="type">int</span> id, <span class="type">double</span> salary)</span> &#123;</span><br><span class="line"><span class="built_in">super</span>(name, id, salary);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;做饭&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>manager</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">manager</span> <span class="keyword">extends</span> <span class="title class_">employee</span> &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="type">double</span> bonus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">manager</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">manager</span><span class="params">(String name, <span class="type">int</span> id, <span class="type">double</span> salary, <span class="type">double</span> bonus)</span> &#123;</span><br><span class="line"><span class="built_in">super</span>(name, id, salary);</span><br><span class="line"><span class="built_in">this</span>.bonus = bonus;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getBonus</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> bonus;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBonus</span><span class="params">(<span class="type">double</span> bonus)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.bonus = bonus;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;管理员工&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>employee</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">employee</span> &#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line"><span class="keyword">private</span> <span class="type">double</span> salary;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">employee</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="built_in">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">employee</span><span class="params">(String name, <span class="type">int</span> id, <span class="type">double</span> salary)</span> &#123;</span><br><span class="line"><span class="built_in">super</span>();</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line"><span class="built_in">this</span>.salary = salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSalary</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSalary</span><span class="params">(<span class="type">double</span> salary)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.salary = salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;员工吃饭&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;员工工作&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>test</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">manager</span> <span class="variable">m</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">manager</span>(<span class="string">&quot;ling&quot;</span>,<span class="number">23</span>,<span class="number">5000</span>,<span class="number">3000</span>);</span><br><span class="line">System.out.println(m.getBonus()+<span class="string">&quot;, &quot;</span>+m.getId()+<span class="string">&quot;, &quot;</span>+m.getName()+<span class="string">&quot;, &quot;</span>+m.getSalary());</span><br><span class="line">m.work();</span><br><span class="line">m.eat();</span><br><span class="line"></span><br><span class="line"><span class="type">cooker</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">cooker</span>(<span class="string">&quot;gui&quot;</span>,<span class="number">23</span>,<span class="number">5000</span>);</span><br><span class="line">System.out.println(c.getId()+<span class="string">&quot;, &quot;</span>+c.getName()+<span class="string">&quot;, &quot;</span>+c.getSalary());</span><br><span class="line">c.work();</span><br><span class="line">c.eat();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/继承例题3.png" alt="例题2"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1：教研部员工</span><br><span class="line">子类：讲师、助教</span><br><span class="line">1.1：讲师</span><br><span class="line">成员变量：编号、姓名、工作</span><br><span class="line">成员方法：具体工作的内容</span><br></pre></td></tr></table></figure><h1 id="3、多态"><a href="#3、多态" class="headerlink" title="3、多态"></a>3、多态</h1><h2 id="A、认识多态"><a href="#A、认识多态" class="headerlink" title="A、认识多态"></a>A、认识多态</h2><h3 id="A-1、什么是多态？"><a href="#A-1、什么是多态？" class="headerlink" title="A.1、什么是多态？"></a>A.1、什么是多态？</h3><p>对象的多种形态</p><h3 id="A-2、多态的前提？"><a href="#A-2、多态的前提？" class="headerlink" title="A.2、多态的前提？"></a>A.2、多态的前提？</h3><p>有继承/实现关系</p><p>有父类引用指向子类对象</p><p>有方法的重写</p><h3 id="A-3、多态的好处？"><a href="#A-3、多态的好处？" class="headerlink" title="A.3、多态的好处？"></a>A.3、多态的好处？</h3><p>使用父类型作为参数，可以接收所有子类对象，体现多态的扩展性与便利。</p><p>调用成员变量时：编译看左边，运行看左边</p><p>调用成员方法时：编译看左边，运行看右边</p><p>代码示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Fu f = new Zi()；</span><br><span class="line">//编译看左边的父类中有没有name这个属性，没有就报错</span><br><span class="line">//在实际运行的时候，把父类name属性的值打印出来</span><br><span class="line">System.out.println(f.name);</span><br><span class="line">//编译看左边的父类中有没有show这个方法，没有就报错</span><br><span class="line">//在实际运行的时候，运行的是子类中的show方法</span><br><span class="line">f.show();</span><br></pre></td></tr></table></figure><h3 id="A-4、多态的优势"><a href="#A-4、多态的优势" class="headerlink" title="A.4、多态的优势"></a>A.4、多态的优势</h3><p>方法中，使用父类型作为参数，可以接收所有子类对象</p><h3 id="A-5、多态的弊端"><a href="#A-5、多态的弊端" class="headerlink" title="A.5、多态的弊端"></a>A.5、多态的弊端</h3><p>不能使用子类的特有功能(就是在子类中定义了其他方法，不能直接调用)</p><h2 id="B、引用数据类型的类型转换，有几种方式？"><a href="#B、引用数据类型的类型转换，有几种方式？" class="headerlink" title="B、引用数据类型的类型转换，有几种方式？"></a>B、引用数据类型的类型转换，有几种方式？</h2><p>自动类型转换、强制类型转换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Person p = new Student();</span><br><span class="line">Student s = (Student)p;</span><br></pre></td></tr></table></figure><h2 id="C1、强制类型转化还能解决什么问题？"><a href="#C1、强制类型转化还能解决什么问题？" class="headerlink" title="C1、强制类型转化还能解决什么问题？"></a>C1、强制类型转化还能解决什么问题？</h2><p>可以转换成真正的子类类型，从而调用子类独有的功能。</p><p>转换类型与真实对象类型不一致会报错。</p><p>转换的时候用<strong>instanceof</strong>关键字进行判断</p><h2 id="例题1-1"><a href="#例题1-1" class="headerlink" title="例题1"></a>例题1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">需求：根据需求完成代码:</span><br><span class="line">1.定义狗类</span><br><span class="line">属性：</span><br><span class="line">年龄，颜色</span><br><span class="line">行为:</span><br><span class="line">eat(String something)(something表示吃的东西)</span><br><span class="line">看家lookHome方法(无参数)</span><br><span class="line">2.定义猫类</span><br><span class="line">属性：</span><br><span class="line">年龄，颜色</span><br><span class="line">行为:</span><br><span class="line">eat(String something)方法(something表示吃的东西)</span><br><span class="line">逮老鼠catchMouse方法(无参数)</span><br><span class="line">3.定义Person类//饲养员</span><br><span class="line">属性：</span><br><span class="line">姓名，年龄</span><br><span class="line">行为：</span><br><span class="line">keepPet(Dog dog,String something)方法</span><br><span class="line">功能：喂养宠物狗，something表示喂养的东西</span><br><span class="line">行为：</span><br><span class="line">keepPet(Cat cat,String something)方法</span><br><span class="line">功能：喂养宠物猫，something表示喂养的东西</span><br><span class="line">生成空参有参构造，set和get方法  </span><br><span class="line">4.定义测试类(完成以下打印效果):</span><br><span class="line">keepPet(Dog dog,String somethind)方法打印内容如下：</span><br><span class="line">年龄为30岁的老王养了一只黑颜色的2岁的狗</span><br><span class="line">2岁的黑颜色的狗两只前腿死死的抱住骨头猛吃</span><br><span class="line">keepPet(Cat cat,String somethind)方法打印内容如下：</span><br><span class="line">年龄为25岁的老李养了一只灰颜色的3岁的猫</span><br><span class="line">3岁的灰颜色的猫眯着眼睛侧着头吃鱼</span><br><span class="line">5.思考：</span><br><span class="line">1.Dog和Cat都是Animal的子类，以上案例中针对不同的动物，定义了不同的keepPet方法，过于繁琐，能否简化，并体会简化后的好处？</span><br><span class="line">2.Dog和Cat虽然都是Animal的子类，但是都有其特有方法，能否想办法在keepPet中调用特有方法？</span><br></pre></td></tr></table></figure><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/多态综合练习1结构图.png" alt="">代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动物类（父类）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String color;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Animal</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Animal</span><span class="params">(<span class="type">int</span> age, String color)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.color = color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getColor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setColor</span><span class="params">(String color)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.color = color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">(String something)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;动物在吃&quot;</span> + something);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//猫类（子类）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Cat</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Cat</span><span class="params">(<span class="type">int</span> age, String color)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(age, color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">(String something)</span> &#123;</span><br><span class="line">        System.out.println(getAge() + <span class="string">&quot;岁的&quot;</span> + getColor() + <span class="string">&quot;颜色的猫眯着眼睛侧着头吃&quot;</span> + something);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">catchMouse</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;猫抓老鼠&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//狗类（子类）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Dog</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Dog</span><span class="params">(<span class="type">int</span> age, String color)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(age, color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//行为</span></span><br><span class="line">    <span class="comment">//eat(String something)(something表示吃的东西)</span></span><br><span class="line">    <span class="comment">//看家lookHome方法(无参数)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">(String something)</span> &#123;</span><br><span class="line">        System.out.println(getAge() + <span class="string">&quot;岁的&quot;</span> + getColor() + <span class="string">&quot;颜色的狗两只前腿死死的抱住&quot;</span> + something + <span class="string">&quot;猛吃&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lookHome</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;狗在看家&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//饲养员类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//饲养狗</span></span><br><span class="line">   <span class="comment">/* public void keepPet(Dog dog, String something) &#123;</span></span><br><span class="line"><span class="comment">        System.out.println(&quot;年龄为&quot; + age + &quot;岁的&quot; + name + &quot;养了一只&quot; + dog.getColor() + &quot;颜色的&quot; + dog.getAge() + &quot;岁的狗&quot;);</span></span><br><span class="line"><span class="comment">        dog.eat(something);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    //饲养猫</span></span><br><span class="line"><span class="comment">    public void keepPet(Cat cat, String something) &#123;</span></span><br><span class="line"><span class="comment">        System.out.println(&quot;年龄为&quot; + age + &quot;岁的&quot; + name + &quot;养了一只&quot; + cat.getColor() + &quot;颜色的&quot; + cat.getAge() + &quot;岁的猫&quot;);</span></span><br><span class="line"><span class="comment">        cat.eat(something);</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//想要一个方法，能接收所有的动物，包括猫，包括狗</span></span><br><span class="line">    <span class="comment">//方法的形参：可以写这些类的父类 Animal</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">keepPet</span><span class="params">(Animal a, String something)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(a <span class="keyword">instanceof</span> Dog d)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;年龄为&quot;</span> + age + <span class="string">&quot;岁的&quot;</span> + name + <span class="string">&quot;养了一只&quot;</span> + a.getColor() + <span class="string">&quot;颜色的&quot;</span> + a.getAge() + <span class="string">&quot;岁的狗&quot;</span>);</span><br><span class="line">            d.eat(something);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a <span class="keyword">instanceof</span> Cat c)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;年龄为&quot;</span> + age + <span class="string">&quot;岁的&quot;</span> + name + <span class="string">&quot;养了一只&quot;</span> + c.getColor() + <span class="string">&quot;颜色的&quot;</span> + c.getAge() + <span class="string">&quot;岁的猫&quot;</span>);</span><br><span class="line">            c.eat(something);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;没有这种动物&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象并调用方法</span></span><br><span class="line">       <span class="comment">/* Person p1 = new Person(&quot;老王&quot;,30);</span></span><br><span class="line"><span class="comment">        Dog d = new Dog(2,&quot;黑&quot;);</span></span><br><span class="line"><span class="comment">        p1.keepPet(d,&quot;骨头&quot;);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        Person p2 = new Person(&quot;老李&quot;,25);</span></span><br><span class="line"><span class="comment">        Cat c = new Cat(3,&quot;灰&quot;);</span></span><br><span class="line"><span class="comment">        p2.keepPet(c,&quot;鱼&quot;);*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建饲养员的对象</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;老王&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        <span class="type">Dog</span> <span class="variable">d</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="number">2</span>,<span class="string">&quot;黑&quot;</span>);</span><br><span class="line">        <span class="type">Cat</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cat</span>(<span class="number">3</span>,<span class="string">&quot;灰&quot;</span>);</span><br><span class="line">        p.keepPet(d,<span class="string">&quot;骨头&quot;</span>);</span><br><span class="line">        p.keepPet(c,<span class="string">&quot;鱼&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4、包和final"><a href="#4、包和final" class="headerlink" title="4、包和final"></a>4、包和final</h1><h2 id="①、包的知识点"><a href="#①、包的知识点" class="headerlink" title="①、包的知识点"></a>①、包的知识点</h2><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/包的知识点以及适用情况.png" alt=""></p><p>第四点：<strong>类似于Test1和Test2中，有两个student类，如果要引用其中一个的话，就要用全类名</strong></p><h2 id="②、final知识点"><a href="#②、final知识点" class="headerlink" title="②、final知识点"></a>②、final知识点</h2><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/常量的规范与final修饰后的细节.png" alt=""></p><p>细节:</p><p>student(仅用作测试)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">student</span> &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">student</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">student</span><span class="params">(<span class="type">int</span> age, String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Test</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//基本类型</span></span><br><span class="line"><span class="keyword">final</span> <span class="type">double</span> <span class="variable">PI</span> <span class="operator">=</span> <span class="number">3.14</span>; <span class="comment">//这个值不能更改了</span></span><br><span class="line"><span class="comment">//引用类型</span></span><br><span class="line"><span class="comment">//记录的地址值不能改变，内部的属性值还是可以改变的</span></span><br><span class="line"><span class="keyword">final</span> <span class="type">student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">student</span>(<span class="number">18</span>,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">s.setAge(<span class="number">20</span>);</span><br><span class="line">s.setName(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">System.out.println(s.getName()+<span class="string">&quot; &quot;</span>+ s.getAge());</span><br><span class="line"></span><br><span class="line"><span class="comment">//数组</span></span><br><span class="line"><span class="keyword">final</span> <span class="type">int</span>[] ARR = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">ARR[<span class="number">0</span>]=<span class="number">10</span>;</span><br><span class="line">ARR[<span class="number">2</span>]=<span class="number">30</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; ARR.length; i++) &#123;</span><br><span class="line">System.out.println(ARR[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="抽象方法"><a href="#抽象方法" class="headerlink" title="抽象方法"></a>抽象方法</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>抽象方法：将共性的行为(方法)抽取到父类之后，由于每一个子类执行的内容是不一样的，所以在父类中不能确定<strong>具体的方法体</strong>。</p><p>抽象类：如果<strong>一个类中存在抽象方法</strong>，那么该类就必须声明为<strong>抽象类</strong></p><p>抽象类和抽象方法的定义格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">抽象方法定义格式：</span><br><span class="line">public abstract 返回值类型 方法名(参数列表)</span><br><span class="line">抽象类定义格式：</span><br><span class="line">public abstract class 类名&#123;&#125;</span><br></pre></td></tr></table></figure><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/抽象类和抽象方法注意事项.png" alt=""></p><p>3-4.①</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">public class Test &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">student s = new student(18,&quot;qwe&quot;);</span><br><span class="line">s.call();</span><br><span class="line">System.out.println(s.getAge()+&quot;，&quot;+s.getName());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class  student extends test1&#123;</span><br><span class="line"></span><br><span class="line">public student() &#123;</span><br><span class="line">super();</span><br><span class="line">// TODO Auto-generated constructor stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public student(int age, String name) &#123;</span><br><span class="line">super(age, name);</span><br><span class="line">// TODO Auto-generated constructor stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void call() &#123;</span><br><span class="line">System.out.println(&quot;ji&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public abstract class test1 &#123;</span><br><span class="line">private int age;</span><br><span class="line">private String name;</span><br><span class="line"></span><br><span class="line">public test1() &#123;</span><br><span class="line">super();</span><br><span class="line">// TODO Auto-generated constructor stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public test1(int age, String name) &#123;</span><br><span class="line">super();</span><br><span class="line">this.age = age;</span><br><span class="line">this.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public int getAge() &#123;</span><br><span class="line">return age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setAge(int age) &#123;</span><br><span class="line">this.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getName() &#123;</span><br><span class="line">return name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setName(String name) &#123;</span><br><span class="line">this.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void call() &#123;</span><br><span class="line">System.out.println(&quot;说话&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//第一行输出的是ji</span><br><span class="line">//第二行输出的是18，qwe</span><br></pre></td></tr></table></figure><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/抽象类例题1.png" alt=""></p><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/抽象类例题1分析.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">public class test &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">frog f = new frog(&quot;qwe&quot;,18);</span><br><span class="line">System.out.println(f.getAge()+f.getName());</span><br><span class="line">f.eat();</span><br><span class="line">f.dirnk();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public abstract class Animal &#123;</span><br><span class="line">private String name;</span><br><span class="line">private int age;</span><br><span class="line"></span><br><span class="line">public Animal() &#123;</span><br><span class="line">super();</span><br><span class="line">// TODO Auto-generated constructor stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Animal(String name, int age) &#123;</span><br><span class="line">super();</span><br><span class="line">this.name = name;</span><br><span class="line">this.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getName() &#123;</span><br><span class="line">return name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setName(String name) &#123;</span><br><span class="line">this.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public int getAge() &#123;</span><br><span class="line">return age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setAge(int age) &#123;</span><br><span class="line">this.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void dirnk() &#123;</span><br><span class="line">System.out.println(&quot;喝水&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public abstract  void eat();</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class Dog extends Animal &#123;</span><br><span class="line"></span><br><span class="line">public Dog() &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Dog(String name, int age) &#123;</span><br><span class="line">super(name, age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void eat() &#123;</span><br><span class="line">System.out.println(&quot;吃骨头&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class sheep extends Animal &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public sheep() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public sheep(String name, int age) &#123;</span><br><span class="line">super(name, age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void eat() &#123;</span><br><span class="line">System.out.println(&quot;吃草&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class test &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">frog f = new frog(&quot;qwe&quot;,18);</span><br><span class="line">System.out.println(f.getAge()+f.getName());</span><br><span class="line">f.eat();</span><br><span class="line">f.dirnk();</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h1 id="5接口"><a href="#5接口" class="headerlink" title="5接口"></a>5接口</h1><h2 id="①、定义与使用"><a href="#①、定义与使用" class="headerlink" title="①、定义与使用"></a>①、定义与使用</h2><p>接口用关键字interface来定义</p><p>public  interface  接口名{}</p><p>接口不能实例化</p><p>接口和类之间是实现关系，通过implements关键字表示</p><p>public class 类名 implements 接口名{}</p><p>接口的子类(实现类)</p><p>​    要么重写接口中的所有抽象方法</p><p>​    要么是抽象类</p><p><strong>注意1：</strong>接口和类的实现关系，可以单实现，也可以多实现</p><p>​                    public class 类名 implements 接口1,接口2{}</p><p><strong>注意2：</strong>实现类还可以在继承一个类的同时实现多个接口。</p><p>​                    public class 类名 extends 父类 implements 接口名1,接口名2{}</p><h2 id="②例题"><a href="#②例题" class="headerlink" title="②例题"></a>②例题</h2><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/接口例题1.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">frog</span> <span class="variable">f</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">frog</span>(<span class="string">&quot;张三&quot;</span>, <span class="number">10</span>);</span><br><span class="line">System.out.println(f.getAge()+f.getName());</span><br><span class="line">f.eat();</span><br><span class="line">f.swim();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Animal</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Animal</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line"><span class="built_in">super</span>();</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">rabbit</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">rabbit</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">rabbit</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line"><span class="built_in">super</span>(name, age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;吃胡萝卜&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">frog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> <span class="keyword">implements</span> <span class="title class_">swim</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">frog</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line"><span class="built_in">super</span>(name, age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;吃虫子&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">swim</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;青蛙再游泳&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> <span class="keyword">implements</span> <span class="title class_">swim</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Dog</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Dog</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line"><span class="built_in">super</span>(name, age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;吃骨头&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">swim</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;狗在游泳&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">swim</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">swim</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="③接口的细节"><a href="#③接口的细节" class="headerlink" title="③接口的细节"></a>③接口的细节</h2><h3 id="接口中成员的特点"><a href="#接口中成员的特点" class="headerlink" title="接口中成员的特点"></a>接口中成员的特点</h3><p>成员变量<br>                只能是常量</p><p>​                默认修饰符：public static final</p><p>构造方法<br>                没有</p><p>成员方法</p><p>​                只能是抽象方法</p><p>​                默认修饰符：public abstract</p><h3 id="接口和类之间的关系"><a href="#接口和类之间的关系" class="headerlink" title="接口和类之间的关系"></a>接口和类之间的关系</h3><p>类和类的关系</p><p>​        继承关系，只能单继承，不能多继承</p><p>类和接口的关系</p><p>​        实现关系，可以单实现，也可以多实现</p><p>接口和接口的关系</p><p>​        继承关系，可以单继承，也可以多继承(<strong>实现类中用的是接口继承的子类，那么实现类中就得把接口父类也一起用了</strong>)</p><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/接口的综合例题1.png" alt=""></p><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/接口的综合例题1分析.png" alt=""></p><h3 id="接口与接口的多继承"><a href="#接口与接口的多继承" class="headerlink" title="接口与接口的多继承"></a>接口与接口的多继承</h3><p>Java中，接口与接口之间是可以多继承的：也就是一个接口可以同时继承多个接口。大家一定要注意：</p><p><strong>类与接口是实现关系</strong></p><p><strong>接口与接口是继承关系</strong></p><p>接口继承接口就是把其他接口的抽象方法与本接口进行了合并。</p><p>案例演示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public interface Abc &#123;</span><br><span class="line">    void go();</span><br><span class="line">    void test();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/** 法律规范：接口*/</span><br><span class="line">public interface Law &#123;</span><br><span class="line">    void rule();</span><br><span class="line">    void test();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> *</span><br><span class="line"> *  总结：</span><br><span class="line"> *     接口与类之间是多实现的。</span><br><span class="line"> *     接口与接口之间是多继承的。</span><br><span class="line"> * */</span><br><span class="line">public interface SportMan extends Law , Abc &#123;</span><br><span class="line">    void run();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="④扩展：接口的细节"><a href="#④扩展：接口的细节" class="headerlink" title="④扩展：接口的细节"></a>④扩展：接口的细节</h2><p>不需要背，只要当idea报错之后，知道如何修改即可。</p><p>关于接口的使用，以下为语法上要注意的细节，虽然条目较多，但若理解了抽象的本质，无需死记硬背。</p><ol><li>当两个接口中存在相同抽象方法的时候，该怎么办？</li></ol><blockquote><p>只要重写一次即可。此时重写的方法，既表示重写1接口的，也表示重写2接口的。</p></blockquote><ol><li>实现类能不能继承A类的时候，同时实现其他接口呢？</li></ol><blockquote><p>继承的父类，就好比是亲爸爸一样<br>实现的接口，就好比是干爹一样<br>可以继承一个类的同时，再实现多个接口，只不过，要把接口里面所有的抽象方法，全部实现。</p></blockquote><ol><li>实现类能不能继承一个抽象类的时候，同时实现其他接口呢？</li></ol><blockquote><p>实现类可以继承一个抽象类的同时，再实现其他多个接口，只不过要把里面所有的抽象方法全部重写。</p></blockquote><ol><li>实现类Zi，实现了一个接口，还继承了一个Fu类。假设在接口中有一个方法，父类中也有一个相同的方法。子类如何操作呢？</li></ol><blockquote><p>处理办法一：如果父类中的方法体，能满足当前业务的需求，在子类中可以不用重写。<br>处理办法二：如果父类中的方法体，不能满足当前业务的需求，需要在子类中重写。</p></blockquote><ol><li>如果一个接口中，有10个抽象方法，但是我在实现类中，只需要用其中一个，该怎么办?</li></ol><blockquote><p>可以在接口跟实现类中间，新建一个中间类（适配器类）<br>让这个适配器类去实现接口，对接口里面的所有的方法做空重写。<br>让子类继承这个适配器类，想要用到哪个方法，就重写哪个方法。<br>因为中间类没有什么实际的意义，所以一般会把中间类定义为抽象的，不让外界创建对象</p></blockquote><h1 id="6、内部类"><a href="#6、内部类" class="headerlink" title="6、内部类"></a>6、内部类</h1><h2 id="①、定义"><a href="#①、定义" class="headerlink" title="①、定义"></a>①、定义</h2><p>在一个类的里面定义另一个类</p><p>举例：再A类的内部定义B类，B类就被定义为内部类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public class Outer//外部类</span><br><span class="line">public class Inner&#123;//内部类</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内部类的访问特点</p><p><strong>内部类可以直接访问外部类的成员，包括私有</strong></p><p><strong>外部类要访问内部类，必须创建对象</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">car</span> &#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="type">int</span> Age;</span><br><span class="line">String color;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(car c)</span> &#123;</span><br><span class="line">System.out.println(c.name);</span><br><span class="line"><span class="type">Engine</span> <span class="variable">e</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Engine</span>();</span><br><span class="line">System.out.println(e.enginename);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Engine</span>&#123;</span><br><span class="line">String enginename;</span><br><span class="line"><span class="type">int</span> enginenAge;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(enginename);</span><br><span class="line">System.out.println(name);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="②、内部类的分类"><a href="#②、内部类的分类" class="headerlink" title="②、内部类的分类"></a>②、内部类的分类</h2><h3 id="a、成员内部类"><a href="#a、成员内部类" class="headerlink" title="a、成员内部类"></a>a、成员内部类</h3><p>写在成员位置，属于外部类的成员</p><p>成员内部类可以被一些修饰符所修饰，比如：private，默认，protected(可以在本包的其他类中使用)，public，static等</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public class car&#123;</span><br><span class="line">String carname;</span><br><span class="line">int carAge;</span><br><span class="line">int carColor;</span><br><span class="line">class Engine&#123;</span><br><span class="line">String engineName;</span><br><span class="line">int engineAge;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="获取成员内部类对象的两种方式："><a href="#获取成员内部类对象的两种方式：" class="headerlink" title="获取成员内部类对象的两种方式："></a>获取成员内部类对象的两种方式：</h4><h5 id="一：外部类编写方法，对外提供内部类对象"><a href="#一：外部类编写方法，对外提供内部类对象" class="headerlink" title="一：外部类编写方法，对外提供内部类对象"></a>一：外部类编写方法，对外提供内部类对象</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public class test &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">Outer o = new Outer();//创建Outer对象</span><br><span class="line">System.out.println(o.getInstance()); //通过Outer对象调用方法，调用了内部类对象</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class Outer &#123;</span><br><span class="line">String name;</span><br><span class="line">private class Inner&#123;//私有化成员内部类</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Inner getInstance() &#123; //创建一个方法，可以对外提供内部类对象</span><br><span class="line">return new Inner();//返回内部类对象</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小拓展</p><p>在内部类调用外部类的变量;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">Outer.<span class="type">Inner</span> <span class="variable">i</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Outer</span>().<span class="keyword">new</span> <span class="title class_">Inner</span>();</span><br><span class="line">i.show();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Outer</span> &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Inner</span> &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">System.out.println(a);</span><br><span class="line">System.out.println(<span class="built_in">this</span>.a);</span><br><span class="line">System.out.println(Outer.<span class="built_in">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="二：直接创建"><a href="#二：直接创建" class="headerlink" title="二：直接创建"></a>二：直接创建</h5><p>格式：外部类名.内部类 对象名 = 外部类对象.内部类对象;</p><p>//如下代码所示</p><p>car.Engine  C = new car().new Engine();</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public class car&#123;</span><br><span class="line">String carname;</span><br><span class="line">int carAge;</span><br><span class="line">int carColor;</span><br><span class="line">class Engine&#123;</span><br><span class="line">String engineName;</span><br><span class="line">int engineAge;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="b、静态内部类"><a href="#b、静态内部类" class="headerlink" title="b、静态内部类"></a>b、静态内部类</h3><p>静态内部类是一种特殊的<strong>成员内部类</strong>。</p><p>静态内部类只能访问外部类中的静态变量和静态方法，如果想要访问非静态需要创建外部类对象</p><p>创建对象格式：外部类名.内部类名 对象名 = new 外部类名.内部类名();</p><p>Outer.Inner oi = new Outer.Inner();</p><p><strong>调用非静态方法的格式</strong>：先创建对象，用对象调用</p><p><strong>调用静态方法的格式</strong>：外部类名.内部类名.方法名();</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public class Car&#123;//外部类</span><br><span class="line">String carName;</span><br><span class="line">int carAge;</span><br><span class="line">static class Engine&#123;//静态内部类</span><br><span class="line">String engineName;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="c、局部内部类"><a href="#c、局部内部类" class="headerlink" title="c、局部内部类"></a>c、局部内部类</h3><ul><li><strong>局部内部类</strong> ：定义在<strong>方法中</strong>的类。</li></ul><p>定义格式:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class 外部类名 &#123;</span><br><span class="line">数据类型 变量名;</span><br><span class="line"></span><br><span class="line">修饰符 返回值类型 方法名(参数列表) &#123;</span><br><span class="line">// …</span><br><span class="line">class 内部类 &#123;</span><br><span class="line">// 成员变量</span><br><span class="line">// 成员方法</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>public class test {</p><pre><code>public static void main(String[] args) &#123;</code></pre><p>1、将内部类定义在方法里面就叫做局部内部类，类似于方法里面的局部变量<br>2、外界是无法直接使用，需要在方法内部创建对象并使用。<br>3、该类可以直接访问外部类的成员，也可以访问方法内的局部变量。<br>test</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public class test &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">//3调用show()，让代码执行</span><br><span class="line">Outer o = new Outer();</span><br><span class="line">o.show();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Outer</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">public class Outer &#123;</span><br><span class="line"></span><br><span class="line">int b = 20;</span><br><span class="line">public void show()&#123;</span><br><span class="line">int a = 10;</span><br><span class="line">//1局部内部类</span><br><span class="line">class Inner&#123; </span><br><span class="line"></span><br><span class="line">String name;</span><br><span class="line">int age;</span><br><span class="line"></span><br><span class="line">public void method1() &#123;</span><br><span class="line">System.out.println(a);</span><br><span class="line">System.out.println(b);</span><br><span class="line">System.out.println(&quot;局部内部类中的方法1&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void method2() &#123;</span><br><span class="line">System.out.println(&quot;局部内部类中的方法2&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//2创建局部内部类的对象</span><br><span class="line">Inner i = new Inner();</span><br><span class="line">System.out.println(i.name);</span><br><span class="line">System.out.println(i.age);</span><br><span class="line">i.method1();</span><br><span class="line">i.method2();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="③、-匿名内部类【重点】"><a href="#③、-匿名内部类【重点】" class="headerlink" title="③、 匿名内部类【重点】"></a>③、 匿名内部类【重点】</h2><h3 id="a、-概述"><a href="#a、-概述" class="headerlink" title="a、 概述"></a>a、 概述</h3><p><strong>匿名内部类</strong> ：是内部类的简化写法。他是一个隐含了名字的内部类。开发中，最常用到的内部类就是匿名内部类了。</p><h4 id="a-1-格式"><a href="#a-1-格式" class="headerlink" title="a.1 格式"></a>a.1 格式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> 类名或者接口名() &#123;</span><br><span class="line">     重写方法;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>包含了：</p><ul><li><p>继承或者实现关系</p></li><li><p>方法重写</p></li><li>创建对象</li></ul><p>所以从语法上来讲，这个整体其实是匿名内部类对象</p><h3 id="b、-什么时候用到匿名内部类"><a href="#b、-什么时候用到匿名内部类" class="headerlink" title="b、 什么时候用到匿名内部类"></a>b、 什么时候用到匿名内部类</h3><p><strong>实际上，如果我们希望定义一个只要使用一次的类，就可考虑使用匿名内部类。匿名内部类的本质作用</strong></p><p><strong>是为了简化代码</strong>。 </p><p>之前我们使用接口时，似乎得做如下几步操作：</p><ol><li>定义子类</li><li>重写接口中的方法</li><li>创建子类对象</li><li>调用重写后的方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Swim</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">swimming</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 定义接口的实现类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">implements</span> <span class="title class_">Swim</span> &#123;</span><br><span class="line">    <span class="comment">// 2. 重写抽象方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">swimming</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;狗刨式...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 3. 创建实现类对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="comment">// 4. 调用方法</span></span><br><span class="line">        s.swimming();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们的目的，最终只是为了调用方法，那么能不能简化一下，把以上四步合成一步呢？匿名内部类就是做这样的快捷方式。</p><h3 id="c、-匿名内部类前提和格式"><a href="#c、-匿名内部类前提和格式" class="headerlink" title="c、 匿名内部类前提和格式"></a>c、 匿名内部类前提和格式</h3><p>匿名内部类必须<strong>继承一个父类</strong>或者<strong>实现一个父接口</strong>。</p><p><strong>匿名内部类格式</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> 父类名或者接口名()&#123;</span><br><span class="line">    <span class="comment">// 方法重写</span></span><br><span class="line">    <span class="meta">@Override</span> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">method</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 执行语句</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="d、-使用方式"><a href="#d、-使用方式" class="headerlink" title="d、 使用方式"></a>d、 使用方式</h3><p>以接口为例，匿名内部类的使用，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Swim</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">swimming</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo07</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 使用匿名内部类</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Swim</span>() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">swimming</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;自由泳...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;.swimming();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 接口 变量 = new 实现类(); // 多态,走子类的重写方法</span></span><br><span class="line">        <span class="type">Swim</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Swim</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">swimming</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;蛙泳...&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        s2.swimming();</span><br><span class="line">        s2.swimming();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="e、-匿名内部类的特点"><a href="#e、-匿名内部类的特点" class="headerlink" title="e、 匿名内部类的特点"></a>e、 匿名内部类的特点</h3><ol><li>定义一个没有名字的内部类</li><li>这个类实现了父类，或者父类接口</li><li>匿名内部类会创建这个没有名字的类的对象</li></ol><h3 id="f、-匿名内部类的使用场景"><a href="#f、-匿名内部类的使用场景" class="headerlink" title="f、 匿名内部类的使用场景"></a>f、 匿名内部类的使用场景</h3><p>通常在方法的形式参数是接口或者抽象类时，也可以将匿名内部类作为参数传递。代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Swim</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">swimming</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo07</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 普通方式传入对象</span></span><br><span class="line">        <span class="comment">// 创建实现类对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        </span><br><span class="line">        goSwimming(s);</span><br><span class="line">        <span class="comment">// 匿名内部类使用场景:作为方法参数传递</span></span><br><span class="line">        <span class="type">Swim</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Swim</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">swimming</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;蝶泳...&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 传入匿名内部类</span></span><br><span class="line">        goSwimming(s3);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 完美方案: 一步到位</span></span><br><span class="line">        goSwimming(<span class="keyword">new</span> <span class="title class_">Swim</span>() &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">swimming</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;大学生, 蛙泳...&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        goSwimming(<span class="keyword">new</span> <span class="title class_">Swim</span>() &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">swimming</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;小学生, 自由泳...&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个方法,模拟请一些人去游泳</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">goSwimming</span><span class="params">(Swim s)</span> &#123;</span><br><span class="line">        s.swimming();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="④总结"><a href="#④总结" class="headerlink" title="④总结"></a>④总结</h2><p><img src="https://public-img.pages.dev/img.2/面向对象进阶/匿名内部类总结.png" alt=""></p><h1 id="封面图片"><a href="#封面图片" class="headerlink" title="封面图片"></a>封面图片</h1><p><img src="https://public-img.pages.dev/img/29.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>中国农业大学校长孙其信演讲</title>
      <link href="/2023/06/29/%E5%86%9C%E5%A4%A7%E6%A0%A1%E9%95%BF%E7%9A%84%E6%BC%94%E8%AE%B2/"/>
      <url>/2023/06/29/%E5%86%9C%E5%A4%A7%E6%A0%A1%E9%95%BF%E7%9A%84%E6%BC%94%E8%AE%B2/</url>
      
        <content type="html"><![CDATA[<p>各位同学：</p><p>大家好！</p><p>祝贺大家毕业！不知这些年你们的学习是否顺利、生活是否愉快，但能毕业就好！</p><p>前几天，清华大学的一位教授在朋友圈里说，一到毕业季，大学的毕业讲演就开始了：有的循循善诱，有的春风化雨，但经常是把自己做不到的事情都叮嘱给毕业生。我深以为然。但又能怎样？虽然未能做到，但至少没有熄灭眼里的光，<strong>因为学生正是老师眼里的光。</strong></p><p>本以为今年不会再作为院长做毕业致辞，也曾感到一丝解脱。因为我的讲话无非是基于当下的时代，向同学们做些叮嘱，<strong>而面对时代并与之较真，常常需要有扛着痛苦的勇气。</strong></p><p><strong>作为中国人，我们为国家保持长期的稳定发展以及取得的巨大成就而感到骄傲和自豪。</strong>但是，从世界范围来看，这个时代正在发生的一些事情，让我每天醒来都恍若隔世。战争灾难、凶残杀害、欺辱霸凌、网络暴力……知名学者煽动鼓噪狭隘民族主义，主流媒体情有独钟娱乐花边新闻，公共部门系统编造虚假统计数据……，等等，等等！</p><p>我从来没想到在21世纪的文明社会里还会发生这么多的事情。一百七十五年前，马克思曾感慨道，<strong>“一切坚固的东西都烟消云散了，一切神圣的东西都被亵渎了”</strong>。今天，我们需要再次用冷静的眼光看待我们的处境，需要再次面对一百零五年前梁漱溟之父梁济因迷茫未来而投湖殉清的生死之问：<strong>“这个世界会好吗？”</strong></p><p><strong>从世界范围来看，我每每感到“三观”被打破，底线被击穿，想象力严重赤字。我对“明天会更好”极其怀疑，对“文明的进程”极度不确定。</strong>我们时常忙碌在各种无可奈何的工作中，除了满心疲惫外，常常感受不到存在的意义是什么。我的一位同事曾说，以前一般到周五才会感到疲累，而现在到周三就开始倦乏，且不知道为什么会如此。</p><p>同学们，这或许就是你们即将穿行的世间。请不要怪我在毕业之际不去对未来做一番令人亢奋的憧憬，其实你们也不缺少这个。</p><p>在此时代，我想叮嘱大家“保持底线”，因为人类行为正在不断击穿底线；我想叮嘱大家“回归常识”，因为人类行动常常违背常识；我想叮嘱大家“真实做人”，因为人类交往每每是合作表演；我想叮嘱大家“高雅做事”，因为人类活动往往是江湖共谋；我想叮嘱大家“把人当人”，因为人类发展已经将一个个鲜活的人看作一个个数字；我想叮嘱大家“记住创伤”，因为人类会在亢奋中轻易忘却曾经经历的苦难。</p><p>但是，<strong>我今天更想叮嘱大家：“在权力的包围中保持清醒！”</strong></p><p>同学们，在你们离开校园进入社会之后，你们将立刻感受到权力的无处不在，甚至无所不能。</p><p>无论你们是单位领导还是普通员工，只要工作岗位与人相关，就拥有了某种权力；无论你们从事什么工作，哪怕是灵活就业，甚或不从事任何工作，只要与公共部门或他人打交道，就必然要面对各种权力。因此，你们会更加深刻地感受到自己身处权力的包围之中。</p><p><strong>我很担心，你们会在权力的包围中“入乡随俗”，渐渐地迷恋上权力，迷失了自我，迷茫了人生。</strong></p><p><strong>权力确实有着巨大的吸引力，可以让人迷恋上瘾，从而变得“精致”圆滑。</strong>多年前，有一位大学生返乡，由于其母是地方领导，因此自他下火车开始，便有各种妥帖的安排，从食宿到出行，无微不至，其间还伴随着各种赞许和捧场。那时我的第一感受并不是排斥，而是觉得，或许每个人都有可能对如此周密的安排上瘾，也都会迷恋上这种无处不在的优越感。还有一次，某著名高校的一位教授曾兴奋地言说他到地方调研，该地领导亲自接待，其一腔一势无不流露出对这种优越感的无比陶醉。</p><p>正因如此，<strong>有些人在不经意间开始迎合权力，追逐权力。在权力面前，他们惯用一套左右逢源、精致圆顺的“话术”，“见什么人说什么话，在什么场合说什么话”。</strong>乍听起来，会觉得别人怎么“那么懂事、那么会说话”，但仔细一想，总感觉不那么真实，不像是其本真的话语。</p><p><strong>权力确实有着巨大的支配力，可以让人变得傲慢任性，从而迷失自我。</strong>权力系统的一个动作就可以让收割机在高速公路上排起长队，将绿水青山开垦成梯田泥石流，将昨日的“退耕还林”变为今日的“退林还耕”。权力总是被摆在显位并被推至高位。久而久之，一些人习惯了一切以自我为中心。某地举办学术会议时，年过花甲的老教授在烈日下排好站位，等候年轻的领导前来合影，一等就是近20分钟。更为严重的是，权力还可能制造出无所不能的幻象，因此在光天化日之下“强行变码”、“指鼠为鸭”。</p><p>正因如此，<strong>有些人开始迷失自我，将拥有权力视作代表真理——即便是不经意间说出的一句话，也常常被合理化、合法化、操作化。</strong>他们很难了解或感知权力可能给无数的普通人带去无奈感、无力感、无助感，以及由此产生不安感、挫折感、疏离感。</p><p><strong>权力确实有着巨大的规训力，可以让人变得机械刻板，从而麻木迷茫。</strong>职场培训常常要求学生要学会“服从”，这虽然听起来刺耳，但不得不承认已经成为实践中的惯常做法。一位学生在南方某污染治理部门工作，每天制造海量的数据报表，唯一要求就是确保数据达标；一位学生在西部某督查部门工作，每天按照上级要求上报百分之百的村民扫码率，但很多村庄的村民甚至都没听说过扫码这件事；一位学生在东部某地负责食品安全督导工作，每次也只是在乡村超市前停留半分钟拍照，有了照片便是“尽职免责”。一些学生刚入职时强烈抱怨形式主义，但一个月之后，他们自己都承认慢慢习惯了形式主义。</p><p>正因如此，就如鱼儿每天在水里游来游去却不知水为何物一样，<strong>当人们形成无意识的惯性后，便陷入不断加速的循环之中，无限地忙碌着，眼里只有制造出来的文件、数据、痕迹，而没有其背后活生生的人。</strong>他们每天都在重复人类学家大卫·格雷伯所戏称的没有意义、不必要、甚至有害的“狗屁工作”，同时还要熬夜加班、假装热爱。</p><p>同学们，在权力的诱惑、支配和规训之下，其实每个人都很难独善其身。尽管如此，<strong>我还是希望你们不要因为权力的吸引力而变得“精致”圆滑，不要因为权力的支配力而变得傲慢任性，也不要因为权力的规训力而变得麻木迷茫。</strong>因为，你们永远都是老师眼里的那束光。</p><p>在我看来，<strong>学生最大的特点就是简单、真实、干净。**</strong>大家从小学开始就学习要求真、求善、求美。**在过去的毕业讲话中，我说要“在复杂的社会里守住纯真”，就是希望你们做事时求真；我说要“像弱者一样感受世界”，就是希望你们待人时求善；我说要“在理性的路上记住感性”，就是希望你们在对待世界、社会、自然和生活时求美。</p><p>同学们，<strong>权力从本质上并无好坏之分，但权力的实践既可能带来说谎造假、使坏行恶、比丑摆烂，也可能实现诚信真实、积福行善、审美向上。</strong></p><p><strong>面对权力的包围，人们或许会因为眼中只有权力而忘掉人民，会因为权力无所不能而忘掉真理，会因为机械执行权力而忘掉背后的人和工作的意义。这样下去，尽管可以获得一些荣誉，但却缺乏美德；也许可以享受一些快活，但却缺乏幸福；或许可以拥有一些权威，但却缺乏尊重。</strong>这样的世界并不真实，这样的社会难言善良，这样的人生并不美丽。我相信你们也是这样认为的。</p><p><strong>面对权力的包围，我不能要求你们像一枚鸡蛋撞向坚硬的高墙，但希望你们能够保留装在脆弱外壳里那颗真善美的灵魂；希望你们不要熄灭灵魂深处那束真善美的光；希望你们保持向着真善美的那束光自由奔跑的勇气，即便摔了一跤，也可以面带微笑。</strong>你们的奔跑或许可以让更多人获得平等，让更多人享有自由，让更多人得到尊重。</p><p>同学们，在去年的学院教代会上，我结合担任8年院长的经历，分享了学院治理的感悟。我说，<strong>学院权力的最高境界就是让师生感觉不到权力的存在。</strong>中央要求，任何人行使权力都必须为人民服务，国家最大的权力就是为人民服务。我想，<strong>只要不熄灭真善美的这束光，不泄掉自由奔跑的勇气，不丧失人类解放的信心，或许某天，人类可以被权力包围而感觉不到权力的存在。</strong>我相信，那一定会是最优的权力、最美的世界、最好的社会。</p><p>同学们，这些年来，你们或许受了些委屈。因为在有些人看来，人文与发展学院和人文社会科学无足轻重，小白楼和民主楼也没有那么宏伟高大。但是，<strong>我们把低矮的楼宇收拾得干净、亮堂、温馨，让每一位老师都感觉到放松、平静、和谐；我们让沉闷的课堂散发着思想、精神、价值，使每一位学生都感受到自由、平等、尊重。</strong></p><p>在你们即将离开学院之际，我希望你们，亲爱的同学们，<strong>能够带着一股无法抗拒的力量，向社会表明人文与发展学院的理想，那就是：不让虚假蒙蔽真实，不让邪恶取代善良，不让丑陋压制美好！</strong></p><p>谢谢大家！</p>]]></content>
      
      
      <categories>
          
          <category> 校长演讲 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo常用命令</title>
      <link href="/2023/06/29/hexo%E6%93%8D%E4%BD%9C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/06/29/hexo%E6%93%8D%E4%BD%9C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="1、图片上传"><a href="#1、图片上传" class="headerlink" title="1、图片上传"></a>1、图片上传</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 将更改提交</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;更新图片&quot;</span><br><span class="line"># 推送至github仓库</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h1 id="2、上传博客"><a href="#2、上传博客" class="headerlink" title="2、上传博客"></a>2、上传博客</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo g; hexo s //本地启动</span><br><span class="line">hexo cl; hexo g; hexo d //上传到github</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>eclipse快捷键</title>
      <link href="/2023/06/26/eclipse%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2023/06/26/eclipse%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>结构体</title>
      <link href="/2023/06/23/%E7%BB%93%E6%9E%84%E4%BD%93/"/>
      <url>/2023/06/23/%E7%BB%93%E6%9E%84%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<h1 id="1枚举"><a href="#1枚举" class="headerlink" title="1枚举"></a>1枚举</h1><h2 id="①定义"><a href="#①定义" class="headerlink" title="①定义"></a>①定义</h2><p>​    一个集的<strong>枚举</strong>是列出某些有穷<a href="https://baike.baidu.com/item/序列/1302588?fromModule=lemma_inlink">序列</a>集的所有成员的程序，或者是一种特定类型对象的计数。这两种类型经常（但不总是）重叠。</p><h2 id="②用法"><a href="#②用法" class="headerlink" title="②用法"></a>②用法</h2><p>enum 枚举类型名字{名字0,名字1…,名字n};</p><p>枚举梁可以做为值</p><p>枚举类型可以跟上enum作为类型</p><p>以整数来作为内部计算和外部输入输出的</p><p>实例</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">color</span> &#123;</span> RED, YELLOW, GREEN &#125;;<span class="comment">//RED数值是从0开始的，和数组类似，yellow是1</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span>* argv[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> color = <span class="number">-1</span>;</span><br><span class="line"><span class="type">char</span>* colorName = <span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入你喜欢的颜色的代码:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;color);</span><br><span class="line"><span class="keyword">switch</span> (color)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> RED:colorName = <span class="string">&quot;red&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> YELLOW: colorName = <span class="string">&quot;yellow&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> GREEN: colorName = <span class="string">&quot;green&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>: colorName = <span class="string">&quot;unknown&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;你喜欢的颜色是%s\n&quot;</span>, colorName); <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输入0 1 2</span></span><br></pre></td></tr></table></figure><h1 id="2结构"><a href="#2结构" class="headerlink" title="2结构"></a>2结构</h1><h2 id="①结构类型"><a href="#①结构类型" class="headerlink" title="①结构类型"></a>①结构类型</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//原式</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">date</span> //结构类型</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> month;</span><br><span class="line"><span class="type">int</span> day;</span><br><span class="line"><span class="type">int</span> year;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span>* argv[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">date</span> <span class="title">today</span>;</span> <span class="comment">//结构变量</span></span><br><span class="line">today.month = <span class="number">20</span>;</span><br><span class="line">today.day = <span class="number">12</span>;</span><br><span class="line">today.year = <span class="number">2022</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Today&#x27;s date is %i-%i-%i.\n&quot;</span>, today.year, today.month, today.day);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化变量</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span>* argv[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">date</span> <span class="title">today</span>=</span>&#123; .month=<span class="number">20</span>, .year=<span class="number">2022</span>&#125;;</span><br><span class="line">    <span class="comment">//与数组类似，没有初始化的变量都会被赋值为0</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Today&#x27;s date is %i-%i-%i.\n&quot;</span>, today.year, today.month, today.day);</span><br><span class="line">    <span class="comment">//%i和%d在输出时无区别，但在输入时，%i可以识别八进制 十六进制，并且将其做对应数处理。</span></span><br><span class="line">    <span class="comment">//但%d仅能识别十进制</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构体和结构体之间可以直接进行赋值</p><p>例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">struct date today;</span><br><span class="line">struct date day;</span><br><span class="line">day=today;</span><br><span class="line">//但修改day里的元素不会影响today的元素</span><br><span class="line"></span><br><span class="line">//和数组不同，结构变量的名字并不是结构变量的地址，必须使用&amp;运算符</span><br><span class="line">struct date *pDate=&amp;today;</span><br></pre></td></tr></table></figure><h2 id="②结构与函数"><a href="#②结构与函数" class="headerlink" title="②结构与函数"></a>②结构与函数</h2><h3 id="A-结构可以作为函数的参数"><a href="#A-结构可以作为函数的参数" class="headerlink" title="A 结构可以作为函数的参数"></a>A 结构可以作为函数的参数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span> &#123;</span></span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="type">int</span> y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> point <span class="title function_">getStruct</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//一个临时的结构变量，用于返回参数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">output</span><span class="params">(<span class="keyword">struct</span> point)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span>* argv[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span> <span class="title">y</span> =</span> &#123; <span class="number">0</span>,<span class="number">0</span> &#125;;</span><br><span class="line">y = getStruct();</span><br><span class="line">output(y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> point <span class="title function_">getStruct</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span> <span class="title">p</span>;</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p.x);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p.y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span>, p.x, p.y);</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">output</span><span class="params">(<span class="keyword">struct</span> point p)</span><span class="comment">//结构体做变量</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%d&quot;</span>, p.x, p.y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C语言结构传递的都是值，但经常有需要数据传输，所以构建临时的结构变量，用于返回给调用者</p><p>加入了指针后的样子</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span> &#123;</span></span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="type">int</span> y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> point* <span class="title function_">getStruct</span><span class="params">(<span class="keyword">struct</span> point*)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">output</span><span class="params">(<span class="keyword">struct</span> point)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">const</span> <span class="keyword">struct</span> point* p)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span>* argv[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span> <span class="title">y</span> =</span> &#123; <span class="number">0</span>,<span class="number">0</span> &#125;;</span><br><span class="line">getStruct(&amp;y);</span><br><span class="line">output(y);</span><br><span class="line">output(*getStruct(&amp;y));<span class="comment">//*是用来取出右边所指的那个变量</span></span><br><span class="line">print(getStruct(&amp;y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> point* <span class="title function_">getStruct</span><span class="params">(<span class="keyword">struct</span> point* p)</span> &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p-&gt;x);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p-&gt;y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span>, p-&gt;x, p-&gt;y);<span class="comment">// &quot;-&gt;&quot;：指针所指的结构变量中的成员</span></span><br><span class="line"><span class="keyword">return</span> p;<span class="comment">//返回的是一个指针</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">output</span><span class="params">(<span class="keyword">struct</span> point p)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%d&quot;</span>, p.x, p.y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">const</span> <span class="keyword">struct</span> point* p)</span></span><br><span class="line">&#123;</span><br><span class="line">print(<span class="string">&quot;%d,%d&quot;</span>, p-&gt;x, p-&gt;y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="③结构体中的结构"><a href="#③结构体中的结构" class="headerlink" title="③结构体中的结构"></a>③结构体中的结构</h2><p><img src="D:\Hexo blog\blog-demo\source\img.2\结构体-数组.png" alt="结构体-数组"></p><p><img src="D:\Hexo blog\blog-demo\source\img.2\结构体-数组.02.png" alt="结构体-数组.02"></p><p>小测验</p><p>有如下变量定义，则对data中的a的正确引用是：</p><p>struct sk {<br>    int a;<br>    float b;<br>} data, <em>p=&data;<br>A.(</em>p).data.a<br>B.(*p).a<br>C.p-&gt;data.a<br>D.p.data.a</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">答案:B</span><br></pre></td></tr></table></figure><h1 id="3例题"><a href="#3例题" class="headerlink" title="3例题"></a>3例题</h1><h2 id="1结构体存储学生信息"><a href="#1结构体存储学生信息" class="headerlink" title="1结构体存储学生信息"></a>1结构体存储学生信息</h2><p>使用结构体储存学生信息（包括学号，姓名，<code>3</code>门课程成绩，总分），要求实现对学生信息修改和删除操作，最多<code>50</code>名学生。</p><p>测试输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">10 3</span><br><span class="line">1 Siyu 90 90 90</span><br><span class="line">2 Amy 60 70 94</span><br><span class="line">3 Jack 60 60 98</span><br><span class="line">4 Jack 77 90 60</span><br><span class="line">5 Banana 60 60 40</span><br><span class="line">6 White 60 60 60</span><br><span class="line">7 Pinkman 60 60 60</span><br><span class="line">8 Fring 60 60 70</span><br><span class="line">9 Ehrmantraut 80 63 61</span><br><span class="line">10 Schrader 99 66 100</span><br><span class="line">1 Jack</span><br><span class="line">2 1 100 100 100</span><br><span class="line">3 10</span><br></pre></td></tr></table></figure><p>测试输入数据说明： 输入一个<code>n</code>，<code>q</code>，标书下面<code>n</code>行则是<code>n</code>个学生的信息，再下<code>q</code>行则是对应的操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 name //为根据名字查询操作</span><br><span class="line">2 sno num1 num2 num2 //为修改分数操作，修改学号为sno的3门成绩</span><br><span class="line">3 sno //为删除操作</span><br></pre></td></tr></table></figure><p>预期输出：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span> Jack <span class="number">60</span> <span class="number">60</span> <span class="number">98</span> <span class="number">218</span></span><br><span class="line"><span class="number">4</span> Jack <span class="number">77</span> <span class="number">90</span> <span class="number">60</span> <span class="number">227</span></span><br><span class="line"><span class="number">1</span> Siyu <span class="number">100</span> <span class="number">100</span> <span class="number">100</span> <span class="number">300</span></span><br><span class="line"><span class="number">2</span> Amy <span class="number">60</span> <span class="number">70</span> <span class="number">94</span> <span class="number">224</span></span><br><span class="line"><span class="number">3</span> Jack <span class="number">60</span> <span class="number">60</span> <span class="number">98</span> <span class="number">218</span></span><br><span class="line"><span class="number">4</span> Jack <span class="number">77</span> <span class="number">90</span> <span class="number">60</span> <span class="number">227</span></span><br><span class="line"><span class="number">5</span> Banana <span class="number">60</span> <span class="number">60</span> <span class="number">40</span> <span class="number">160</span></span><br><span class="line"><span class="number">6</span> White <span class="number">60</span> <span class="number">60</span> <span class="number">60</span> <span class="number">180</span></span><br><span class="line"><span class="number">7</span> Pinkman <span class="number">60</span> <span class="number">60</span> <span class="number">60</span> <span class="number">180</span></span><br><span class="line"><span class="number">8</span> Fring <span class="number">60</span> <span class="number">60</span> <span class="number">70</span> <span class="number">190</span></span><br><span class="line"><span class="number">9</span> Ehrmantraut <span class="number">80</span> <span class="number">63</span> <span class="number">61</span> <span class="number">204</span></span><br><span class="line"><span class="number">10</span> Schrader <span class="number">99</span> <span class="number">66</span> <span class="number">100</span> <span class="number">265</span></span><br><span class="line"><span class="number">1</span> Siyu <span class="number">100</span> <span class="number">100</span> <span class="number">100</span> <span class="number">300</span></span><br><span class="line"><span class="number">2</span> Amy <span class="number">60</span> <span class="number">70</span> <span class="number">94</span> <span class="number">224</span></span><br><span class="line"><span class="number">3</span> Jack <span class="number">60</span> <span class="number">60</span> <span class="number">98</span> <span class="number">218</span></span><br><span class="line"><span class="number">4</span> Jack <span class="number">77</span> <span class="number">90</span> <span class="number">60</span> <span class="number">227</span></span><br><span class="line"><span class="number">5</span> Banana <span class="number">60</span> <span class="number">60</span> <span class="number">40</span> <span class="number">160</span></span><br><span class="line"><span class="number">6</span> White <span class="number">60</span> <span class="number">60</span> <span class="number">60</span> <span class="number">180</span></span><br><span class="line"><span class="number">7</span> Pinkman <span class="number">60</span> <span class="number">60</span> <span class="number">60</span> <span class="number">180</span></span><br><span class="line"><span class="number">8</span> Fring <span class="number">60</span> <span class="number">60</span> <span class="number">70</span> <span class="number">190</span></span><br><span class="line"><span class="number">9</span> Ehrmantraut <span class="number">80</span> <span class="number">63</span> <span class="number">61</span> <span class="number">204</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> Count;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> &#123;</span></span><br><span class="line"><span class="type">char</span> sno[<span class="number">20</span>], name[<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> math, english, chinese, sum;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="keyword">struct</span> student stu)</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %s %d %d %d %d\n&quot;</span>, stu.sno, stu.name, stu.math, stu.english, stu.chinese, stu.sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">query_stu</span><span class="params">(<span class="keyword">struct</span> student s[], <span class="type">char</span>* name)</span> &#123;</span><br><span class="line"><span class="comment">/*********Begin*********/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Count; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(s[i].name, name) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %s %d %d %d %d\n&quot;</span>, s[i].sno, s[i].name, s[i].math, s[i].english, s[i].chinese, s[i].sum);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*********End**********/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">delete_stu</span><span class="params">(<span class="keyword">struct</span> student s[], <span class="type">char</span>* sno)</span> &#123;</span><br><span class="line"><span class="comment">/*********Begin*********/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Count - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strlen</span>(s[i].sno) &gt;= <span class="built_in">strlen</span>(sno))</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(s[i].sno, sno) &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">strcpy</span>(s[i].sno, s[i + <span class="number">1</span>].sno);</span><br><span class="line"><span class="built_in">strcpy</span>(s[i].name, s[i + <span class="number">1</span>].name);</span><br><span class="line">s[i].math = s[i + <span class="number">1</span>].math;</span><br><span class="line">s[i].english = s[i + <span class="number">1</span>].english;</span><br><span class="line">s[i].chinese = s[i + <span class="number">1</span>].chinese;</span><br><span class="line">s[i].sum = s[i + <span class="number">1</span>].sum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*********End**********/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">update_stu</span><span class="params">(<span class="keyword">struct</span> student s[], <span class="type">char</span>* sno, <span class="type">int</span> math, <span class="type">int</span> english, <span class="type">int</span> chinese)</span> &#123;</span><br><span class="line"><span class="comment">/*********Begin*********/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Count; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(s[i].sno, sno) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">s[i].math = math;</span><br><span class="line">s[i].english = english;</span><br><span class="line">s[i].chinese = chinese;</span><br><span class="line">s[i].sum = s[i].math + s[i].english + s[i].chinese;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*********End**********/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, q;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">students</span>[50];</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;q);</span><br><span class="line">Count = n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="comment">/*********Begin*********/</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s %s %d %d %d&quot;</span>, students[i].sno, &amp;students[i].name, &amp;students[i].math, &amp;students[i].english, &amp;students[i].chinese);</span><br><span class="line">students[i].sum = students[i].math + students[i].english + students[i].chinese;</span><br><span class="line"><span class="comment">/*********End**********/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (q--) &#123;</span><br><span class="line"><span class="type">int</span> op;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;op);</span><br><span class="line"><span class="type">char</span> sno[<span class="number">20</span>], name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">if</span> (op == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, name);</span><br><span class="line">query_stu(students, name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">2</span>) &#123;</span><br><span class="line"><span class="type">int</span> a, b, c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s%d%d%d&quot;</span>, sno, &amp;a, &amp;b, &amp;c);</span><br><span class="line">update_stu(students, sno, a, b, c);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Count; i++)</span><br><span class="line">print(students[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, sno);</span><br><span class="line">delete_stu(students, sno);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Count - <span class="number">1</span>; i++)</span><br><span class="line">print(students[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数组运算</title>
      <link href="/2023/06/23/%E6%95%B0%E7%BB%84-%E6%95%B0%E7%BB%84%E8%BF%90%E7%AE%97/"/>
      <url>/2023/06/23/%E6%95%B0%E7%BB%84-%E6%95%B0%E7%BB%84%E8%BF%90%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<h1 id="1数组作为函数参数时，往往必须再用另一个参数来传入数组的大小"><a href="#1数组作为函数参数时，往往必须再用另一个参数来传入数组的大小" class="headerlink" title="1数组作为函数参数时，往往必须再用另一个参数来传入数组的大小"></a>1数组作为函数参数时，往往必须再用另一个参数来传入数组的大小</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">/**找出key在数组a中的位置</span><br><span class="line">@param key 要寻找到数字</span><br><span class="line">@param a 要寻找到数组</span><br><span class="line">@param length 数组a的长度</span><br><span class="line">@return 如果找到，返回其在a中的位置;如果找不到则返回-1</span><br><span class="line">*/</span><br><span class="line">int search(int key,int a[],int length);//下面是部分关键代码</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">int a[]=&#123;2,4,6,7,1,3,5,9,11,13,23,14,32&#125;;</span><br><span class="line">int x;</span><br><span class="line">int loc;</span><br><span class="line">printf(&quot;请输入一个数字：&quot;);</span><br><span class="line">scanf(&quot;%d&quot;,&amp;x);</span><br><span class="line">loc=search(x,a,sizeof(a)/sizeof(a[0]));</span><br><span class="line">if(loc!=-1)&#123;</span><br><span class="line">printf(&quot;%d在第%d个位置上\n&quot;,x);</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">int search(int key,int a[],int length)</span><br><span class="line">&#123;</span><br><span class="line">int ret -1;</span><br><span class="line">int i;</span><br><span class="line">for(i=0;i&lt;length;i++)</span><br><span class="line"> &#123;</span><br><span class="line">  if(a[i] == key)&#123;</span><br><span class="line">  ret = i;</span><br><span class="line">  break;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">return ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：数组作为函数参数是时</p><p>①不能在 [] 中给出数组大小</p><p>②不能用sizeof计算数组的元素个数</p><h2 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h2><p>为什么不能用sizeof计算数组的元素个数？</p><h1 id="2二维数组初始化"><a href="#2二维数组初始化" class="headerlink" title="2二维数组初始化"></a>2二维数组初始化</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">若有：</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[][<span class="number">3</span>] = &#123;&#123;<span class="number">0</span>&#125;,&#123;<span class="number">1</span>&#125;,&#123;<span class="number">2</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">则</span><br><span class="line"></span><br><span class="line">a[<span class="number">1</span>][<span class="number">2</span>]=___</span><br><span class="line">答案为：<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>类型默认为<span class="number">0</span>，该初始化相当于<span class="type">int</span> a[][<span class="number">3</span>] = &#123;&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>&#125;&#125;</span><br><span class="line">或</span><br><span class="line"><span class="type">int</span> a[ ][<span class="number">3</span>]=&#123;&#123;<span class="number">0</span>&#125;,&#123;<span class="number">1</span>&#125;,&#123;<span class="number">2</span>&#125;&#125;;</span><br><span class="line">第二维参数为<span class="number">3</span>，但赋值的时候三个都是只有一个整数，另外两个默认填充<span class="number">0</span></span><br><span class="line">等同于<span class="type">int</span> a[<span class="number">3</span>][<span class="number">3</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">2</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">所以a[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="3计算数组a-x-长度"><a href="#3计算数组a-x-长度" class="headerlink" title="3计算数组a[x]长度"></a>3计算数组a[x]长度</h1><p>sizeof(a)/sizeof(a[0])</p><h1 id="4例题"><a href="#4例题" class="headerlink" title="4例题"></a>4例题</h1><h2 id="①多项式加法"><a href="#①多项式加法" class="headerlink" title="①多项式加法"></a>①多项式加法</h2><p>一个多项式可以表达为x的各次幂与系数乘积的和，比如：</p><p>2x6+3x5+12x3+6x+20</p><p>现在，你的程序要读入两个多项式，然后输出这两个多项式的和，也就是把对应的幂上的系数相加然后输出。</p><p>程序要处理的幂最大为100。</p><p><strong>输入格式:</strong></p><p>总共要输入两个多项式，每个多项式的输入格式如下：</p><p>每行输入两个数字，第一个表示幂次，第二个表示该幂次的系数，所有的系数都是整数。第一行一定是最高幂，最后一行一定是0次幂。</p><p>注意第一行和最后一行之间不一定按照幂次降低顺序排列；如果某个幂次的系数为0，就不出现在输入数据中了；0次幂的系数为0时还是会出现在输入数据中。</p><p><strong>输出格式：</strong></p><p>从最高幂开始依次降到0幂，如：</p><p>2x6+3x5+12x3-6x+20</p><p>注意其中的x是小写字母x，而且所有的符号之间都没有空格，如果某个幂的系数为0则不需要有那项。</p><p><strong>输入样例：</strong></p><p>6 2</p><p>5 3</p><p>3 12</p><p>1 6</p><p>0 20</p><p>6 2</p><p>5 3</p><p>2 12</p><p>1 6</p><p>0 20</p><p><strong>输出样例：</strong></p><p>4x6+6x5+12x3+12x2+12x+40</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> num[<span class="number">101</span>] = &#123; <span class="number">0</span> &#125;;<span class="comment">//初始化为0，因为次幂最大为100，所以在让下标作为次幂时，要把num[100]这个元素包括进去，所以数组长度101</span></span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"><span class="type">int</span> j = <span class="number">2</span>;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (; j &gt; <span class="number">0</span>; j--)<span class="comment">//循环两次输入多项式</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">num[a] += b;    <span class="comment">//用下标作为次幂，数组num的元素的值作为系数。当两次输入多项式有相同的次幂时，让系数相加</span></span><br><span class="line">&#125; <span class="keyword">while</span> (a != <span class="number">0</span>); <span class="comment">//输入0 0结束程序</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">100</span>; i &gt;= <span class="number">0</span>; i--)<span class="comment">//遍历数组，从大到小</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;<span class="comment">//---------------------------------------------------第二种②</span></span><br><span class="line"><span class="keyword">if</span> (num[i] &gt; <span class="number">1</span> || num[i] &lt; <span class="number">-1</span>)<span class="comment">//当系数不为0或1、-1时</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">0</span>)<span class="comment">//次幂为0</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, num[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">1</span>)<span class="comment">//次幂为1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%dx&quot;</span>, num[i]);</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i &gt; <span class="number">1</span>)<span class="comment">//次幂大于1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%dx%d&quot;</span>, num[i], i);</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (num[i] == <span class="number">1</span>)<span class="comment">//当系数为1,则要注意系数±1的绝对值不显示</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">0</span>)<span class="comment">//次幂为0</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">1</span>)<span class="comment">//次幂为1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;x&quot;</span>);</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i &gt; <span class="number">1</span>)<span class="comment">//次幂大于1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;x%d&quot;</span>, i);</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (num[i] == <span class="number">-1</span>)<span class="comment">//当系数为-1,则要注意系数±1的绝对值不显示</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">0</span>)<span class="comment">//次幂为0</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">1</span>)<span class="comment">//次幂为1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-x&quot;</span>);</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i &gt; <span class="number">1</span>)<span class="comment">//次幂大于1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-x%d&quot;</span>, i);</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (num[i] == <span class="number">0</span> &amp;&amp; i == <span class="number">0</span>)<span class="comment">//当次幂和系数都为0，要输出0</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag &amp;&amp; num[i - <span class="number">1</span>] &gt;= <span class="number">0</span>)<span class="comment">//当flag为1且该次幂的下一个次幂的系数不为0和负数，在后面加上＋号</span></span><br><span class="line">&#123;     <span class="comment">//---------------第一种①num[i-1]&gt;0----------------第二种②num[i-1]&gt;=0</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;+&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="②鞍点（5分）"><a href="#②鞍点（5分）" class="headerlink" title="②鞍点（5分）"></a>②鞍点（5分）</h2><p>题目内容： 给定一个n*n矩阵A。矩阵A的鞍点是一个位置（i，j），在该位置上的元素是第i行上的最大数，第j列上的最小数。一个矩阵A也可能没有鞍点。 你的任务是找出A的鞍点。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int a[100][100];</span><br><span class="line">int n;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">int i,j,k; //定义三个循环变量</span><br><span class="line">for (i = 0; i &lt; n;i++) //向数组中输入数据</span><br><span class="line">&#123;</span><br><span class="line">for(j = 0; j &lt; n ; j++)</span><br><span class="line">&#123;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int max = 0;    </span><br><span class="line">int min = 0;</span><br><span class="line">int row = 0,col = 0;  //鞍点的行和列 </span><br><span class="line">for (i = 0; i &lt; n; i++ )</span><br><span class="line">&#123;</span><br><span class="line">max = a[i][0];</span><br><span class="line">for( j = 0; j &lt; n ; j ++ )  //首先在每列找最大值 </span><br><span class="line">&#123;</span><br><span class="line">if (max &lt; a[i][j])</span><br><span class="line">&#123;</span><br><span class="line">max = a[i][j];</span><br><span class="line">col = j;            //如果找到，就用鞍点的列col来记录该列号 </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">min = max;</span><br><span class="line">for( k = 0; k &lt; n; k ++ )</span><br><span class="line">&#123;</span><br><span class="line">if(a[k][col] &lt; min)</span><br><span class="line">&#123;</span><br><span class="line">min = a[k][col];</span><br><span class="line">row = k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (max == min)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;%d %d&quot;,row,col);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">if ( max != min )</span><br><span class="line">printf(&quot;NO&quot;); </span><br><span class="line">return 0; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="③字符串统计"><a href="#③字符串统计" class="headerlink" title="③字符串统计"></a>③字符串统计</h2><p>题目描述:输入一段字符(由空格、字母和数字几种组成，保证开头不为空格)，里面有若干个字符串，求这些字符串的长度和，并输出最长字符串内容,如果有多个输出最先出现的那个字符串。以<code>stop</code>作为最后输入的字符串。</p><p><strong>输入</strong> 输入一段文字</p><p><strong>输出</strong> 输入一段字符，以<code>stop</code>作为最后输入的字符串。</p><p>样例输入： </p><p><code>My name is Amy</code> </p><p><code>My name is Jane</code> <code>stop</code> </p><p>样例输出： </p><p><code>11 name</code></p><p><code>12 name</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*********Begin*********/</span></span><br><span class="line">    <span class="type">int</span> sumLength = <span class="number">0</span>, partLength = <span class="number">0</span>;<span class="comment">//统计总长度和每组字符串长度</span></span><br><span class="line">    <span class="type">char</span> arr[<span class="number">1000</span>];</span><br><span class="line">    <span class="type">int</span> max = <span class="number">0</span>;<span class="comment">//存储最长字符串的长度</span></span><br><span class="line">    <span class="type">char</span> Temp_Arr[<span class="number">1000</span>];<span class="comment">//用来储存最长字符串</span></span><br><span class="line">    gets(arr);</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">strcmp</span>(arr, <span class="string">&quot;stop&quot;</span>) != <span class="number">0</span>)<span class="comment">//判断输入的是否为stop</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(arr); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                sumLength++;</span><br><span class="line">                partLength++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span><span class="comment">//每遇到一次空字符，代表数完前一组字符串</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (partLength &gt; max)</span><br><span class="line">                &#123;</span><br><span class="line">                    max = partLength;</span><br><span class="line">                &#125;</span><br><span class="line">                partLength = <span class="number">0</span>;<span class="comment">//数完一组字符串长度后，计数器清0</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="comment">//该循环记录最长字符串长度</span></span><br><span class="line">        <span class="keyword">if</span> (partLength &gt; max)</span><br><span class="line">        &#123;</span><br><span class="line">            max = partLength;</span><br><span class="line">        &#125;<span class="comment">//比较最后一组字符串长度与前一组字符串长度的大小</span></span><br><span class="line">        partLength = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(arr); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                partLength++;</span><br><span class="line">                <span class="keyword">if</span> (partLength == max)<span class="comment">//找到最长的字符串</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; max; j++)<span class="comment">//把最长的字符串存入临时数组</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        Temp_Arr[j] = arr[j + i - max+<span class="number">1</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                    Temp_Arr[max] = <span class="string">&#x27;\0&#x27;</span>;<span class="comment">//代表字符串已经结束</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;             </span><br><span class="line">                partLength = <span class="number">0</span>;<span class="comment">//数完一组字符串长度后，计数器清0</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="comment">//找最长的字符串</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %s&quot;</span>, sumLength, Temp_Arr);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="comment">//开始一轮新的字符串统计</span></span><br><span class="line">        sumLength = <span class="number">0</span>;</span><br><span class="line">        partLength = <span class="number">0</span>;</span><br><span class="line">        max = <span class="number">0</span>;</span><br><span class="line">        gets(arr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*********End**********/</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="④字符串比对"><a href="#④字符串比对" class="headerlink" title="④字符串比对"></a>④字符串比对</h2><p>题目说起来很简单，你会读到两个字符串，每个字符串占据一行，每个字符串的长度均小于10000字符，而且第一个字符串的长度小于第二个字符串的。你的程序要找出第一个字符串在第二个字符串中出现的位置，输出这些位置，如果找不到，则输出-1。</p><p>注意，第一个字符的位置是0。</p><p>注意，第一个字符串在第二个字符串中的位置可能不止一处。</p><p>注意，字符串中可能含有空格。</p><p>注意，两个字符串的长度一定大于0。</p><p><strong>输入格式:</strong></p><p>两个字符串，一行一个。</p><p><strong>输出格式：</strong></p><p>第一个字符串在第二个字符串中出现的位置，按照从小到到的顺序排列，每个数字后面有一个空格。</p><p>如果在第二个字符串中找不到第一个字符串，则输出-1。</p><p><strong>输入样例：</strong></p><p>abba</p><p>ababbba abbabbabbabbaacc</p><p><strong>输出样例：</strong></p><p>8 11 14 17</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span><span class="comment">//strlen要用的函数。</span></span></span><br><span class="line"><span class="type">char</span> s1[<span class="number">10000</span>];</span><br><span class="line"><span class="type">char</span> s2[<span class="number">10000</span>];</span><br><span class="line"><span class="type">int</span> ans[<span class="number">10000</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//两个字符串，都小于10000，第一个小于第二个，第一个在第二个种出现的位置</span></span><br><span class="line">gets(s1);</span><br><span class="line">gets(s2);</span><br><span class="line"><span class="comment">//printf(&quot;%s\n&quot;,s1);</span></span><br><span class="line"><span class="comment">//printf(&quot;%s\n&quot;,s2);</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10050</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">ans[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="comment">//这里赋值为-1是因为后面好方便操作，-1代表状态不是相同的起始点，是相同的起始点我在后面进行了赋值，为什么不赋值为0呢是因为数组开头下标是0，后面出现错误，用例1，2，4都是空头为0的样例。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">strlen</span>(s1);</span><br><span class="line"><span class="comment">//printf(&quot;len=%d &quot;,len);</span></span><br><span class="line"><span class="comment">//ans[]=&#123;-1&#125;;</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(s2); i++)<span class="comment">//遍历字符串s2</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (s2[i] == s1[<span class="number">0</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; i + len; j++)<span class="comment">//遍历字符串s2</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (s2[j] == s1[num])</span><br><span class="line">&#123;</span><br><span class="line">sum++;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sum == len)  <span class="comment">//记录i的数值，表示在s2哪个位置开始出现字符串s1</span></span><br><span class="line">&#123;</span><br><span class="line">ans[i] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(s2); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ans[i] &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i);</span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (k == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本题在指针部分还有另一种解法</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>读研规划</title>
      <link href="/2023/06/23/%E8%AF%BB%E7%A0%94%E8%A7%84%E5%88%92/"/>
      <url>/2023/06/23/%E8%AF%BB%E7%A0%94%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h1 id="1方向和导师选择"><a href="#1方向和导师选择" class="headerlink" title="1方向和导师选择"></a>1方向和导师选择</h1><p>①我是就业为主，学好一门开发技能</p><p>②比方向选择更重要的是导师的选择</p><p>深入科研：导师方向是否契合，大老板还是小老板、导师以往的学术成果、项目是否能支撑出好成果，师兄师姐读博去向。</p><p>直接就业：导师人品比方向重要，压榨的狠不狠，放不放实习。</p><p>投递实习的时间：读研下学期暑假，一般是3~4月份</p><p>考上后，知道师兄师姐的去向</p><p>上岸了，未来就业：多学开发技能，多刷题，尽早实习，有大厂实习履历，基本能20w+年薪</p><p>要有自己的方向</p><h1 id="2硕士重点"><a href="#2硕士重点" class="headerlink" title="2硕士重点"></a>2硕士重点</h1><h2 id="研一"><a href="#研一" class="headerlink" title="研一"></a>研一</h2><p>①正常上课完成导师任务，推一推科研进度让导师看到</p><p>②根据要走的方向积累足够的技能</p><p>③整个硕士期间保持长期刷题</p><h2 id="研二"><a href="#研二" class="headerlink" title="研二"></a>研二</h2><p>把精力往就业部分倾斜，多做项目实践，关注实习招聘信息，背经历，做简历尽早实习，善用Github这些开源平台去实践</p><h1 id="3费用问题"><a href="#3费用问题" class="headerlink" title="3费用问题"></a>3费用问题</h1><p>如果准备读，我不找家长要一分钱。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>指针字符串</title>
      <link href="/2023/06/23/%E6%8C%87%E9%92%88-%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2023/06/23/%E6%8C%87%E9%92%88-%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="1-运算符-amp-取得变量的地址"><a href="#1-运算符-amp-取得变量的地址" class="headerlink" title="1 运算符 &amp; 取得变量的地址"></a>1 运算符 &amp; 取得变量的地址</h1><p>①scanf (“% d”,&amp;i); 中的 &amp;</p><p>获得变量的地址，他的操作数必须是变量</p><p>int i; printf(“%x”,&amp;i);</p><p>②地址的大小是否与 int 相同取决于编译器</p><p>int i; printf(“%p”,&amp;i);</p><h1 id="2-字符串"><a href="#2-字符串" class="headerlink" title="2 字符串"></a>2 字符串</h1><p>①C 语言的字符串是一字符数组的形态存在的</p><p>②不能用运算符对字符串作运算</p><p>③通过数组的方式可以遍历字符串</p><p>④唯一特殊的地方时字符串字面量可以用来初始化字符数组</p><h1 id="3-字符串函数"><a href="#3-字符串函数" class="headerlink" title="3 字符串函数"></a>3 字符串函数</h1><h2 id="①strlen"><a href="#①strlen" class="headerlink" title="①strlen"></a>①strlen</h2><p>使用时最好带上头文件 #include<string.h></p><p>size_t strlen(const char *s);</p><p>返回 s 的字符串长度（不包括结尾的 0）</p><p>char line[]=”Hello”;</p><p>printf(“strlen%lu\n”,strlen(line));</p><p>printf(“strlen%lu\n”,sizeof(line));</p><p>// strlen=5 字符串长度是 5</p><p>// sizeof=6 字符串要占据 6 个位置的空间</p><h2 id="②strcmp"><a href="#②strcmp" class="headerlink" title="②strcmp"></a>②strcmp</h2><p>比较两个字符串，返回：</p><p>0：s1==s2</p><p>1:s1&gt;s2 // 这里 1 仅指代正数</p><p>-1:s1&lt;s2</p><p>printf(“%d\n”,strcmp(s1,s2));</p><h2 id="③strcpy"><a href="#③strcpy" class="headerlink" title="③strcpy"></a>③strcpy</h2><p>char <em>strcpy(char </em>restrict dst, const char *restrict src);</p><p>把 src 的字符串拷贝到 dst</p><p>restrict 表明 src 和 dst 不重叠</p><p>返回 dst</p><p>为了能链起代码来</p><h2 id="④strcat"><a href="#④strcat" class="headerlink" title="④strcat"></a>④strcat</h2><p>char <em>strcat(char </em>restrict s1, const char *restrict s2);</p><p>把 s2 拷贝到 s1 后面，结成一个长的字符串</p><p>返回 s1</p><p>s1 必须具有足够的空间</p><h1 id="4-字符串中找字符"><a href="#4-字符串中找字符" class="headerlink" title="4 字符串中找字符"></a>4 字符串中找字符</h1><p>char <em>strchr (const char </em>s, int c); 字符串从左向右找第一次出现的位置，返回的指针</p><p>char <em> strrchr (const char </em>s, int c); 从右向左找</p><h1 id="5-例题"><a href="#5-例题" class="headerlink" title="5 例题"></a>5 例题</h1><h2 id="1-单词长度"><a href="#1-单词长度" class="headerlink" title="1 单词长度"></a>1 单词长度</h2><p><strong>题目内容：</strong></p><p>你的程序要读入一行文本，其中以空格分隔为若干个单词，以‘.’结束。你要输出这行文本中每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如 “it’s” 算一个单词，长度为 4。注意，行中可能出现连续的空格。</p><p><strong>输入格式:</strong></p><p>输入在一行中给出一行文本，以‘.’结束，结尾的句号不能计算在最后一个单词的长度内。</p><p><strong>输出格式：</strong></p><p>在一行中输出这行文本对应的单词的长度，每个长度之间以空格隔开，行末没有最后的空格。</p><p><strong>输入样例：</strong></p><p>It’s great to see you here.</p><p><strong>输出样例：</strong></p><p>4 5 2 3 3 4</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> word[<span class="number">101</span>];</span><br><span class="line"><span class="type">int</span> len = <span class="number">0</span>, flag = <span class="number">1</span>, i = <span class="number">0</span>, count = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> end = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line"><span class="keyword">while</span> (flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, word);</span><br><span class="line">len = (<span class="type">int</span>)<span class="built_in">strlen</span>(word);</span><br><span class="line"><span class="keyword">if</span> (word[len - <span class="number">1</span>] == end)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (len &gt; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, len - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, len);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>strlen 所作的是一个计数器的工作，它从内存的某个位置（可以是字符串开头，中间某个位置，甚至是某个不确定的内存区域）开始扫描，直到碰到第一个字符串结束符’\0’(空格) 为止，然后返回计数器值 (长度不包含’\0’)。</p><p>sizeof 返回定义 arr 数组时，编译器为其分配的数组空间大小，不关心里面存了多少数据。<br>strlen 只关心存储的数据内容，不关心空间的大小和类型。</p><p>% c 是单个字符，也就是用’’的。% s 是字符串，用 “” 的。</p><p>% c 格式对应的是单个字符，% s 格式对应的是字符串。</p><p>例：</p><p>char a;</p><p>char b[20];</p><p>scanf (“% c”,&amp;a); // 只能输入一个字符。</p><p>scanf (“% s”,b); // 可以输入一串不超过 20 字符的字符串。</p><p>一开始我没加 if (len&gt;1), 结果拿到三分。错误提示为：没有有效内容的句子不应该有任何的输出。思考以后我觉得输入可能有这种情况：yes .（“yes” 和 “.” 之间有空格）</p><p>没有 if (len&gt;1) 时，输入 yes .，结果是 3 0，显然是错误的（正确应该为 3）. 拿分步调试查看程序，发现 0 是‘.’的长度，此时 len=1，显然题目中的有效内容指‘.’前面有字符，即 len&gt;1. 所以 len&gt;1 这个</p><p>判断条件要放在 if (word [len- 1]==end) 的后面，因为要先看到有没有到达‘.’, 再看‘.’前面有没有字符。</p><p>输出是个字符串，返回值是个指针。</p><h2 id="2-字符串比对"><a href="#2-字符串比对" class="headerlink" title="2 字符串比对"></a>2 字符串比对</h2><p>题目说起来很简单，你会读到两个字符串，每个字符串占据一行，每个字符串的长度均小于 10000 字符，而且第一个字符串的长度小于第二个字符串的。你的程序要找出第一个字符串在第二个字符串中出现的位置，输出这些位置，如果找不到，则输出 - 1。</p><p>注意，第一个字符的位置是 0。</p><p>注意，第一个字符串在第二个字符串中的位置可能不止一处。</p><p>注意，字符串中可能含有空格。</p><p>注意，两个字符串的长度一定大于 0。</p><p><strong>输入格式:</strong></p><p>两个字符串，一行一个。</p><p><strong>输出格式：</strong></p><p>第一个字符串在第二个字符串中出现的位置，按照从小到到的顺序排列，每个数字后面有一个空格。</p><p>如果在第二个字符串中找不到第一个字符串，则输出 - 1。</p><p><strong>输入样例：</strong></p><p>abba</p><p>ababbba abbabbabbabbaacc</p><p><strong>输出样例：</strong></p><p>8 11 14 17</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">char</span> str1[<span class="number">10000</span>],str2[<span class="number">10000</span>];</span><br><span class="line">gets(str1);</span><br><span class="line">gets(str2);</span><br><span class="line"><span class="type">char</span> *p=str2;<span class="comment">//指针的类型和本身的类型一致</span></span><br><span class="line"><span class="type">int</span> len=<span class="built_in">strlen</span>(str2);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strstr</span>(p,str1)==<span class="literal">NULL</span>)&#123;<span class="comment">//p指向str2，p相当于个数组，strstr是从第一个数组中找第二个数组</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);<span class="comment">//就是找第二个参数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">strstr</span>(p,str1)!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">p=<span class="built_in">strstr</span>(p,str1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,len-<span class="built_in">strlen</span>(p));</span><br><span class="line">p++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>strstr 用法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">char* string1 = &quot;needle in haystack&quot;;</span><br><span class="line">char* string2 = &quot;hay&quot;;</span><br><span class="line">printf(&quot;%s\n&quot;, strstr(string1, string2));</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">输出：</span><br><span class="line">haystack</span><br><span class="line">该程序调用strstr返回指向字符串string1中hay第一次出现的位置的指针。</span><br></pre></td></tr></table></figure><h2 id="3-报数"><a href="#3-报数" class="headerlink" title="3 报数"></a>3 报数</h2><p>题目描述：有 <code>n</code> 人围成一圈，顺序排号。从第 <code>1</code> 个人开始报数（从 <code>1</code> 到 <code>3</code> 报数），凡报到 <code>3</code> 的人退出圈子，问最后留下的是原来的第几号的那位。</p><p><strong>输入</strong></p><p>初始人数 <code>n</code></p><p><strong>输出</strong></p><p>最后一人的初始编号</p><p>样例输入：<code>3</code></p><p>样例输出：<code>2</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, i, k, m, a[<span class="number">100</span>];</span><br><span class="line"><span class="type">int</span>* p;</span><br><span class="line">p = &amp;a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line">    &#123;</span><br><span class="line">a[i] = i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">i = <span class="number">0</span>;<span class="comment">//第几个人</span></span><br><span class="line">k = <span class="number">0</span>;<span class="comment">//计数，看谁到3</span></span><br><span class="line">m = <span class="number">0</span>;<span class="comment">//已经去掉的人数</span></span><br><span class="line"><span class="keyword">while</span> (m &lt; n - <span class="number">1</span>)<span class="comment">//这个循环是建立题干上，只剩一个人时，不再继续报数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (*(p + i) != <span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (k == <span class="number">3</span>) <span class="comment">//用0来标记这个数去掉</span></span><br><span class="line">&#123;</span><br><span class="line">a[i] = <span class="number">0</span>;</span><br><span class="line">k = <span class="number">0</span>;</span><br><span class="line">m++;</span><br><span class="line">&#125;</span><br><span class="line">i++;<span class="comment">//遍历数组所需要的i </span></span><br><span class="line"><span class="keyword">if</span> (i == n)<span class="comment">//不能超过数组容器大小</span></span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (!(*p)) <span class="comment">//用指针遍历数组，输出所有非零的数</span></span><br><span class="line">&#123;</span><br><span class="line">p++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, *p);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>心得：</p><p>①不要用人的思维（即：直接删除，做不到的），用其他方法，例如设 0 为本数据被删除即可</p><p>②可以动笔把思路画出来</p><p>思路</p><p><img src="img.2\指针.0\1.png" alt="1"></p><p><strong>如图，假设有 10 个人，他们的序号为 1-10, 而从 1-3 开始报数，报到 3 就退出.</strong></p><p><img src="/img.2\指针.0\2.png" alt="2"></p><p><img src="/img.2\指针.0\3.png" alt="3"></p><p><img src="/img.2\指针.0\4.png" alt="4"></p><p><strong>靠近尾部，那么报数将会重头开始继续报</strong></p><p><img src="/img.2\指针.0\5.png" alt="5"></p><p><strong>重头开始报数，直到报到只剩下最后一个人的时候，那么这个人就是我们要找的那个了</strong></p><p><strong>那么大致的操作我们知道了，接下来就是思路的问题，下面是要满足的条件，或者说，要注意的事项</strong></p><ol><li><strong>首先，得有一个排号的操作</strong></li><li><strong>再者，每一次需要在排完一遍后重复报数，直到只剩下一个人</strong></li><li><strong>其次，报数报到 3 后，应该要重头开始报数</strong></li><li><strong>再者，退出的人，应该要让我们知道</strong></li><li><strong>剩余的人数，要始终大于 1, 如果小于 1, 那么就不用再继续了</strong></li></ol><h2 id="4-用指针实现数组循环移动"><a href="#4-用指针实现数组循环移动" class="headerlink" title="4 用指针实现数组循环移动"></a>4 用指针实现数组循环移动</h2><p>题目描述：有 <code>n</code> 个整数，要求你编写一个函数使其向右循环移动 <code>m</code> 个位置 #</p><p><strong>输入</strong> 输入 <code>n m</code> 表示有 <code>n</code> 个整数，移动 <code>m</code> 位</p><p><strong>输出</strong> 输出移动后的数组</p><p>样例输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10  5</span><br><span class="line">1 2 3 4 5 6 7 8 9 0</span><br></pre></td></tr></table></figure><p>样例输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6 7 8 9 0 1 2 3 4 5</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">solve</span><span class="params">(<span class="type">int</span>* s, <span class="type">int</span> n, <span class="type">int</span> m)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*********Begin*********/</span></span><br><span class="line"><span class="keyword">if</span> (m == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> t = n % m;</span><br><span class="line"><span class="type">int</span> temp[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="comment">//将数组s的元素按照题干要求录入数组temp中</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t = (i + m) % n;</span><br><span class="line">temp[t] = s[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)<span class="comment">//重置数组s[i]中的元素</span></span><br><span class="line">&#123;</span><br><span class="line">s[i] = temp[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line"><span class="comment">/*********End**********/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, m, s[<span class="number">110</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;s[i]);</span><br><span class="line"><span class="type">int</span>* ans;</span><br><span class="line"><span class="comment">/*********Begin*********/</span></span><br><span class="line">ans = solve(s, n, m);</span><br><span class="line"><span class="comment">/*********End**********/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, *ans++);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, *ans++);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数组</title>
      <link href="/2023/06/23/%E6%95%B0%E7%BB%84-1/"/>
      <url>/2023/06/23/%E6%95%B0%E7%BB%84-1/</url>
      
        <content type="html"><![CDATA[<h2 id="最简单的理解"><a href="#最简单的理解" class="headerlink" title="最简单的理解"></a>最简单的理解</h2><p>很麻烦，但能解决问题,。用的Switch</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a,b=<span class="number">1</span>,c=<span class="number">0</span>,i;   <span class="comment">/*a为输入正整数，c为正整数位数*/</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">i=a;</span><br><span class="line"><span class="keyword">while</span>(b!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">b=i/<span class="number">10</span>;</span><br><span class="line">c++;</span><br><span class="line">i=i/<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="built_in">printf</span>(<span class="string">&quot;%d,%d&quot;</span>,a/<span class="number">10</span>,a%<span class="number">10</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="built_in">printf</span>(<span class="string">&quot;%d,%d,%d&quot;</span>,a/<span class="number">100</span>,a/<span class="number">10</span>%<span class="number">10</span>,a%<span class="number">10</span>%<span class="number">10</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="built_in">printf</span>(<span class="string">&quot;%d,%d,%d,%d&quot;</span>,a/<span class="number">1000</span>,a/<span class="number">100</span>%<span class="number">10</span>,a/<span class="number">10</span>%<span class="number">10</span>,a%<span class="number">10</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="built_in">printf</span>(<span class="string">&quot;%d,%d,%d,%d,%d&quot;</span>,a/<span class="number">10000</span>,a/<span class="number">1000</span>%<span class="number">10</span>,a/<span class="number">100</span>%<span class="number">10</span>,a/<span class="number">10</span>%<span class="number">10</span>,a%<span class="number">10</span>);<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="稍微进阶点的-用数组"><a href="#稍微进阶点的-用数组" class="headerlink" title="稍微进阶点的,用数组"></a>稍微进阶点的,用数组</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> c[<span class="number">6</span>];  <span class="comment">// %s输入或输出字符串 %c输入或输出单个字符</span></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, c);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, c[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; c[i] != <span class="string">&#x27;\0&#x27;</span>; i++)  <span class="comment">// \0 在c语言中代表“字符串结束符</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>, c[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法仍有局限性，未来再更新</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>初识操作符</title>
      <link href="/2023/06/23/%E6%93%8D%E4%BD%9C%E7%AC%A6/"/>
      <url>/2023/06/23/%E6%93%8D%E4%BD%9C%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="sizeof"><a href="#sizeof" class="headerlink" title="sizeof"></a>sizeof</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">10</span>]=&#123;<span class="number">0</span>&#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(arr)); <span class="comment">//计算的是数组的总大小，单位是字节 此处答案是40 （10*4）</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]));<span class="comment">//计算数组的第一个元素大小 输出结果为4</span></span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sz);<span class="comment">//此处是计算数组有几个元素，答案是10</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//sizoof不仅能计算数组大小，也能计算单个字符的大小，计算方法同上</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id=""><a href="#" class="headerlink" title="~"></a>~</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">按（二进制）位取法， 把所有二进制位中数字，1变0,0变1</span><br><span class="line">整数在内存中存储的是补码，一个整数的二进制表示有3种：原码，反码，补码</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="原码、反码、补码之间的关系"><a href="#原码、反码、补码之间的关系" class="headerlink" title="原码、反码、补码之间的关系"></a>原码、反码、补码之间的关系</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//原码：使用二进制表示，二进制首位是符号位，0为正，1为负</span><br><span class="line">//反码：正数，反码和原码一样； 负数，符号位不变，其他各位取反</span><br><span class="line">//补码：正数，补码和原码一样；负数，反码末位加1，有进位则进位，但不改变符号位</span><br><span class="line">-1:                                             1:</span><br><span class="line">1000000001 (原码)1000000001 (原码)</span><br><span class="line">1111111110 (反码)1000000001 (反码)</span><br><span class="line">11111111101 (补码)1000000001 (补码)</span><br></pre></td></tr></table></figure><h1 id="a和a-的区别"><a href="#a和a-的区别" class="headerlink" title="++a和a++的区别"></a>++a和a++的区别</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a=<span class="number">10</span>,b;</span><br><span class="line">情况一：b=++a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,b,a);  <span class="comment">//b=11,a==11  a先自增1，再给b赋值</span></span><br><span class="line">情况二： b=a++</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,b);  <span class="comment">//b=10,a=11  先给b赋值，a再自增</span></span><br></pre></td></tr></table></figure><h1 id="三目操作符"><a href="#三目操作符" class="headerlink" title="三目操作符"></a>三目操作符</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">max = a &gt; b ? a : b ;</span><br><span class="line"><span class="comment">// a&gt;b成立，max=a   反之max=b</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>学生管理系统</title>
      <link href="/2023/06/23/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2023/06/23/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="1、基础版本"><a href="#1、基础版本" class="headerlink" title="1、基础版本"></a>1、基础版本</h1><h3 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h3><p>​    采取控制台的方式去书写学生管理系统。</p><h3 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h3><h4 id="初始菜单："><a href="#初始菜单：" class="headerlink" title="初始菜单："></a>初始菜单：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;-------------欢迎来到黑马学生管理系统----------------&quot;</span></span><br><span class="line"><span class="string">&quot;1：添加学生&quot;</span></span><br><span class="line"><span class="string">&quot;2：删除学生&quot;</span></span><br><span class="line"><span class="string">&quot;3：修改学生&quot;</span></span><br><span class="line"><span class="string">&quot;4：查询学生&quot;</span></span><br><span class="line"><span class="string">&quot;5：退出&quot;</span></span><br><span class="line"><span class="string">&quot;请输入您的选择:&quot;</span></span><br></pre></td></tr></table></figure><h4 id="学生类："><a href="#学生类：" class="headerlink" title="学生类："></a>学生类：</h4><p>​    属性：id、姓名、年龄、家庭住址</p><h4 id="添加功能："><a href="#添加功能：" class="headerlink" title="添加功能："></a>添加功能：</h4><p>​    键盘录入每一个学生信息并添加，需要满足以下要求：</p><ul><li>id唯一</li></ul><h4 id="删除功能："><a href="#删除功能：" class="headerlink" title="删除功能："></a>删除功能：</h4><p>​    键盘录入要删除的学生id，需要满足以下要求：</p><ul><li>id存在删除</li><li>id不存在，需要提示不存在，并回到初始菜单</li></ul><h4 id="修改功能："><a href="#修改功能：" class="headerlink" title="修改功能："></a>修改功能：</h4><p>​    键盘录入要修改的学生id，需要满足以下要求</p><ul><li>id存在，继续录入其他信息</li><li>id不存在，需要提示不存在，并回到初始菜单</li></ul><h4 id="查询功能："><a href="#查询功能：" class="headerlink" title="查询功能："></a>查询功能：</h4><p>​    打印所有的学生信息，需要满足以下要求</p><ul><li>如果没有学生信息，提示：当前无学生信息，请添加后再查询</li><li>如果有学生信息，需要按照以下格式输出。（不用过于纠结对齐的问题）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id姓名年龄家庭住址</span><br><span class="line">heima001张三<span class="number">23</span> 南京</span><br><span class="line">heima002李四<span class="number">24</span> 北京</span><br><span class="line">heima003王五<span class="number">25</span> 广州</span><br><span class="line">heima004赵六 <span class="number">26</span> 深圳</span><br></pre></td></tr></table></figure><p><img src="https://public-img.pages.dev/img.2/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt=""></p><p>test文件夹</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">ArrayList&lt;student&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">loop:<span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;-------------欢迎来到我的学生管理系统----------------&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;1：添加学生&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;2：删除学生&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;3：修改学生&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;4：查询学生&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;5：退出&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入您的选择:&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> sc.next();</span><br><span class="line"><span class="keyword">switch</span> (a) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;1&quot;</span> -&gt; addstudent(list);</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;2&quot;</span> -&gt; deletestudent(list);</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;3&quot;</span> -&gt; updatestudent(list);</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;4&quot;</span> -&gt; querystudent(list);</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;5&quot;</span> -&gt; &#123;System.out.println(<span class="string">&quot;退出&quot;</span>); </span><br><span class="line"><span class="comment">//  break loop;//停止loop这个循环</span></span><br><span class="line">System.exit(<span class="number">0</span>);<span class="comment">//虚拟机停止</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>  -&gt; System.out.println(<span class="string">&quot;没有这个选项&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addstudent</span><span class="params">(ArrayList&lt;student&gt; list)</span> &#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">student</span> <span class="variable">st</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">student</span>();</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;输入学生ID&quot;</span>);</span><br><span class="line">st.setId(sc.next());</span><br><span class="line"><span class="type">boolean</span> <span class="variable">temp</span> <span class="operator">=</span> contain(list,st.getId());</span><br><span class="line"><span class="keyword">if</span> (temp) &#123;</span><br><span class="line"><span class="comment">//表示id已经存在，需要重新录入</span></span><br><span class="line">System.out.println(<span class="string">&quot;Id已存在，请重新输入&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;输入学生姓名&quot;</span>);</span><br><span class="line">st.setName(sc.next());</span><br><span class="line">System.out.println(<span class="string">&quot;输入学生年龄&quot;</span>);</span><br><span class="line">st.setAge(sc.nextInt());</span><br><span class="line">System.out.println(<span class="string">&quot;输入学生地址&quot;</span>);</span><br><span class="line">st.setLocal(sc.next());</span><br><span class="line"><span class="comment">//把学生对象添加到集合当中</span></span><br><span class="line">list.add(st);</span><br><span class="line">System.out.println(<span class="string">&quot;学生信息添加成功&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">deletestudent</span><span class="params">(ArrayList&lt;student&gt; list)</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(list.size()==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;要删除的学生Id不存在&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> sc.next();</span><br><span class="line"><span class="comment">//查询id在集合中的索引</span></span><br><span class="line"><span class="comment">//如果-1，就表示不存在，结束方法，回到初始菜单</span></span><br><span class="line"><span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> check(list, id); </span><br><span class="line"><span class="keyword">if</span> (index&gt;=<span class="number">0</span>) &#123;</span><br><span class="line">list.remove(index);</span><br><span class="line">System.out.println(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Id不存在，删除失败&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">updatestudent</span><span class="params">(ArrayList&lt;student&gt; list)</span> &#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入要修改学生的Id&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> sc.next();</span><br><span class="line"><span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> check(list, id);</span><br><span class="line"><span class="keyword">if</span> (temp==(-<span class="number">1</span>)) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;要修改的id&quot;</span> + id + <span class="string">&quot;不存在，请重新输入&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当代码执行到这里，表示什么？表示当前id是存在的。</span></span><br><span class="line">        <span class="comment">//获取要修改的学生对象</span></span><br><span class="line"><span class="type">student</span> <span class="variable">stu</span> <span class="operator">=</span> list.get(temp);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入要修改的学生姓名&quot;</span>);</span><br><span class="line">stu.setName(sc.next());</span><br><span class="line">System.out.println(<span class="string">&quot;请输入要修改的学生年龄&quot;</span>);</span><br><span class="line">stu.setAge(sc.nextInt());</span><br><span class="line">System.out.println(<span class="string">&quot;请输入要修改的学生家庭住址&quot;</span>);</span><br><span class="line">stu.setLocal(sc.next());</span><br><span class="line">System.out.println(<span class="string">&quot;学生信息修改成功&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">querystudent</span><span class="params">(ArrayList&lt;student&gt; list)</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (list.size()==<span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;没有学生信息，请重新输入&quot;</span>);</span><br><span class="line"><span class="comment">//结束方法</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印表头信息</span></span><br><span class="line">System.out.println(<span class="string">&quot;Id&quot;</span>+<span class="string">&quot;  &quot;</span>+<span class="string">&quot;姓名&quot;</span>+<span class="string">&quot;  &quot;</span>+<span class="string">&quot;年龄&quot;</span>+<span class="string">&quot;  &quot;</span>+<span class="string">&quot;家庭住址&quot;</span>);</span><br><span class="line"><span class="comment">//当代码执行到这里，表示集合中是有数据的</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">System.out.println(list.get(i).getId()+<span class="string">&quot; &quot;</span>+list.get(i).getName()+<span class="string">&quot; &quot;</span>+list.get(i).getAge()+<span class="string">&quot; &quot;</span>+list.get(i).getLocal());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">contain</span><span class="params">(ArrayList&lt;student&gt; list,String id)</span> &#123;</span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; list.size(); i++) &#123;</span></span><br><span class="line"><span class="comment">//student stu = list.get(i);</span></span><br><span class="line"><span class="comment">//String sid = stu.getId();</span></span><br><span class="line"><span class="comment">//if (sid.equals(id)) &#123;</span></span><br><span class="line"><span class="comment">//return true;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return false;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> check(list, id)&gt;=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">check</span><span class="params">(ArrayList&lt;student&gt; list,String id)</span> &#123;</span><br><span class="line"><span class="comment">//遍历集合</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line"><span class="comment">//得到每一个学生对象</span></span><br><span class="line"><span class="type">student</span> <span class="variable">stu</span> <span class="operator">=</span> list.get(i);</span><br><span class="line"><span class="comment">//得到每一个学生对象的id</span></span><br><span class="line"><span class="type">String</span> <span class="variable">sid</span> <span class="operator">=</span> stu.getId();</span><br><span class="line"><span class="keyword">if</span> (sid.equals(id)) &#123;</span><br><span class="line"><span class="comment">//如果一样，那么就返回索引</span></span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当循环结束之后还没有找到，就表示不存在，返回-1.</span></span><br><span class="line"><span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>student文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">student</span> &#123;</span><br><span class="line"><span class="keyword">private</span> String id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"><span class="keyword">private</span> String local;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">student</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">student</span><span class="params">(String id, String name, <span class="type">int</span> age, String local)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line"><span class="built_in">this</span>.local = local;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(String id)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getLocal</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> local;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setLocal</span><span class="params">(String local)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.local = local;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2、升级版"><a href="#2、升级版" class="headerlink" title="2、升级版"></a>2、升级版</h1><h3 id="需求：-1"><a href="#需求：-1" class="headerlink" title="需求："></a>需求：</h3><p>​    为学生管理系统书写一个登陆、注册、忘记密码的功能。</p><p>​    只有用户登录成功之后，才能进入到学生管理系统中进行增删改查操作。</p><p><img src="https://public-img.pages.dev/img.2/学生管理系统升级版流程图01.png" alt="注册"></p><p><img src="https://public-img.pages.dev/img.2/学生管理系统升级版流程图02.png" alt="登录"></p><p><img src="https://public-img.pages.dev/img.2/学生管理系统升级版流程图03.png" alt="忘记密码"></p><h3 id="分析：-1"><a href="#分析：-1" class="headerlink" title="分析："></a>分析：</h3><h4 id="登录界面："><a href="#登录界面：" class="headerlink" title="登录界面："></a>登录界面：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;欢迎来到学生管理系统&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;请选择操作1登录 2注册 3忘记密码&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="用户类："><a href="#用户类：" class="headerlink" title="用户类："></a>用户类：</h4><p>​    属性：用户名、密码、身份证号码、手机号码</p><h4 id="注册功能："><a href="#注册功能：" class="headerlink" title="注册功能："></a>注册功能：</h4><p>​    1，用户名需要满足以下要求：</p><p>​        验证要求：</p><p>​            用户名唯一</p><p>​            用户名长度必须在3~15位之间 </p><p>​            只能是字母加数字的组合，但是不能是纯数字</p><p>​    2，密码键盘输入两次，两次一致才可以进行注册。</p><p>​    3，身份证号码需要验证。</p><p>​        验证要求：</p><p>​            长度为18位</p><p>​            不能以0为开头</p><p>​            前17位，必须都是数字</p><p>​            最为一位可以是数字，也可以是大写X或小写x</p><p>​    4，手机号验证。</p><p>​        验证要求：</p><p>​            长度为11位</p><p>​            不能以0为开头</p><p>​            必须都是数字</p><h4 id="登录功能："><a href="#登录功能：" class="headerlink" title="登录功能："></a>登录功能：</h4><p>​    1，键盘录入用户名</p><p>​    2，键盘录入密码</p><p>​    3，键盘录入验证码</p><p>验证要求：</p><p>​        用户名如果未注册，直接结束方法，并提示：用户名未注册，请先注册</p><p>​        判断验证码是否正确，如不正确，重新输入</p><p>​        再判断用户名和密码是否正确，有3次机会</p><h4 id="忘记密码："><a href="#忘记密码：" class="headerlink" title="忘记密码："></a>忘记密码：</h4><p>​       1，键盘录入用户名，判断当前用户名是否存在，如不存在，直接结束方法，并提示：未注册</p><p>​    2，键盘录入身份证号码和手机号码</p><p>​    3，判断当前用户的身份证号码和手机号码是否一致，</p><p>​            如果一致，则提示输入密码，进行修改。</p><p>​            如果不一致，则提示：账号信息不匹配，修改失败。</p><h4 id="验证码规则："><a href="#验证码规则：" class="headerlink" title="验证码规则："></a>验证码规则：</h4><p>​    长度为5</p><p>​    由4位大写或者小写字母和1位数字组成，同一个字母可重复</p><p>​    数字可以出现在任意位置</p><p>比如：</p><p>​    aQa1K</p><h1 id="3、总结"><a href="#3、总结" class="headerlink" title="3、总结"></a>3、总结</h1><p>升级版能调用基础版本的代码，涉及文件较多，故此处直接给文件压缩包链接。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//一些方法</span><br><span class="line">//结束当前方法</span><br><span class="line">return;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://pan.baidu.com/s/14UtWaPfc8oBl5gjatU0Fig?pwd=d3eb">学生管理系统-java</a></p><p><img src="/img/23.jpg" alt="上仙"></p>]]></content>
      
      
      <categories>
          
          <category> Java-项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见关键字</title>
      <link href="/2023/06/23/%E5%B8%B8%E8%A7%81%E5%85%B3%E9%94%AE%E5%AD%97/"/>
      <url>/2023/06/23/%E5%B8%B8%E8%A7%81%E5%85%B3%E9%94%AE%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<h1 id="typedef类型重定义"><a href="#typedef类型重定义" class="headerlink" title="typedef类型重定义"></a>typedef类型重定义</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>循环进阶</title>
      <link href="/2023/06/23/%E5%BE%AA%E7%8E%AF%E8%BF%9B%E9%98%B6/"/>
      <url>/2023/06/23/%E5%BE%AA%E7%8E%AF%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="1我们认为2是第一个素数，3是第二个素数，5是第三个素数，依次类推。现在，给定两个整数n和m，0＜n＜-m＜-200，你的程序要计算第n个素数到第m个素数之间所有的素数的和，包括第n个素数和第m个素数"><a href="#1我们认为2是第一个素数，3是第二个素数，5是第三个素数，依次类推。现在，给定两个整数n和m，0＜n＜-m＜-200，你的程序要计算第n个素数到第m个素数之间所有的素数的和，包括第n个素数和第m个素数" class="headerlink" title="1我们认为2是第一个素数，3是第二个素数，5是第三个素数，依次类推。现在，给定两个整数n和m，0＜n＜=m＜=200，你的程序要计算第n个素数到第m个素数之间所有的素数的和，包括第n个素数和第m个素数"></a>1我们认为2是第一个素数，3是第二个素数，5是第三个素数，依次类推。现在，给定两个整数n和m，0＜n＜=m＜=200，你的程序要计算第n个素数到第m个素数之间所有的素数的和，包括第n个素数和第m个素数</h1><p><strong>输入格式:</strong></p><p>两个整数，第一个表示n，第二个表示m。</p><p><strong>输出格式：</strong></p><p>一个整数，表示第n个素数到第m个素数之间所有的素数的和，包括第n个素数和第m个素数。</p><p><strong>输入样例：</strong></p><p>2   4</p><p><strong>输出样例：</strong></p><p>15</p><p>复杂的：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, m  <span class="comment">//n到m的素数</span></span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>, red = <span class="number">1</span>; <span class="comment">//sum素数的和 red判断条件重置</span></span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>; <span class="comment">//cnt统计是第几个素数</span></span><br><span class="line"><span class="type">int</span> a, b = <span class="number">0</span>, c, <span class="comment">//a,b数字，c代替的a数</span></span><br><span class="line">    <span class="type">int</span> git = <span class="number">0</span>, over = <span class="number">0</span>; <span class="comment">//判断的条件</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">while</span> (cnt &lt; <span class="number">200</span>) <span class="comment">//题的范围</span></span><br><span class="line">&#123;</span><br><span class="line">cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (a = <span class="number">2</span>; ; a++)</span><br><span class="line">&#123;</span><br><span class="line">git = <span class="number">0</span>;</span><br><span class="line">red = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (b = <span class="number">2</span>; b &lt; a; b++) <span class="comment">//判断是否为素数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a % b == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">red = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (red == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cnt++;</span><br><span class="line">c = a;</span><br><span class="line">git = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (git == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (cnt &gt; n)</span><br><span class="line">&#123;</span><br><span class="line">sum += c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (cnt &gt; m)</span><br><span class="line">&#123;</span><br><span class="line">over = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (over == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>优化版本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, m;<span class="comment">//从n到m的素数</span></span><br><span class="line"><span class="type">int</span> i, x = <span class="number">2</span>;<span class="comment">//i是素数判断,x是素数</span></span><br><span class="line"><span class="type">int</span> count;<span class="comment">//统计第几个素数了</span></span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;<span class="comment">//最后结果和</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (count = <span class="number">0</span>; count &lt;= <span class="number">200</span>;) &#123;<span class="comment">//题的范围</span></span><br><span class="line"><span class="type">int</span> isPrime = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; x; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (x % i == <span class="number">0</span>) &#123;</span><br><span class="line">isPrime = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (isPrime == <span class="number">1</span>) &#123;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (count == n) &#123;</span><br><span class="line">sum += x;</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line">x++;</span><br><span class="line"><span class="keyword">if</span> (count == m) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2你的程序要读入一个整数，范围是-100000-100000-。然后，用汉语拼音将这个整数的每一位输出出来。"><a href="#2你的程序要读入一个整数，范围是-100000-100000-。然后，用汉语拼音将这个整数的每一位输出出来。" class="headerlink" title="2你的程序要读入一个整数，范围是[-100000,100000]。然后，用汉语拼音将这个整数的每一位输出出来。"></a>2你的程序要读入一个整数，范围是[-100000,100000]。然后，用汉语拼音将这个整数的每一位输出出来。</h1><p>如输入1234，则输出：</p><p>yi er san si</p><p>注意，每个字的拼音之间有一个空格，但是最后的字后面没有空格。当遇到负数时，在输出的开头加上“fu”，如-2341输出为：</p><p>fu er san si yi</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1234 / 1000 -&gt; 1   取1</span></span><br><span class="line"><span class="comment">//1234 % 1000 -&gt; 234     做题思路</span></span><br><span class="line"><span class="comment">//1000 / 10   -&gt; 100</span></span><br><span class="line"><span class="comment">//234 / 100 -&gt; 2     取2</span></span><br><span class="line"><span class="comment">//234 % 100 -&gt; 34</span></span><br><span class="line"><span class="comment">//100 / 10  -&gt; 10</span></span><br><span class="line"><span class="comment">//34 / 10 -&gt; 3       取3</span></span><br><span class="line"><span class="comment">//34 % 10 -&gt; 4</span></span><br><span class="line"><span class="comment">//10 / 10 -&gt; 1</span></span><br><span class="line"><span class="comment">//4 / 1 -&gt; 4         取4</span></span><br><span class="line"><span class="comment">//4 % 1 -&gt; 0</span></span><br><span class="line"><span class="comment">//1 % 10 -&gt; 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b, t;</span><br><span class="line"><span class="type">int</span> mask = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">b = a;</span><br><span class="line"><span class="keyword">if</span> (b &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">b = <span class="built_in">abs</span>(b);</span><br><span class="line">a = <span class="built_in">abs</span>(a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;fu &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (b &gt; <span class="number">9</span>)</span><br><span class="line">&#123;</span><br><span class="line">b = b / <span class="number">10</span>;</span><br><span class="line">mask *= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">t = a / mask;</span><br><span class="line"><span class="keyword">switch</span> (t)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="built_in">printf</span>(<span class="string">&quot;yi&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="built_in">printf</span>(<span class="string">&quot;er&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="built_in">printf</span>(<span class="string">&quot;san&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="built_in">printf</span>(<span class="string">&quot;si&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="built_in">printf</span>(<span class="string">&quot;wu&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:<span class="built_in">printf</span>(<span class="string">&quot;liu&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:<span class="built_in">printf</span>(<span class="string">&quot;qi&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:<span class="built_in">printf</span>(<span class="string">&quot;ba&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:<span class="built_in">printf</span>(<span class="string">&quot;jiu&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:<span class="built_in">printf</span>(<span class="string">&quot;ling&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (mask &gt; <span class="number">9</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">a %= mask;</span><br><span class="line">mask /= <span class="number">10</span>;</span><br><span class="line">&#125; <span class="keyword">while</span> (mask &gt; <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>String字符串</title>
      <link href="/2023/06/23/String%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2023/06/23/String%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="一、样例"><a href="#一、样例" class="headerlink" title="一、样例"></a>一、样例</h1><h2 id="①空参构造"><a href="#①空参构造" class="headerlink" title="①空参构造"></a>①空参构造</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>();</span><br></pre></td></tr></table></figure><h2 id="②直接赋值"><a href="#②直接赋值" class="headerlink" title="②直接赋值"></a>②直接赋值</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="③传递一个字符串，根据传递的字符串内容再创造一个新的字符串对象"><a href="#③传递一个字符串，根据传递的字符串内容再创造一个新的字符串对象" class="headerlink" title="③传递一个字符串，根据传递的字符串内容再创造一个新的字符串对象"></a>③传递一个字符串，根据传递的字符串内容再创造一个新的字符串对象</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;abc&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="④传递一个字符数组根据传递的字符数组内容再创造一个新的字符串对象"><a href="#④传递一个字符数组根据传递的字符数组内容再创造一个新的字符串对象" class="headerlink" title="④传递一个字符数组根据传递的字符数组内容再创造一个新的字符串对象"></a>④传递一个字符数组根据传递的字符数组内容再创造一个新的字符串对象</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span>[] chs = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>&#125;;</span><br><span class="line"><span class="type">String</span> <span class="variable">s4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(chs);</span><br></pre></td></tr></table></figure><h2 id="⑤传递一个字节数组，根据字节数组的内容在创建一个新的字符串对象"><a href="#⑤传递一个字节数组，根据字节数组的内容在创建一个新的字符串对象" class="headerlink" title="⑤传递一个字节数组，根据字节数组的内容在创建一个新的字符串对象"></a>⑤传递一个字节数组，根据字节数组的内容在创建一个新的字符串对象</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">byte[] bytes = &#123;97,98&#125;;</span><br><span class="line">String s5 = new String(bytes);</span><br><span class="line">Syetem.out.println(s5);</span><br><span class="line">// 输出结果为 a,b</span><br></pre></td></tr></table></figure><h1 id="二、方法"><a href="#二、方法" class="headerlink" title="二、方法"></a>二、方法</h1><h2 id="A、字符串比较"><a href="#A、字符串比较" class="headerlink" title="A、字符串比较"></a>A、字符串比较</h2><h3 id="①boolean-equals方法-必须完全相同"><a href="#①boolean-equals方法-必须完全相同" class="headerlink" title="①boolean equals方法(必须完全相同)"></a>①boolean equals方法(必须完全相同)</h3><h3 id="②boolean-equalslgnoreCase-忽略大小写比较"><a href="#②boolean-equalslgnoreCase-忽略大小写比较" class="headerlink" title="②boolean equalslgnoreCase(忽略大小写比较)"></a>②boolean equalslgnoreCase(忽略大小写比较)</h3><h2 id="B、遍历字符串"><a href="#B、遍历字符串" class="headerlink" title="B、遍历字符串"></a>B、遍历字符串</h2><h3 id="①public-char-charAt-int-index-根据索引返回字符（0为开始）"><a href="#①public-char-charAt-int-index-根据索引返回字符（0为开始）" class="headerlink" title="①public char charAt(int index): 根据索引返回字符（0为开始）"></a>①public char charAt(int index): 根据索引返回字符（0为开始）</h3><h3 id="②public-int-length-返回此字符串长度"><a href="#②public-int-length-返回此字符串长度" class="headerlink" title="②public int length(): 返回此字符串长度"></a>②public int length(): 返回此字符串长度</h3><p>用法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="comment">//1.键盘录入一个字符串</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;输入字符串&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sc.next();</span><br><span class="line"><span class="comment">//2.进行遍历</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line"><span class="comment">//i 以此表示字符串的每一个索引</span></span><br><span class="line"><span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> str.charAt(i);</span><br><span class="line">System.out.println(c);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出</p><p><img src="/img.2/字符串用法.png" alt="字符串用法"></p><h2 id="C、charAt-i"><a href="#C、charAt-i" class="headerlink" title="C、charAt(i)"></a>C、charAt(i)</h2><p>输出第i个位置字符的值,输出的是字符，如例①金额转换</p><h2 id="D、String-substring-截取"><a href="#D、String-substring-截取" class="headerlink" title="D、String substring 截取"></a>D、String substring 截取</h2><p>String substring(int beginIndex, int endIndex) 截取，用法如例②手机号码屏蔽</p><p>注意：包头不包尾，包左不包右。只有返回值才是截取的小串。</p><p>String substring(int beginIndex) 截取到末尾</p><h2 id="E、字符转数字"><a href="#E、字符转数字" class="headerlink" title="E、字符转数字"></a>E、字符转数字</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> s=<span class="string">&#x27;3&#x27;</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> s-<span class="number">48</span>; <span class="comment">//这样得出来的就是s所代表的数字了</span></span><br></pre></td></tr></table></figure><h2 id="F、字符替换"><a href="#F、字符替换" class="headerlink" title="F、字符替换"></a>F、字符替换</h2><p>String replace(旧值,新值);</p><p>注意：只有返回值才是替换后的结果。用法如例③敏感词替换</p><h2 id="G、StringBuilder"><a href="#G、StringBuilder" class="headerlink" title="G、StringBuilder"></a>G、StringBuilder</h2><p>使用场景：</p><p>1、字符串拼接</p><p>2、字符串反转</p><p>StringBuilder可以看成是一个容器，创建之后里面的内容是可变的。</p><p><img src="/img.2/stringbuilder/StringBuilder.png" alt="StringBuilder"></p><p>StringBuilder构造方法</p><p>public StringBuilder() 创建一个空白可变字符串对象，不含有任何内容</p><p>public StringBuilder(String str)  根据字符串内容，创建可变字符串对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;abc&quot;</span>); <span class="comment">//如果不知道变量名是什么，可以用类型的首字母来取变量名。如果 sb 引用 StringBuilder 的实例，则 sb.append(x) 和 sb.insert(sb.length(), x) 具有相同的效果。</span></span><br></pre></td></tr></table></figure><p><img src="/img.2/stringbuilder/StringBuilder常用方法.png" alt="StringBuilder常用方法"></p><p>四种用法的实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="comment">//1.创建对象</span></span><br><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line"><span class="comment">//2.添加元素</span></span><br><span class="line">sb.append(<span class="number">1</span>);</span><br><span class="line">sb.append(<span class="number">2.3</span>);</span><br><span class="line">sb.append(<span class="literal">true</span>);</span><br><span class="line"><span class="comment">//3.反转</span></span><br><span class="line">sb.reverse();</span><br><span class="line"><span class="comment">//4.获取长度</span></span><br><span class="line"><span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> sb.length();</span><br><span class="line">       <span class="comment">//5.把StringBuilder变回字符串</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sb.toString;</span><br><span class="line">System.out.println(len);</span><br><span class="line">System.out.println(sb);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​                                                2.添加元素</p><p><img src="/img.2/stringbuilder/2.添加元素.png" alt="2.添加元素"></p><p>​                                                3.反转</p><p><img src="/img.2/stringbuilder/3.反转.png" alt="3.反转"></p><p>​                                                4.计算长度</p><p><img src="/img.2/stringbuilder/4.计算长度.png" alt="4.计算长度"></p><h2 id="H、StringJoiner"><a href="#H、StringJoiner" class="headerlink" title="H、StringJoiner"></a>H、StringJoiner</h2><p>StringJoiner和StringBuilder一样，也可以看成是容器，创建之后里面的内容也是可变的</p><p>作用：提高字符串的操作效率，而且代码编写简洁</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="comment">//1.创建对象</span></span><br><span class="line"><span class="type">StringJoiner</span> <span class="variable">sj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringJoiner</span>(<span class="string">&quot;,&quot;</span>,<span class="string">&quot;[&quot;</span>,<span class="string">&quot;]&quot;</span>);</span><br><span class="line"><span class="comment">//2.添加元素</span></span><br><span class="line">sj.add(<span class="string">&quot;aaa&quot;</span>).add(<span class="string">&quot;bbb&quot;</span>).add(<span class="string">&quot;ccc&quot;</span>);<span class="comment">//链式编程，可以把三个add分开成sj.add看</span></span><br><span class="line"><span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> sj.length();</span><br><span class="line">System.out.println(len);</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>();</span><br><span class="line">str = sj.toString(); <span class="comment">//将sj字符串化</span></span><br><span class="line">System.out.println(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="I、调整字符"><a href="#I、调整字符" class="headerlink" title="I、调整字符"></a>I、调整字符</h2><p><img src="/img.2/stringbuilder/调整字符串.png" alt="调整字符串"></p><h1 id="三、例题"><a href="#三、例题" class="headerlink" title="三、例题"></a>三、例题</h1><h2 id="①金额转换"><a href="#①金额转换" class="headerlink" title="①金额转换"></a>①金额转换</h2><p><img src="/img.2/金额转换.png" alt="金额转换"></p><p><img src="/img.2/思路.png" alt="思路"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">int</span> money;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;请输入金额&quot;</span>);</span><br><span class="line">money=sc.nextInt();</span><br><span class="line"><span class="keyword">if</span> (money&gt;=<span class="number">0</span> &amp;&amp; money&lt;=<span class="number">99999999</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;无效金额，请重新输入&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(money);</span><br><span class="line"><span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="type">int</span> mon=money;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">mon = mon / <span class="number">10</span>;  </span><br><span class="line">count++;  <span class="comment">//统计money有几位数</span></span><br><span class="line"><span class="keyword">if</span> ( mon == <span class="number">0</span> ) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">str = get(money,str,count);</span><br><span class="line">System.out.println(str);</span><br><span class="line">str = name(str);</span><br><span class="line">System.out.println(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">get</span><span class="params">(<span class="type">int</span> money,String str,<span class="type">int</span> count)</span> &#123;</span><br><span class="line">String[] arr= &#123;<span class="string">&quot;零&quot;</span>,<span class="string">&quot;壹&quot;</span>,<span class="string">&quot;贰&quot;</span>,<span class="string">&quot;叁&quot;</span>,<span class="string">&quot;肆&quot;</span>,<span class="string">&quot;伍&quot;</span>,<span class="string">&quot;陆&quot;</span>,<span class="string">&quot;柒&quot;</span>,<span class="string">&quot;捌&quot;</span>,<span class="string">&quot;玖&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;count;i++)&#123; <span class="comment">//转换数字为中文</span></span><br><span class="line"><span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> money % <span class="number">10</span>;</span><br><span class="line">money = money /<span class="number">10</span>;</span><br><span class="line">str = arr[t]+str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">7</span>-count;i++) &#123; <span class="comment">//补齐前面的零，也就是将输入的数字补全成一个七位数</span></span><br><span class="line">str = arr[<span class="number">0</span>]+str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">name</span><span class="params">(String str)</span> &#123;</span><br><span class="line">String[] brr= &#123;<span class="string">&quot;佰&quot;</span>,<span class="string">&quot;拾&quot;</span>,<span class="string">&quot;万&quot;</span>,<span class="string">&quot;仟&quot;</span>,<span class="string">&quot;佰&quot;</span>,<span class="string">&quot;拾&quot;</span>,<span class="string">&quot;元&quot;</span>&#125;;</span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;str.length();i++) &#123;</span><br><span class="line">result = result+str.charAt(i)+brr[i]; <span class="comment">//将字符串补全成题目所需的样子</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="②手机号码屏蔽"><a href="#②手机号码屏蔽" class="headerlink" title="②手机号码屏蔽"></a>②手机号码屏蔽</h2><p>将图上的号码变成下面的样子</p><p><img src="/img.2/手机号码屏蔽.png" alt="手机号码屏蔽"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="type">String</span> <span class="variable">phoneNumber</span> <span class="operator">=</span> <span class="string">&quot;19403216906&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">start</span> <span class="operator">=</span> phoneNumber.substring(<span class="number">0</span>, <span class="number">3</span>); <span class="comment">//从零到三，包括零不包括三</span></span><br><span class="line"><span class="type">String</span> <span class="variable">end</span> <span class="operator">=</span> phoneNumber.substring(<span class="number">7</span>); <span class="comment">//从第七位到最后</span></span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span><span class="string">&quot;&quot;</span>;</span><br><span class="line">str=start+<span class="string">&quot;****&quot;</span>+end;</span><br><span class="line">System.out.println(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="③敏感词替换"><a href="#③敏感词替换" class="headerlink" title="③敏感词替换"></a>③敏感词替换</h2><p><img src="/img.2/敏感词替换.png" alt="敏感词替换"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="type">String</span> <span class="variable">talk</span> <span class="operator">=</span> <span class="string">&quot;你玩的真好，TMD,CNM&quot;</span>;</span><br><span class="line">String[] arr = &#123;<span class="string">&quot;TMD&quot;</span>,<span class="string">&quot;CNM&quot;</span>,<span class="string">&quot;XXX&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;arr.length;i++)</span><br><span class="line">&#123;</span><br><span class="line">talk = talk.replace(arr[i],<span class="string">&quot;***&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(talk);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/img.2/输出结果.png" alt="输出结果"></p><h2 id="④转换罗马数字"><a href="#④转换罗马数字" class="headerlink" title="④转换罗马数字"></a>④转换罗马数字</h2><p><img src="/img.2/stringbuilder/转换罗马数字.png" alt="转换罗马数字"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">String str;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123; <span class="comment">//判断输入数据是否符合要求</span></span><br><span class="line">str = sc.next();</span><br><span class="line"><span class="type">boolean</span> <span class="variable">temp</span> <span class="operator">=</span> checkstr(str);</span><br><span class="line"><span class="keyword">if</span> (temp) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;请重新输入&quot;</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">str = Replacestr(str);</span><br><span class="line">System.out.println(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">checkstr</span><span class="params">(String str)</span> &#123;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">mn</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; str.length();i++) &#123;</span><br><span class="line"><span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> str.charAt(i);</span><br><span class="line"><span class="keyword">if</span> (c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">mn = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (count &gt; <span class="number">9</span>) &#123;</span><br><span class="line">mn=<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> mn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">Replacestr</span><span class="params">(String str)</span> &#123;</span><br><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line"><span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> str.charAt(i);</span><br><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> c - <span class="number">48</span>; <span class="comment">//将字符转变成数字</span></span><br><span class="line"><span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> changeStr(number);</span><br><span class="line">sb.append(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> sb.toString();</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">changeStr</span><span class="params">(<span class="type">int</span> number)</span> &#123;</span><br><span class="line">String[] arr = &#123;<span class="string">&quot;&quot;</span>,<span class="string">&quot;一&quot;</span>,<span class="string">&quot;二&quot;</span>,<span class="string">&quot;仨&quot;</span>,<span class="string">&quot;四&quot;</span>,<span class="string">&quot;五&quot;</span>,<span class="string">&quot;六&quot;</span>,<span class="string">&quot;七&quot;</span>,<span class="string">&quot;八&quot;</span>,<span class="string">&quot;九&quot;</span>&#125;;</span><br><span class="line">       <span class="comment">//懒得去找罗马数字了，直接改成汉字</span></span><br><span class="line"><span class="keyword">return</span> arr[number];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用Switch的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">String str;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">str = sc.next();</span><br><span class="line"><span class="type">boolean</span> <span class="variable">temp</span> <span class="operator">=</span> checkstr(str);</span><br><span class="line"><span class="keyword">if</span> (temp) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;请重新输入&quot;</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">str = Replacestr(str);</span><br><span class="line">System.out.println(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">checkstr</span><span class="params">(String str)</span> &#123;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">mn</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; str.length();i++) &#123;</span><br><span class="line"><span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> str.charAt(i);</span><br><span class="line"><span class="keyword">if</span> (c&lt;<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&gt;<span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">mn = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (count &gt; <span class="number">9</span>) &#123;</span><br><span class="line">mn=<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> mn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">Replacestr</span><span class="params">(String str)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line"><span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> str.charAt(i);</span><br><span class="line"><span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> changeStr(c);</span><br><span class="line">sb.append(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> sb.toString();</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">changeStr</span><span class="params">(<span class="type">char</span> c)</span> &#123;</span><br><span class="line">String str;</span><br><span class="line"><span class="keyword">switch</span> (c) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span> -&gt; str = <span class="string">&quot;一&quot;</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span> -&gt; str = <span class="string">&quot;二&quot;</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span> -&gt; str = <span class="string">&quot;三&quot;</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span> -&gt; str = <span class="string">&quot;四&quot;</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span> -&gt; str = <span class="string">&quot;五&quot;</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span> -&gt; str = <span class="string">&quot;六&quot;</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;7&#x27;</span> -&gt; str = <span class="string">&quot;七&quot;</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;8&#x27;</span> -&gt; str = <span class="string">&quot;八&quot;</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;9&#x27;</span> -&gt; str = <span class="string">&quot;九&quot;</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span> -&gt; str = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">default</span> -&gt; str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="⑤调整字符串内容"><a href="#⑤调整字符串内容" class="headerlink" title="⑤调整字符串内容"></a>⑤调整字符串内容</h2><p><img src="/img.2/stringbuilder/调整字符串内容.png" alt="调整字符串内容"></p><p>方法一</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="type">String</span> <span class="variable">strA</span> <span class="operator">=</span> <span class="string">&quot;abcde&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">strB</span> <span class="operator">=</span> <span class="string">&quot;cdea&quot;</span>;</span><br><span class="line"><span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; strA.length(); i++) &#123;</span><br><span class="line">strA = changestr(strA);</span><br><span class="line"><span class="keyword">if</span> (strA.equals(strB)) &#123;</span><br><span class="line">System.out.println(<span class="literal">true</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (count==strA.length()) &#123;</span><br><span class="line">System.out.println(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">changestr</span><span class="params">(String strA)</span> &#123;</span><br><span class="line">String star= strA.substring(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">end</span> <span class="operator">=</span> strA.substring(<span class="number">1</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> end+star;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="type">String</span> <span class="variable">strA</span> <span class="operator">=</span> <span class="string">&quot;abcde&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">strB</span> <span class="operator">=</span> <span class="string">&quot;cdeab&quot;</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> check(strA,strB);</span><br><span class="line">System.out.println(result);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">(String strA,String strB)</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; strA.length(); i++) &#123;</span><br><span class="line">strA = changestr(strA);</span><br><span class="line"><span class="keyword">if</span> (strA.equals(strB)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">changestr</span><span class="params">(String strA)</span> &#123;</span><br><span class="line"><span class="type">char</span>[] arr = strA.toCharArray(); <span class="comment">//将字符串变成字符数组</span></span><br><span class="line"><span class="type">char</span> <span class="variable">first</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">arr[i-<span class="number">1</span>]=arr[i];</span><br><span class="line">&#125;</span><br><span class="line">arr[arr.length-<span class="number">1</span>]=first;</span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(arr);</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四、字符串原理小结"><a href="#四、字符串原理小结" class="headerlink" title="四、字符串原理小结"></a>四、字符串原理小结</h1><p><img src="/img.2/stringbuilder/字符串原理小结.png" alt="字符串原理小-1"></p><h2 id="1-基础数据类型"><a href="#1-基础数据类型" class="headerlink" title="1.基础数据类型"></a>1.基础数据类型</h2><p>①整数类型：<code>long、int、short、byte</code></p><p>②浮点类型：<code>float、double</code> </p><p>③字符类型：<code>char</code></p><p>④布尔类型：<code>boolean</code></p><h2 id="2-引用数据类型"><a href="#2-引用数据类型" class="headerlink" title="2.引用数据类型"></a>2.引用数据类型</h2><p>类、 <a href="https://so.csdn.net/so/search?q=接口类型&amp;spm=1001.2101.3001.7020">接口类型</a>、 数组类型、 枚举类型、 注解类型、 字符串型</p><p>例：<code>String</code>类型就是引用类型。</p><h1 id="五、杂题"><a href="#五、杂题" class="headerlink" title="五、杂题"></a>五、杂题</h1><h2 id="①任意从键盘输入字符串，随机打乱后输出"><a href="#①任意从键盘输入字符串，随机打乱后输出" class="headerlink" title="①任意从键盘输入字符串，随机打乱后输出"></a>①任意从键盘输入字符串，随机打乱后输出</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入字符串&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sc.next();</span><br><span class="line"><span class="type">char</span>[] arr = str.toCharArray();</span><br><span class="line"><span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> r.nextInt(arr.length);</span><br><span class="line"><span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> arr[i];</span><br><span class="line">arr[i] = arr[number];</span><br><span class="line">arr[number] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(arr);</span><br><span class="line">System.out.println(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="②生成验证码"><a href="#②生成验证码" class="headerlink" title="②生成验证码"></a>②生成验证码</h2><p><img src="/img.2/stringbuilder/生成验证码.png" alt="生成验证码"></p><p>本题算是杂题①的进阶版,但仍有不足，比如有字符重复的问题(比如既有a的小写字母又有a的大写字母)，但实际应用没问题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="type">char</span>[] arr = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">52</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length/<span class="number">2</span>; i++) &#123; <span class="comment">//录入小写字母</span></span><br><span class="line">arr[i]=(<span class="type">char</span>)(<span class="number">97</span>+i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> arr.length/<span class="number">2</span>; i &lt; arr.length; i++) &#123; <span class="comment">//录入大写字母</span></span><br><span class="line">arr[i] = (<span class="type">char</span>)(<span class="number">65</span>+i-<span class="number">26</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span>[] brr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; brr.length; i++) &#123; <span class="comment">//录入数字</span></span><br><span class="line">brr[i]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123; </span><br><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> r.nextInt(arr.length);</span><br><span class="line">sb.append(arr[number]);</span><br><span class="line">&#125;</span><br><span class="line">sb.append(brr[r.nextInt(brr.length)]);</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sb.toString();</span><br><span class="line"><span class="type">char</span>[] crr = str.toCharArray();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; crr.length; i++) &#123; <span class="comment">//打乱字符串顺序</span></span><br><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> r.nextInt(crr.length);</span><br><span class="line"><span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> crr[i];</span><br><span class="line">crr[i] = crr[number];</span><br><span class="line">crr[number] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(crr);</span><br><span class="line">System.out.println(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="③数字字符串的乘积"><a href="#③数字字符串的乘积" class="headerlink" title="③数字字符串的乘积"></a>③数字字符串的乘积</h2><p><img src="/img.2/stringbuilder/数字字符串的乘积.png" alt="数字字符串的乘积"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="type">String</span> <span class="variable">strA</span> <span class="operator">=</span> <span class="string">&quot;12345&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">strB</span> <span class="operator">=</span> <span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">number1</span> <span class="operator">=</span> getresult(strA);</span><br><span class="line"><span class="type">int</span> <span class="variable">number2</span> <span class="operator">=</span> getresult(strB);</span><br><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> number1*number2;</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> result(num);</span><br><span class="line">System.out.println(str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getresult</span><span class="params">(String str)</span> &#123; <span class="comment">//将字符串变成数字返回</span></span><br><span class="line"><span class="type">int</span> b=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> str.charAt(i)-<span class="number">48</span>;</span><br><span class="line"> b=b*<span class="number">10</span>+a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">result</span><span class="params">(<span class="type">int</span> num)</span> &#123; </span><br><span class="line"><span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> num;  </span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;  <span class="comment">//计算num的位数</span></span><br><span class="line">count ++;</span><br><span class="line">sum/=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (sum==<span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; count; i++) &#123; <span class="comment">//将每一位数字录入字符串</span></span><br><span class="line"><span class="type">int</span> s=num%<span class="number">10</span>;</span><br><span class="line">num/=<span class="number">10</span>;</span><br><span class="line">sb.append((<span class="type">char</span>)(<span class="number">48</span>+s));</span><br><span class="line">&#125;</span><br><span class="line">sb.reverse();  <span class="comment">//反转stringbuilder的内容，获得想要的</span></span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sb.toString();</span><br><span class="line"><span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="④求字符串中单词的长度"><a href="#④求字符串中单词的长度" class="headerlink" title="④求字符串中单词的长度"></a>④求字符串中单词的长度</h2><p><img src="/img.2/stringbuilder/字符串中单词的长度.png" alt="字符串中单词的长度"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入字符串&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">mn</span> <span class="operator">=</span> sc.next();</span><br><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(mn);</span><br><span class="line">sb.reverse();</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sb.toString();</span><br><span class="line"><span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">System.out.println(str);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(str.charAt(i)!=<span class="number">32</span>) &#123;</span><br><span class="line">count++;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>函数</title>
      <link href="/2023/06/23/%E5%87%BD%E6%95%B0/"/>
      <url>/2023/06/23/%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="1函数需要注意的事项"><a href="#1函数需要注意的事项" class="headerlink" title="1函数需要注意的事项"></a>1函数需要注意的事项</h1><h2 id="1没有参数时"><a href="#1没有参数时" class="headerlink" title="1没有参数时"></a>1没有参数时</h2><p>void f()</p><p>在传统C中，他表示f函数参数未知，并不表示没有参数</p><p>void f(void)才是表示没有参数</p><h1 id="2逗号运算符"><a href="#2逗号运算符" class="headerlink" title="2逗号运算符"></a>2逗号运算符</h1><p>调用函数时，圆括号里的逗号是标点符号，不是运算符。入例一</p><p>例一：f(a,b)     </p><p>但如果多加了个括号，则表示先算（a，b） 如例二</p><p>例二：f((a,b))    （a,b）最后输出的是后面那个数，即b。例如d=(a,b)  则d=b </p><h1 id="3C语言不允许在函数里定义函数，即不允许函数的嵌套"><a href="#3C语言不允许在函数里定义函数，即不允许函数的嵌套" class="headerlink" title="3C语言不允许在函数里定义函数，即不允许函数的嵌套"></a>3C语言不允许在函数里定义函数，即不允许函数的嵌套</h1><h1 id="4函数定义与函数原型"><a href="#4函数定义与函数原型" class="headerlink" title="4函数定义与函数原型"></a>4函数定义与函数原型</h1><p>函数定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">f</span><span class="params">()</span>  <span class="comment">//()中可有东西也可以没有东西</span></span><br><span class="line">&#123;&#125;</span><br></pre></td></tr></table></figure><p>函数原型</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">f</span><span class="params">()</span>;  <span class="comment">//()中可有东西也可以没有东西</span></span><br></pre></td></tr></table></figure><h2 id="静态运算符"><a href="#静态运算符" class="headerlink" title="静态运算符"></a>静态运算符</h2><p>在C语言中，sizeof()是一个静态<a href="https://so.csdn.net/so/search?q=运算符&amp;spm=1001.2101.3001.7020">运算符</a>，即编译器只关注括号内数值的类型，而不会对括号里面的参数进行计算</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">8</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a = %d\nsizeof(a/=2)=%d\n&quot;</span>, a, <span class="keyword">sizeof</span>(a/=<span class="number">2</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出的结果为8 4  a的值并没有变化，但a/=2的计算还是进行了</span></span><br></pre></td></tr></table></figure><h2 id="ASCll码"><a href="#ASCll码" class="headerlink" title="ASCll码"></a>ASCll码</h2><p>“A”: 65</p><p>“a”: 97</p><p>“0”: 48</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>steam的dlc</title>
      <link href="/2023/06/23/steam%E7%9A%84dlc%E6%9B%B4%E6%96%B0/"/>
      <url>/2023/06/23/steam%E7%9A%84dlc%E6%9B%B4%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<p><a href="https://g4950acnxj.feishu.cn/docx/OUA2dbFPXodBV8xfOADcKjmTnM3">喵斯快跑dlc</a></p><p><a href="https://docs.qq.com/doc/DTWhDSmdWaktHdG9Z">群星全dlc</a></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/2023/06/23/markdown%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/06/23/markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="1标题格式"><a href="#1标题格式" class="headerlink" title="1标题格式"></a>1标题格式</h2><h3 id="标题共有6级，前面-号有几个就是几级标题，一级标题最大"><a href="#标题共有6级，前面-号有几个就是几级标题，一级标题最大" class="headerlink" title="标题共有6级，前面#号有几个就是几级标题，一级标题最大"></a>标题共有6级，前面#号有几个就是几级标题，一级标题最大</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># <span class="number">1</span></span><br><span class="line">## <span class="number">2</span></span><br><span class="line">### <span class="number">3</span> </span><br><span class="line">#### <span class="number">4</span></span><br><span class="line">##### <span class="number">5</span></span><br><span class="line">###### <span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="演示："><a href="#演示：" class="headerlink" title="演示："></a>演示：</h2><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><h4 id="4"><a href="#4" class="headerlink" title="4"></a>4</h4><h5 id="5"><a href="#5" class="headerlink" title="5"></a>5</h5><h6 id="6"><a href="#6" class="headerlink" title="6"></a>6</h6><h1 id="2键盘ESC下的那个点"><a href="#2键盘ESC下的那个点" class="headerlink" title="2键盘ESC下的那个点"></a>2键盘ESC下的那个点</h1><h2 id="连续三个点后可以输入想要写的语法-必须是英文状态下"><a href="#连续三个点后可以输入想要写的语法-必须是英文状态下" class="headerlink" title="连续三个点后可以输入想要写的语法(必须是英文状态下)"></a>连续三个点后可以输入想要写的语法(必须是英文状态下)</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">```c</span><br></pre></td></tr></table></figure><h1 id="3超链接"><a href="#3超链接" class="headerlink" title="3超链接"></a>3超链接</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//写法：[我的博客](https://yizhilinggui.github.io/)</span><br><span class="line">放在博客里才能点击转到</span><br></pre></td></tr></table></figure><p><a href="https://yizhilinggui.github.io/">我的博客</a></p><p>4引入图片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">语法：![](以source为根目录的地址)   </span><br><span class="line">例如：![](/img/头像.jpg) #如图下第一张图</span><br><span class="line">引入网页图片：![](https://ilovepapers.com/wp-content/uploads/papers.co-nc49-space-bw-dark-nebula-star-awesome-6-wallpaper-340x340.jpg) #一般会受网速影响，什么时候显示看网速，如第二张图</span><br></pre></td></tr></table></figure><p><img src="/img/头像.jpg" alt="图片"></p><p><img src="https://ilovepapers.com/wp-content/uploads/papers.co-hv15-girl-face-cute-kpop-6-wallpaper-340x340.jpg" alt=""></p><h1 id="5引用"><a href="#5引用" class="headerlink" title="5引用"></a>5引用</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//引用语法</span><br><span class="line">&gt; 作者</span><br><span class="line">&gt;&gt; 作者</span><br><span class="line">&gt;&gt;&gt; 作者</span><br></pre></td></tr></table></figure><blockquote><p>作者</p><blockquote><p>作者</p><blockquote><p>作者</p></blockquote></blockquote></blockquote><h1 id="6分割线"><a href="#6分割线" class="headerlink" title="6分割线"></a>6分割线</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//分割线</span><br><span class="line">---</span><br><span class="line">//分割线2</span><br><span class="line">***</span><br></pre></td></tr></table></figure><hr><hr><h1 id="7加粗"><a href="#7加粗" class="headerlink" title="7加粗"></a>7加粗</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 加粗</span><br><span class="line">**变强**</span><br><span class="line">// 代码高亮显示</span><br><span class="line">==天行健==</span><br><span class="line">// 删除线</span><br><span class="line">~~君子~~</span><br><span class="line">// 斜体</span><br><span class="line">*自强不息*</span><br></pre></td></tr></table></figure><p><strong>变强</strong></p><p>==天行健==</p><p><del>君子</del></p><p><em>自强不息</em></p><h1 id="8居左，居右，居中"><a href="#8居左，居右，居中" class="headerlink" title="8居左，居右，居中"></a>8居左，居右，居中</h1><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">|<span class="params">标题</span>|标题|<span class="params">标题</span>|</span><br><span class="line">|<span class="params">:---</span>|<span class="symbol">:---</span><span class="symbol">:|---</span><span class="symbol">:|</span></span><br><span class="line">|<span class="params">居左测试文本</span>|居中测试文本|<span class="params">居右测试文本</span>|</span><br><span class="line">|<span class="params">居左测试文本1</span>|居中测试文本<span class="number">2</span>|<span class="params">居右测试文本3</span>|</span><br><span class="line">|<span class="params">居左测试文本11</span>|居中测试文本<span class="number">22</span>|<span class="params">居右测试文本33</span>|</span><br><span class="line">|<span class="params">居左测试文本111</span>|居中测试文本<span class="number">222</span>|<span class="params">居右测试文本333</span>|</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:left">标题</th><th style="text-align:center">标题</th><th style="text-align:right">标题</th></tr></thead><tbody><tr><td style="text-align:left">居左测试文本</td><td style="text-align:center">居中测试文本</td><td style="text-align:right">居右测试文本</td></tr><tr><td style="text-align:left">居左测试文本1</td><td style="text-align:center">居中测试文本2</td><td style="text-align:right">居右测试文本3</td></tr><tr><td style="text-align:left">居左测试文本11</td><td style="text-align:center">居中测试文本22</td><td style="text-align:right">居右测试文本33</td></tr><tr><td style="text-align:left">居左测试文本111</td><td style="text-align:center">居中测试文本222</td><td style="text-align:right">居右测试文本333</td></tr></tbody></table></div><h3 id="二-Front-matter"><a href="#二-Front-matter" class="headerlink" title="二 Front-matter"></a>二 Front-matter</h3><p><code>Front-matter</code> 是 markdown 文件最上方以 <code>---</code> 分隔的区域，用于指定个别档案的变数。</p><ul><li><p>Page Front-matter 用于页面配置</p></li><li><p>Post Front-matter 用于文章页配置</p><p><strong>Page Front-matter：</strong></p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top_img:</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">aside:</span><br><span class="line">aplayer:</span><br><span class="line">highlight_shrink:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">写法                                                              解释</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>title</th><th>【必需】页面标题</th></tr></thead><tbody><tr><td>date</td><td>【必需】页面创建日期</td></tr><tr><td>type</td><td>【必需】标籤、分类和友情链接三个页面需要配置</td></tr><tr><td>updated</td><td>【可选】页面更新日期</td></tr><tr><td>description</td><td>【可选】页面描述</td></tr><tr><td>keywords</td><td>【可选】页面关键字</td></tr><tr><td>comments</td><td>【可选】显示页面评论模块 (默认 true)</td></tr><tr><td>top_img</td><td>【可选】页面顶部图片</td></tr><tr><td>mathjax</td><td>【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>kates</td><td>【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载 aplayer 的 js 和 css, 请参考文章下面的音乐 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开 (true/false)(默认为设置中 highlight_shrink 的配置)</td></tr></tbody></table></div><p><strong>Post Front-matter：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top_img:</span><br><span class="line">comments:</span><br><span class="line">cover:</span><br><span class="line">toc:</span><br><span class="line">toc_number:</span><br><span class="line">toc_style_simple:</span><br><span class="line">copyright:</span><br><span class="line">copyright_author:</span><br><span class="line">copyright_author_href:</span><br><span class="line">copyright_url:</span><br><span class="line">copyright_info:</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">aplayer:</span><br><span class="line">highlight_shrink:</span><br><span class="line">aside:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>写法</th><th>说明</th></tr></thead><tbody><tr><td>title</td><td>【必需】文章标题</td></tr><tr><td>date</td><td>【必需】文章创建日期</td></tr><tr><td>updated</td><td>【可选】文章更新日期</td></tr><tr><td>tags</td><td>【可选】文章标籤</td></tr><tr><td>categories</td><td>【可选】文章分类</td></tr><tr><td>keywords</td><td>【可选】文章关键字</td></tr><tr><td>description</td><td>【可选】文章描述</td></tr><tr><td>top_img</td><td>【可选】文章顶部图片</td></tr><tr><td>cover</td><td>【可选】文章缩略图 (如果没有设置 top_img, 文章页顶部将显示缩略图，可设为 false / 图片地址 / 留空)</td></tr><tr><td>comments</td><td>【可选】显示文章评论模块 (默认 true)</td></tr><tr><td>toc</td><td>【可选】显示文章 TOC (默认为设置中 toc 的 enable 配置)</td></tr><tr><td>toc_number</td><td>【可选】显示 toc_number (默认为设置中 toc 的 number 配置)</td></tr><tr><td>toc_style_simple</td><td>【可选】显示 toc 简洁模式</td></tr><tr><td>copyright</td><td>【可选】显示文章版权模块 (默认为设置中 post_copyright 的 enable 配置)</td></tr><tr><td>copyright_author</td><td>【可选】文章版权模块的文章作者</td></tr><tr><td>copyright_author_href</td><td>【可选】文章版权模块的文章作者链接</td></tr><tr><td>copyright_url</td><td>【可选】文章版权模块的文章连结链接</td></tr><tr><td>copyright_info</td><td>【可选】文章版权模块的版权声明文字</td></tr><tr><td>mathjax</td><td>【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载 aplayer 的 js 和 css, 请参考文章下面的音乐 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开 (true/false)(默认为设置中 highlight_shrink 的配置)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr></tbody></table></div><h1 id="9图床上传命令"><a href="#9图床上传命令" class="headerlink" title="9图床上传命令"></a>9图床上传命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 将更改提交</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;更新图片&quot;</span><br><span class="line"># 推送至github仓库</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java-面向对象</title>
      <link href="/2023/06/23/Java-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
      <url>/2023/06/23/Java-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="一、定义"><a href="#一、定义" class="headerlink" title="一、定义"></a>一、定义</h1><p>本章开始代码不局限于一个文件内了。故以后的代码可能是不同的文件中，或者直接给百度云链接下载。</p><h2 id="①定义-类和对象"><a href="#①定义-类和对象" class="headerlink" title="①定义: 类和对象"></a>①定义: 类和对象</h2><p>public class 类名{</p><p>1、成员变量（代表属性，一般是名词）</p><p>2、成员方法（代表行为，一般是动词）</p><p>3、构造器（后面学）</p><p>4、代码块（后面学）</p><p>5、内部类（后面学）</p><p>}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Phone</span>&#123;</span><br><span class="line"><span class="comment">// 属性（成员变量）</span></span><br><span class="line">String brand;</span><br><span class="line"><span class="type">double</span> price;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 行为（方法）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">playgame</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到类的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 类名 对象名 = new 类名();</span></span><br><span class="line"><span class="type">Phone</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Phone</span>();</span><br></pre></td></tr></table></figure><p>反思</p><p>1.类和对象是什么？</p><p>类：是共同特征的描述(设计图)</p><p>对象：是真实存在的具体实例</p><p>2.拿到对象后能做什么？</p><p>①对象.成员变量</p><p>②对象.成员方法(…)</p><h2 id="②定义类的补充注意事项"><a href="#②定义类的补充注意事项" class="headerlink" title="②定义类的补充注意事项"></a>②定义类的补充注意事项</h2><p>①用来描述一类事物的类，专业叫做：Javabean类</p><p>​    在Javabean类中，是不写main方法的。</p><p>②编写main方法的类，叫做测试类。</p><p>可以再测试类中创建javabean累的对象并进行赋值调用。</p><p>③类名首字母建议大写，需要见名知意，驼峰模式</p><p>④一个Java文件中可以定义多个class类，且只能一个类是public修饰，而且public修饰的类名必须成为代码文件名。实际开发中建议还是一个文件定义一个class类。</p><p>⑤成员变量的完整定义格式是：修饰符 数据类型 变量名称 = 初始化值；一般无需指定初始化值，存在默认值。</p><p>⑥不要在类中赋值，要在创建对象，对对象进行赋值。</p><h1 id="二、封装"><a href="#二、封装" class="headerlink" title="二、封装"></a>二、封装</h1><h2 id="①定义"><a href="#①定义" class="headerlink" title="①定义"></a>①定义</h2><p>对象代表什么，就得封装对应的数据，并提供数据对应的行为</p><h2 id="②private关键字"><a href="#②private关键字" class="headerlink" title="②private关键字"></a>②private关键字</h2><p>用来过滤一部分非法关键字</p><p>例如</p><p>在”bli”文件(javabean)中 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">bli</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">String name;</span><br><span class="line"><span class="comment">//给成员变量 age赋值</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(a&gt;=<span class="number">6</span> &amp;&amp; a&lt;=<span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line">age=a;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;非法参数&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//对外提供age属性</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;赚钱&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在”sc”文件(测试)中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">sc</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">  <span class="type">bli</span> <span class="variable">b</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">bli</span>();</span><br><span class="line">  b.setAge(<span class="number">9</span>);</span><br><span class="line">  b.getAge();</span><br><span class="line">  b.name=<span class="string">&quot;哔哩哔哩&quot;</span>;</span><br><span class="line">  System.out.println(b.getAge());</span><br><span class="line">  System.out.println(b.name);</span><br><span class="line">  b.eat();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终输出结果为：</p><p>9</p><p>哔哩哔哩</p><p>赚钱</p><h2 id="③this关键字"><a href="#③this关键字" class="headerlink" title="③this关键字"></a>③this关键字</h2><p>用来区分成员变量和局部变量的</p><p>this本质: 所在方法调用者的地址值</p><p>在”bli”文件(javabean)中 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">bli</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">String name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123; </span><br><span class="line"><span class="keyword">if</span>(age&gt;=<span class="number">6</span> &amp;&amp; age&lt;=<span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">this</span>.age=age;<span class="comment">//表示对成员变量age赋值</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;非法参数&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;赚钱&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在”sc”文件(测试)中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">sc</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">  <span class="type">bli</span> <span class="variable">b</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">bli</span>();</span><br><span class="line">  b.setAge(<span class="number">9</span>);</span><br><span class="line">  b.getAge();</span><br><span class="line">  b.name=<span class="string">&quot;哔哩哔哩&quot;</span>;</span><br><span class="line">  System.out.println(b.getAge());</span><br><span class="line">  System.out.println(b.name);</span><br><span class="line">  b.eat();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="④构造方法"><a href="#④构造方法" class="headerlink" title="④构造方法"></a>④构造方法</h2><p>格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span>&#123;</span><br><span class="line"> 修饰符 类名(参数)&#123;</span><br><span class="line"> 方法体;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>特点：</p><p>1.方法名与类名相同，大小写也一致</p><p>2.没有返回值类型，连void也没有</p><p>3.没有具体的返回值(不能由return带回结果数据)</p><p>执行时机：</p><p>1.创建对象的时候由虚拟机调用，不能手动调用构造方法</p><p>2.每创建一次对象，就会调用一次构造方法</p><h2 id="⑤标准的Javabean类"><a href="#⑤标准的Javabean类" class="headerlink" title="⑤标准的Javabean类"></a>⑤标准的Javabean类</h2><p>①类名需要见名知意</p><p>②成员变量使用private修饰</p><p>③提供至少两个构造方法</p><p>无参构造方法</p><p>带全部参数的构造方法</p><p>④成员方法</p><p>提供每一个成员变量对应的setXxx()/getXxx()</p><p>如果还有其他行为，也需要写上</p><p>例一就是一个实战例子</p><h1 id="三、例题"><a href="#三、例题" class="headerlink" title="三、例题"></a>三、例题</h1><h2 id="例一"><a href="#例一" class="headerlink" title="例一"></a>例一</h2><p><img src="/img.2/找女友.png" alt="找女友"></p><p>Role文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Role</span> &#123;</span><br><span class="line"><span class="comment">//属性</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> blood;</span><br><span class="line"></span><br><span class="line"><span class="comment">//空参</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Role</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//带上全部参数的构造</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Role</span><span class="params">(String name,<span class="type">int</span> blood)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name=name;</span><br><span class="line"><span class="built_in">this</span>.blood=blood;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name=name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBlood</span><span class="params">(<span class="type">int</span> blood)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.blood=blood;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getBlood</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> blood;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个方法用于攻击别人</span></span><br><span class="line"><span class="comment">//思考，谁攻击谁？</span></span><br><span class="line"><span class="comment">//Role r1 =new Role();</span></span><br><span class="line"><span class="comment">//Role r2 =new Role();</span></span><br><span class="line"><span class="comment">//r1.攻击(r2);</span></span><br><span class="line"><span class="comment">//方法的调用者去攻击参数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">attack</span><span class="params">(Role role)</span> &#123;<span class="comment">//输入两个参数，代表两个人，如果只有一个，那就不知道要攻击谁。</span></span><br><span class="line"><span class="comment">//计算造成伤害1~20</span></span><br><span class="line"><span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"><span class="type">int</span> <span class="variable">hurt</span> <span class="operator">=</span> r.nextInt(<span class="number">20</span>)+<span class="number">1</span>;</span><br><span class="line"><span class="comment">//剩余血量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">remainBlood</span> <span class="operator">=</span> role.getBlood()-hurt;</span><br><span class="line"><span class="comment">//对剩余血量做一个验证，防止出现负数</span></span><br><span class="line">remainBlood = remainBlood &lt; <span class="number">0</span> ? <span class="number">0</span> : remainBlood;</span><br><span class="line"><span class="comment">//计算被打人物剩余血量</span></span><br><span class="line">role.setBlood(remainBlood);</span><br><span class="line">System.out.println(<span class="built_in">this</span>.getName()+<span class="string">&quot;打了&quot;</span>+role.getName()+<span class="string">&quot;一拳&quot;</span>+</span><br><span class="line"><span class="string">&quot;造成了&quot;</span>+hurt+<span class="string">&quot;点伤害,&quot;</span>+role.getName()+<span class="string">&quot;还剩下&quot;</span>+remainBlood+<span class="string">&quot;血量&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>usertest文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">usertest</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Role r1=<span class="keyword">new</span> <span class="title class_">Role</span>(<span class="string">&quot;乔峰&quot;</span>,<span class="number">100</span>);</span><br><span class="line"><span class="type">Role</span> <span class="variable">r2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Role</span>(<span class="string">&quot;鸠摩智&quot;</span>, <span class="number">100</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">r1.attack(r2);</span><br><span class="line"><span class="keyword">if</span> (r2.getBlood()==<span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(r1.getName()+<span class="string">&quot;k.o了&quot;</span>+r2.getName());</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">r2.attack(r1);</span><br><span class="line"><span class="keyword">if</span>(r1.getBlood()==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(r2.getName()+<span class="string">&quot;k.o了&quot;</span>+r1.getName());</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/img.2/02.png" alt="某一次的运行结果"></p><h2 id="例二"><a href="#例二" class="headerlink" title="例二"></a>例二</h2><p><img src="/img.2/找女友.png" alt="找女友"></p><p>GirlFriend文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GirlFriend</span> &#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"><span class="keyword">private</span> String sex;</span><br><span class="line"><span class="keyword">private</span> String inter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">GirlFriend</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">GirlFriend</span><span class="params">(String name, <span class="type">int</span> age, String sex, String inter)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line"><span class="built_in">this</span>.sex = sex;</span><br><span class="line"><span class="built_in">this</span>.inter = inter;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getSex</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> sex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(String sex)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.sex = sex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getInter</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> inter;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInter</span><span class="params">(String inter)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.inter = inter;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GirlFriendTest文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GirlFriendTest</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">GirlFriend[] arr =<span class="keyword">new</span> <span class="title class_">GirlFriend</span>[<span class="number">4</span>]; </span><br><span class="line"><span class="type">GirlFriend</span> <span class="variable">g1</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">GirlFriend</span>(<span class="string">&quot;郭靖&quot;</span>,<span class="number">12</span>,<span class="string">&quot;女&quot;</span>,<span class="string">&quot;习武&quot;</span>);</span><br><span class="line"><span class="type">GirlFriend</span> <span class="variable">g2</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">GirlFriend</span>(<span class="string">&quot;芙蓉&quot;</span>,<span class="number">13</span>,<span class="string">&quot;女&quot;</span>,<span class="string">&quot;习武&quot;</span>);</span><br><span class="line"><span class="type">GirlFriend</span> <span class="variable">g3</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">GirlFriend</span>(<span class="string">&quot;龙女&quot;</span>,<span class="number">14</span>,<span class="string">&quot;女&quot;</span>,<span class="string">&quot;习武&quot;</span>);</span><br><span class="line"><span class="type">GirlFriend</span> <span class="variable">g4</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">GirlFriend</span>(<span class="string">&quot;杨过&quot;</span>,<span class="number">15</span>,<span class="string">&quot;女&quot;</span>,<span class="string">&quot;习武&quot;</span>);</span><br><span class="line">arr[<span class="number">0</span>]=g1;</span><br><span class="line">arr[<span class="number">1</span>]=g2;</span><br><span class="line">arr[<span class="number">2</span>]=g3;</span><br><span class="line">arr[<span class="number">3</span>]=g4;</span><br><span class="line"><span class="type">int</span> count=<span class="number">0</span>,num=<span class="number">0</span>,cnt=<span class="number">0</span>;</span><br><span class="line">count+=arr[<span class="number">0</span>].getAge()+arr[<span class="number">1</span>].getAge()+arr[<span class="number">2</span>].getAge()+arr[<span class="number">3</span>].getAge();</span><br><span class="line">num=count/arr.length;</span><br><span class="line">System.out.println(num);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[i].getAge()&lt;num) &#123;</span><br><span class="line">System.out.println(arr[i].getName()+<span class="string">&quot; &quot;</span>+arr[i].getAge()+<span class="string">&quot; &quot;</span>+arr[i].getSex()+<span class="string">&quot; &quot;</span>+arr[i].getInter());</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(cnt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例三"><a href="#例三" class="headerlink" title="例三"></a>例三</h2><p>本题只做了前两个要求，后三个较容易未做</p><p><img src="/img.2/对象数组5.png" alt="尝试"></p><p>student文件夹</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(<span class="type">int</span> id, String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>studentTest文件夹</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentTest</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Student[] arr =<span class="keyword">new</span> <span class="title class_">Student</span>[<span class="number">3</span>];</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">Student</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="number">01</span>,<span class="string">&quot;灵衣&quot;</span>,<span class="number">12</span>);</span><br><span class="line"><span class="type">Student</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="number">02</span>,<span class="string">&quot;灵服&quot;</span>,<span class="number">13</span>);</span><br><span class="line"><span class="type">Student</span> <span class="variable">p3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="number">03</span>,<span class="string">&quot;灵装&quot;</span>,<span class="number">14</span>);</span><br><span class="line">arr[<span class="number">0</span>]=p1;</span><br><span class="line">arr[<span class="number">1</span>]=p2;</span><br><span class="line">arr[<span class="number">2</span>]=p3;</span><br><span class="line"><span class="type">Student</span> <span class="variable">p4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">System.out.println(<span class="string">&quot;请输入ID&quot;</span>);</span><br><span class="line">p4.setId(sc.nextInt());</span><br><span class="line">System.out.println(<span class="string">&quot;请输入姓名&quot;</span>);</span><br><span class="line">p4.setName(sc.next());</span><br><span class="line">System.out.println(<span class="string">&quot;请输入年龄&quot;</span>);</span><br><span class="line">p4.setAge(sc.nextInt());</span><br><span class="line">p4.getAge();</span><br><span class="line">p4.getId();</span><br><span class="line">p4.getName();</span><br><span class="line"><span class="type">boolean</span> <span class="variable">temp</span> <span class="operator">=</span> panduan(arr ,p4.getId());</span><br><span class="line"><span class="keyword">if</span> (temp) &#123; <span class="comment">//为真，就准备添加p4</span></span><br><span class="line"><span class="type">boolean</span> <span class="variable">right</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"><span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123; <span class="comment">//判断原数组是否还能添加元素</span></span><br><span class="line">count++;</span><br><span class="line"><span class="keyword">if</span>(arr[i]==<span class="literal">null</span>) &#123;</span><br><span class="line">right = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (right) &#123;</span><br><span class="line">arr[count-<span class="number">1</span>]=p4;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">Student[] brr=<span class="keyword">new</span> <span class="title class_">Student</span>[arr.length+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">brr[i]=arr[i];</span><br><span class="line">&#125;</span><br><span class="line">brr[count]=p4;</span><br><span class="line">System.out.println(<span class="string">&quot;已成功添加&quot;</span>);</span><br><span class="line">System.out.println(p4.getId()+<span class="string">&quot; &quot;</span>+p4.getName()+<span class="string">&quot; &quot;</span>+p4.getAge());</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;请重新输入ID&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">panduan</span><span class="params">(Student[] arr,<span class="type">int</span> number)</span> &#123;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">mn</span> <span class="operator">=</span> <span class="literal">true</span>;  <span class="comment">//假设不存在这个id</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[i].getId() == number) &#123;</span><br><span class="line"> mn=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> mn;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>java学习路线2022</title>
      <link href="/2023/06/23/java%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
      <url>/2023/06/23/java%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<p><a href="https://pan.baidu.com/s/1LxIxcHDO7SYB96SE-GZfuQ#list/path=%2F&amp;parentPath=%2Fsharelink3232509500-994016065012907">度盘链接</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础语法</title>
      <link href="/2023/06/23/java%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/06/23/java%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="一-语法"><a href="#一-语法" class="headerlink" title="一 语法"></a>一 语法</h1><h2 id="①输入"><a href="#①输入" class="headerlink" title="①输入"></a>①输入</h2><p>Scanner in=new Scanner(System.in);</p><p>int b=in.nextInt();  //输入数字</p><p>String b=in.nextLine();  //输入字符串</p><p> int[] x = new int[1000];  //输入数组 1000是依据需求填的,可改</p><h2 id="②输出"><a href="#②输出" class="headerlink" title="②输出"></a>②输出</h2><p>System.out.println(“ “);</p><h2 id="③随机数"><a href="#③随机数" class="headerlink" title="③随机数"></a>③随机数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random; </span><br><span class="line"><span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> r.nextInt(随机数范围);<span class="comment">//例如 int number = r.nextInt(100) 范围在0~99之间</span></span><br><span class="line"><span class="comment">//变式</span></span><br><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> r.nextInt(随机数范围)+<span class="number">1</span>;<span class="comment">//这种也是可以的，“1”也可以是字母或变量</span></span><br></pre></td></tr></table></figure><h2 id="④数组"><a href="#④数组" class="headerlink" title="④数组"></a>④数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.静态初始化</span></span><br><span class="line"><span class="comment">//完整格式与简化格式</span></span><br><span class="line"><span class="type">int</span>[] arr1 = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">11</span>,<span class="number">12</span>&#125;;</span><br><span class="line"><span class="type">int</span>[] arr1 = &#123;<span class="number">11</span>,<span class="number">12</span>&#125;;</span><br><span class="line"><span class="type">int</span>[] arr1 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">50</span>]; <span class="comment">//规定数组大小，动态输入</span></span><br><span class="line"></span><br><span class="line">String[] arr2 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;zhangsan&quot;</span>,<span class="string">&quot;lisi&quot;</span>,<span class="string">&quot;;&quot;</span>&#125;; <span class="comment">//字符</span></span><br><span class="line">String[] arr2 = &#123;<span class="string">&quot;zhangsan&quot;</span>,<span class="string">&quot;lisi&quot;</span>,<span class="string">&quot;;&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span>[] arr3 = <span class="keyword">new</span> <span class="title class_">double</span>[]&#123;<span class="number">1.93</span>,<span class="number">12.4</span>&#125;; <span class="comment">//有小数</span></span><br><span class="line"><span class="type">double</span>[] arr3 = &#123;<span class="number">1.93</span>,<span class="number">12.4</span>&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="⑤方法的重载"><a href="#⑤方法的重载" class="headerlink" title="⑤方法的重载"></a>⑤方法的重载</h2><p>两个点</p><p>A：必须在同一个类中</p><p>B：变量不同</p><h1 id="二-例题"><a href="#二-例题" class="headerlink" title="二 例题"></a>二 例题</h1><h3 id="例一"><a href="#例一" class="headerlink" title="例一"></a>例一</h3><p><strong>题目内容：</strong></p><p>每个非素数（合数）都可以写成几个素数（也可称为质数）相乘的形式，这几个素数就都叫做这个合数的质因数。比如，6可以被分解为2x3，而24可以被分解为2x2x2x3。</p><p>现在，你的程序要读入一个[2,100000]范围内的整数，然后输出它的质因数分解式；当读到的就是素数时，输出它本身。</p><p><strong>输入格式:</strong></p><p>一个整数，范围在[2,100000]内。</p><p><strong>输出格式：</strong></p><p>形如：</p><p>n=axbxcxd</p><p>或</p><p>n=n</p><p>所有的符号之间都没有空格，x是小写字母x。</p><p><strong>输入样例：</strong></p><p>18</p><p><strong>输出样例：</strong></p><p>18=2x3x3</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Tset</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title function_">panduan</span><span class="params">(<span class="type">int</span> n)</span> &#123; <span class="comment">//验素数</span></span><br><span class="line"><span class="type">boolean</span> ass=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ass=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ass)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">3</span>;i&lt;=Math.sqrt(n); i +=<span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    ass =<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ass;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scan</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scan.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> n;</span><br><span class="line">        <span class="type">boolean</span> Isprime;</span><br><span class="line">        Isprime=panduan(n);</span><br><span class="line">        <span class="keyword">if</span>(Isprime) <span class="comment">//验素数</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(temp+<span class="string">&quot;=&quot;</span>+temp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>        <span class="comment">//如是合数,则分解</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">boolean</span> Isprime2;</span><br><span class="line">            System.out.print(temp+<span class="string">&quot;=&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i&lt;=n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Isprime2 = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">2</span>;j&lt;=Math.sqrt(i) ;j++)  <span class="comment">//不成立的话，直接不运行后续代码。但本题每一次循环都判断一次是否运行后续代码,虽然感觉这段代码无用</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(i%j==<span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Isprime2 =<span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    n /=i;</span><br><span class="line">                    System.out.print(i);</span><br><span class="line">                    i--;</span><br><span class="line">                    <span class="keyword">if</span>(n!=<span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        System.out.print(<span class="string">&quot;x&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="例二"><a href="#例二" class="headerlink" title="例二"></a>例二</h3><p>将一个数组内的元素颠倒输出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">&#123;</span><br><span class="line">Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">int</span>[] arr=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">arr1[i]=sc.nextInt();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>,j=arr.length-<span class="number">1</span>;i&lt;j;i++,j--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> te=arr1[i];</span><br><span class="line">arr1[i]=arr1[j];</span><br><span class="line">arr1[j]=te;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">System.out.println(arr1[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="例三"><a href="#例三" class="headerlink" title="例三"></a>例三</h3><p>动态抽奖，将奖项打乱，输出</p><p><img src="/img.2\奖金随机抽取.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">sc</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">Scanner sc= <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line"><span class="type">Random</span> <span class="variable">a</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">arr[i] = sc.nextInt();<span class="comment">//此处输入奖金</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;<span class="comment">//打乱数组中的元素，实现打乱奖项的目的</span></span><br><span class="line"><span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span>a.nextInt(arr.length);</span><br><span class="line"><span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">arr[i] = arr[c];</span><br><span class="line">arr[c] = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">System.out.println(arr[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="例四"><a href="#例四" class="headerlink" title="例四"></a>例四</h3><p>投注号码由6个红色号码和1个蓝色球号码组成。红色球号码从1-33中选择；蓝色求号吗送1-16中选择；下图是双色球中奖条件和奖金表。</p><p><img src="/img.2\双色球.png" alt="双色球"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">sc</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">  <span class="comment">//1.生成中奖号码</span></span><br><span class="line">        <span class="type">int</span>[] arr = createNumber(); <span class="comment">// 123456  7</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=======================&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.println(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;=======================&quot;</span>);</span><br><span class="line">        <span class="comment">//2.用户输入彩票号码（红球 + 蓝球）//654321</span></span><br><span class="line">        <span class="type">int</span>[] userInputArr = userInputNumber();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.判断用户的中奖情况</span></span><br><span class="line">        <span class="comment">//红球 蓝球</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">redCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">blueCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断红球</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; userInputArr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">redNumber</span> <span class="operator">=</span> userInputArr[i];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(redNumber == arr[j])&#123;</span><br><span class="line">                    redCount++;</span><br><span class="line">                    <span class="comment">//如果找到了，那么后面的数字就没有必要继续比较了</span></span><br><span class="line">                    <span class="comment">//跳出内循环，继续判断下一个红球号码是否中奖</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断蓝球</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">blueNumber</span> <span class="operator">=</span> userInputArr[userInputArr.length-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(blueNumber == arr[arr.length - <span class="number">1</span>])&#123;</span><br><span class="line">            blueCount++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//根据红球的个数以及蓝球的个数来判断中奖情况</span></span><br><span class="line">        <span class="keyword">if</span>(redCount == <span class="number">6</span> &amp;&amp; blueCount == <span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;恭喜你，中奖1000万&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(redCount == <span class="number">6</span> &amp;&amp; blueCount == <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;恭喜你，中奖500万&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(redCount == <span class="number">5</span> &amp;&amp; blueCount == <span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;恭喜你，中奖3000&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>((redCount == <span class="number">5</span> &amp;&amp; blueCount == <span class="number">0</span>) ||  (redCount == <span class="number">4</span> &amp;&amp; blueCount == <span class="number">1</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;恭喜你，中奖200&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>((redCount == <span class="number">4</span> &amp;&amp; blueCount == <span class="number">0</span>) ||  (redCount == <span class="number">3</span> &amp;&amp; blueCount == <span class="number">1</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;恭喜你，中奖10&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>((redCount == <span class="number">2</span> &amp;&amp; blueCount == <span class="number">1</span>) ||  (redCount == <span class="number">1</span> &amp;&amp; blueCount == <span class="number">1</span>)|| (redCount == <span class="number">0</span> &amp;&amp; blueCount == <span class="number">1</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;恭喜你，中奖5&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;谢谢参与，谢谢惠顾&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] userInputNumber() &#123;</span><br><span class="line">        <span class="comment">//1.创建数组用于添加用户购买的彩票号码</span></span><br><span class="line">        <span class="comment">//6个红球 1个蓝球 数组长度：7</span></span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">7</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.利用键盘录入让用输入</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">//让用户输入红球号码</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">6</span>; ) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入第&quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot;个红球号码&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">redNumber</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="comment">//redNumber  在1~33  唯一不重复</span></span><br><span class="line">            <span class="keyword">if</span> (redNumber &gt;= <span class="number">1</span> &amp;&amp; redNumber &lt;= <span class="number">33</span>) &#123;</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> contains(arr, redNumber);</span><br><span class="line">                <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">                    <span class="comment">//不存在</span></span><br><span class="line">                    <span class="comment">//有效的，可以添加到数组当中</span></span><br><span class="line">                    arr[i] = redNumber;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//存在</span></span><br><span class="line">                    System.out.println(<span class="string">&quot;当前红球号码已经存在，请重新输入&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;当前红球号码超出范围&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//让用户输入篮球号码</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入篮球号码&quot;</span>);</span><br><span class="line">        <span class="comment">//1~16</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">blueNumber</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="keyword">if</span> (blueNumber &gt;= <span class="number">1</span> &amp;&amp; blueNumber &lt;= <span class="number">16</span>) &#123;</span><br><span class="line">                arr[arr.length - <span class="number">1</span>] = blueNumber;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;当前篮球号码超出范围&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] createNumber() &#123;</span><br><span class="line">        <span class="comment">//1.创建数组用于添加中奖号码</span></span><br><span class="line">        <span class="comment">//6个红球 1个蓝球 数组长度：7</span></span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">7</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.随机生成号码并添加到数组当中</span></span><br><span class="line">        <span class="comment">//红球：不能重复的  1 2 3 4 5 6</span></span><br><span class="line">        <span class="comment">//蓝球：可以跟红球号码重复 5</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//生成红球号码并添加到数组当中</span></span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">6</span>; ) &#123;</span><br><span class="line">            <span class="comment">//获取红球号码</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">redNumber</span> <span class="operator">=</span> r.nextInt(<span class="number">33</span>) + <span class="number">1</span>;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> contains(arr, redNumber);</span><br><span class="line">            <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">                <span class="comment">//把红球号码添加到数组当中</span></span><br><span class="line">                arr[i] = redNumber;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//生成蓝球号码并添加到数组当中</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">blueNumber</span> <span class="operator">=</span> r.nextInt(<span class="number">16</span>) + <span class="number">1</span>;</span><br><span class="line">        arr[arr.length - <span class="number">1</span>] = blueNumber;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用于判断数组在数组中是否存在</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">contains</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> number)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] == number) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言的判断与循环</title>
      <link href="/2023/06/23/C%E8%AF%AD%E8%A8%80%E5%88%A4%E6%96%AD/"/>
      <url>/2023/06/23/C%E8%AF%AD%E8%A8%80%E5%88%A4%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">void main()&#123;</span><br><span class="line">char c1 = &#x27; &#x27;;  </span><br><span class="line">printf(&quot;请输入一个字符(a,b,c,d)&quot;); </span><br><span class="line">scanf(&quot;%c&quot;, &amp;c1); //switch //表达式： 任何有值都可以看成是一个表达式 </span><br><span class="line">scanf(&quot;%c&quot;, &amp;c1);</span><br><span class="line">switch(c1) &#123; </span><br><span class="line">case &#x27;a&#x27; : //&#x27;a&#x27; =&gt; 97 </span><br><span class="line">printf(&quot;今天星期一, 猴子穿新衣&quot;); </span><br><span class="line">break; //退出 switch </span><br><span class="line">case &#x27;b&#x27; : </span><br><span class="line">printf(&quot;今天星期二, 猴子当小二&quot;); </span><br><span class="line">break;</span><br><span class="line"> case &#x27;c&#x27; : </span><br><span class="line">printf(&quot;今天星期三, 猴子爬雪山&quot;); </span><br><span class="line">break; </span><br><span class="line">case &#x27;d&#x27; : </span><br><span class="line">printf(&quot;今天星期四, 猴子有急事&quot;); </span><br><span class="line">break; </span><br><span class="line">default : //default 是可选择,不是必须的 </span><br><span class="line">printf(&quot;没有匹配到任何值~&quot;); </span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;\nswitch 结束~&quot;);</span><br><span class="line">&#125;</span><br><span class="line">//switch是一个路标牌，计算控制表达式的值后，就知道跳转到哪了（在哪里上车），但是分支符号只是说明switch</span><br><span class="line">//内部位置的路标，在执行完分支后，如果后面没有break（下车提示），就会顺序执行到下面的case，直到遇到</span><br><span class="line">//break，或者switch结束（终点站）</span><br><span class="line">int i=1;</span><br><span class="line">switch ( i%3 ) &#123;</span><br><span class="line">case 0: printf(&quot;zero&quot;);</span><br><span class="line">case 1: printf(&quot;one&quot;);</span><br><span class="line">case 2: printf(&quot;two&quot;);</span><br><span class="line">&#125;</span><br><span class="line">//输出是onetwo</span><br></pre></td></tr></table></figure><h1 id="for、while之间的区别"><a href="#for、while之间的区别" class="headerlink" title="for、while之间的区别"></a>for、while之间的区别</h1><p> 没有大区别，使用情况看具体环境</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ArrayList集合</title>
      <link href="/2023/06/23/ArrayList%E9%9B%86%E5%90%88/"/>
      <url>/2023/06/23/ArrayList%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h1 id="一、ArrayList集合"><a href="#一、ArrayList集合" class="headerlink" title="一、ArrayList集合"></a>一、ArrayList集合</h1><h2 id="A、ArrayList"><a href="#A、ArrayList" class="headerlink" title="A、ArrayList"></a>A、ArrayList</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line"><span class="comment">//第一个String是泛型，第二个String在jdk7后可以不用写，我用的是jdk15，所以不用写。</span></span><br><span class="line"><span class="comment">//集合的长度</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> list.size();</span><br></pre></td></tr></table></figure><p>泛型：限定集合中存储数据的类型</p><h2 id="B、集合和数组的区别"><a href="#B、集合和数组的区别" class="headerlink" title="B、集合和数组的区别"></a>B、集合和数组的区别</h2><p>ArrayList</p><p>①可以存储引用数据类型，基本数据类型可以存，但必须变成包装类。</p><p>②集合长度根据需要随时变化</p><p>数组</p><p>①引用和基本都能存。</p><p>②数组长度固定</p><h2 id="C、ArrayList的成员方法"><a href="#C、ArrayList的成员方法" class="headerlink" title="C、ArrayList的成员方法"></a>C、ArrayList的成员方法</h2><p><img src="/img.2/Arraylist/增删改查.png" alt="增删改查"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">ArrayList&lt;String&gt; arr = new ArrayList&lt;&gt;();</span><br><span class="line">//1、添加</span><br><span class="line">arr.add(&quot;aaa&quot;);</span><br><span class="line">arr.add(&quot;bbb&quot;);</span><br><span class="line">arr.add(&quot;ccc&quot;);</span><br><span class="line">arr.add(&quot;ddd&quot;);</span><br><span class="line">//2、删除</span><br><span class="line">//arr.remove(&quot;aaa&quot;); </span><br><span class="line">//arr.remove(1);</span><br><span class="line">//此方法删除会返回一个boolean类型的值，可以接收。例如</span><br><span class="line">//boolean result = arr.remove(&quot;aaa&quot;); 返回值是true，如果没能删除，则返回false</span><br><span class="line">//3、修改</span><br><span class="line">//String result = arr.set(1, &quot;ddd&quot;);</span><br><span class="line">// 修改的话，会返回修改之前那个位置的值</span><br><span class="line">//4、查询</span><br><span class="line">String s = arr.get(0);</span><br><span class="line">System.out.println(arr);</span><br><span class="line">System.out.println(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>添加</strong></p><p><img src="/img.2/Arraylist/添加.png" alt="添加"></p><p><strong>删除</strong></p><p><img src="/img.2/Arraylist/删除.png" alt="删除"></p><p><strong>修改</strong></p><p><img src="/img.2/Arraylist/修改.png" alt="修改"></p><p><strong>查询</strong></p><p><img src="/img.2/Arraylist/查询.png" alt="查询"></p><h1 id="二、习题"><a href="#二、习题" class="headerlink" title="二、习题"></a>二、习题</h1><h2 id="①基本数据类型对应的包装类"><a href="#①基本数据类型对应的包装类" class="headerlink" title="①基本数据类型对应的包装类"></a>①基本数据类型对应的包装类</h2><p><img src="/img.2/Arraylist/基本数据类型对应的包装类.png" alt="基本数据类型对应的包装类"></p><pre><code>public static void main(String[] args) &#123;    // TODO Auto-generated method stub    ArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;(); //基本数据类型      ArrayList&lt;String&gt; list2 = new ArrayList&lt;&gt;(); //引用数据类型    list.add(1);    list.add(2);    list.add(3);    System.out.println(&quot;[&quot;);    for (int i = 0; i &lt; list.size(); i++) &#123;        if (i==list.size()-1) &#123;            System.out.println(list.get(i));        &#125;else &#123;            System.out.println(list.get(i)+&quot;,&quot;);        &#125;    &#125;    System.out.println(&quot;]&quot;);&#125;</code></pre><h2 id="②添加学生对象并遍历"><a href="#②添加学生对象并遍历" class="headerlink" title="②添加学生对象并遍历"></a>②添加学生对象并遍历</h2><p><img src="/img.2/Arraylist/学生对象.png" alt="学生对象"></p><p>Test4文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">ArrayList&lt;Student&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="type">Student</span> <span class="variable">sb1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;lihua&quot;</span>,<span class="number">20</span>);</span><br><span class="line"><span class="type">Student</span> <span class="variable">sb2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;张三&quot;</span>,<span class="number">21</span>);</span><br><span class="line"><span class="type">Student</span> <span class="variable">sb3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;李四&quot;</span>,<span class="number">22</span>);</span><br><span class="line">list.add(sb1);</span><br><span class="line">list.add(sb2);</span><br><span class="line">list.add(sb3);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line"><span class="type">Student</span> <span class="variable">stu</span> <span class="operator">=</span> list.get(i); </span><br><span class="line">System.out.println(stu.getName()+<span class="string">&quot; &quot;</span>+stu.getAge());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>student文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="③添加手机对象并返回要求的数据"><a href="#③添加手机对象并返回要求的数据" class="headerlink" title="③添加手机对象并返回要求的数据"></a>③添加手机对象并返回要求的数据</h2><p>Test4文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">ArrayList&lt;phone&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="type">phone</span> <span class="variable">ph1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">phone</span>(<span class="string">&quot;小米&quot;</span>,<span class="number">1000</span>);</span><br><span class="line"><span class="type">phone</span> <span class="variable">ph2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">phone</span>(<span class="string">&quot;苹果&quot;</span>,<span class="number">8000</span>);</span><br><span class="line"><span class="type">phone</span> <span class="variable">ph3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">phone</span>(<span class="string">&quot;锤子&quot;</span>,<span class="number">2999</span>);</span><br><span class="line">list.add(ph1);</span><br><span class="line">list.add(ph2);</span><br><span class="line">list.add(ph3);</span><br><span class="line">ArrayList&lt;phone&gt; thing = brand(list);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; thing.size(); i++) &#123;</span><br><span class="line">System.out.println(thing.get(i).getBrand()+<span class="string">&quot; &quot;</span>+thing.get(i).getPrice());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ArrayList&lt;phone&gt; <span class="title function_">brand</span><span class="params">(ArrayList&lt;phone&gt; list)</span> &#123;</span><br><span class="line">ArrayList&lt;phone&gt; arrayList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line"><span class="type">phone</span> <span class="variable">p</span> <span class="operator">=</span> list.get(i);</span><br><span class="line"><span class="type">int</span> <span class="variable">price</span> <span class="operator">=</span> p.getPrice();</span><br><span class="line"><span class="keyword">if</span> (price&lt;<span class="number">3000</span>) &#123;</span><br><span class="line">arrayList.add(p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> arrayList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>phone文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">phone</span> &#123;</span><br><span class="line"><span class="keyword">private</span> String brand;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> price;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">phone</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">phone</span><span class="params">(String brand, <span class="type">int</span> price)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.brand = brand;</span><br><span class="line"><span class="built_in">this</span>.price = price;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getBrand</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> brand;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBrand</span><span class="params">(String brand)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.brand = brand;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getPrice</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> price;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPrice</span><span class="params">(<span class="type">int</span> price)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.price = price;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言常用语法或短语</title>
      <link href="/2023/06/23/C%E8%AF%AD%E8%A8%80%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E6%88%96%E7%9F%AD%E8%AF%AD/"/>
      <url>/2023/06/23/C%E8%AF%AD%E8%A8%80%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E6%88%96%E7%9F%AD%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="①getchar-和gets"><a href="#①getchar-和gets" class="headerlink" title="①getchar()和gets()"></a>①getchar()和gets()</h1><h2 id="1-getchar"><a href="#1-getchar" class="headerlink" title="1 getchar()"></a>1 getchar()</h2><p>输入一行字符，分别统计出其中英文字母、数字、空格和其他字符的个数。</p><p><strong>输入</strong> 一行字符。 <strong>输出</strong> 统计每种字符的个数值。</p><p> <code>aklsjflj123 sadf918u324 asdf91u32oasdf/.&#39;;123</code> 样例输出： <code>23 16 2 4</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">    &#123;  </span><br><span class="line">      <span class="comment">/*********Begin*********/</span></span><br><span class="line">      <span class="type">char</span> c;</span><br><span class="line">      <span class="type">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>,e=<span class="number">0</span>,d=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>((c=getchar())!=<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">      &#123;</span><br><span class="line">      <span class="keyword">if</span>((c&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;z&#x27;</span>)||(c&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;Z&#x27;</span>))</span><br><span class="line">       &#123;a++;&#125;</span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">if</span>(c&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">       &#123;b++;&#125;</span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">       &#123;e++;&#125;</span><br><span class="line">       <span class="keyword">else</span> </span><br><span class="line">       &#123;d++;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d\n&quot;</span>,a,b,e,d);</span><br><span class="line">      <span class="comment">/*********End**********/</span> </span><br><span class="line">       <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="2-gets"><a href="#2-gets" class="headerlink" title="2 gets()"></a>2 gets()</h2><p>题目描述:输入两个字符串<code>a</code>和<code>b</code>，将<code>b</code>串中的最大字符插入到<code>a</code>串中最小字符后面。</p><p><strong>输入</strong> 输入一段文字</p><p><strong>输出</strong> 输入两个字符串<code>a</code>和<code>b</code>。</p><p>样例输入： <code>MynameisAmy</code> <code>MynameisJane</code> </p><p>样例输出： <code>MynameisAymy</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> a[<span class="number">100</span>],b[<span class="number">100</span>];</span><br><span class="line"><span class="type">int</span> i,m,n,min=<span class="number">0</span>,max=<span class="number">0</span>;</span><br><span class="line">gets(a);</span><br><span class="line">gets(b);</span><br><span class="line">m = <span class="built_in">strlen</span>(a);</span><br><span class="line">n = <span class="built_in">strlen</span>(b);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;a[min])</span><br><span class="line">min = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(b[i]&gt;b[max])</span><br><span class="line">max = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=min;i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,b[max]);</span><br><span class="line"><span class="keyword">for</span>(i=min+<span class="number">1</span>;i&lt;m;i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-gets-和getchar-区别"><a href="#3-gets-和getchar-区别" class="headerlink" title="3 gets()和getchar()区别"></a>3 gets()和getchar()区别</h2><p><strong>一、函数输入方面</strong></p><p>1、gets()函数用来从标准输入设备(键盘)读取字符串直到回车结束，但回车符不属于这个字符串。其调用格式为：gets(s)；s为字符串变量(字符串数组名或字符串指针），gets(s)函数与scanf(“%s”, &amp;s)相似，但不完全相同。</p><p>2、而getchar函数运行时字符是连续输入的，运行结果却是正确的，这是因为输入字符后，它们暂存于键盘的缓冲区中，然后由getchar函数从键盘缓冲区中一个一个的取出来。就是如果输入了空格会认为输入字符串结束，空格后的字符将作为下一个输入项处理，但gets() 函数将接收输入的整个字符串直到回车为止。</p><p><strong>二、字符输入方面</strong></p><p>gets()：是输入一行<a href="https://so.csdn.net/so/search?q=字符串&amp;spm=1001.2101.3001.7020">字符串</a>，以回车结束，并且回车键会被过滤掉，不会被读到字符串中。</p><p>getchar()：是读取一个字符，包括回车键也会被读成一个字符。</p><p><strong>三、输出格式</strong></p><p>1、gets函数是输入一行字符串，以回车结束，并且回车键会被过滤掉，不会被读回到字符串中。</p><p>2、而getchar()是读答取一个字符，包括回车键也会被读成一个字符。这个程序在输入name[i]前，用getchar()把之前scanf(“%d”,&amp;num[i]);中，输入整数后按的回车键给读走，否则这个回车键会导致gets直接读到一个空字符串。</p><h1 id="②格式符"><a href="#②格式符" class="headerlink" title="②格式符"></a>②格式符</h1><p><img src="img.2/常见数据类型变量的scanf格式符.png" alt="格式符"></p><p>保留3位有效数字：%.3lf</p><h1 id="③二分法"><a href="#③二分法" class="headerlink" title="③二分法"></a>③二分法</h1><p>给定数组是有序的，给定一个target值。每次查找最中间的值，如果相等，就返回对应下标，如果target大于最中间的值，则在数组的右半边继续查找，如果小于，则在数组左半边查找。最终有两种结果，一种是找到并返回下标，第二种是没找到。</p><p>例题：</p><p><strong>输入</strong> 输入包括<code>3</code>行，第一行为整数<code>n</code>，第二行包括<code>n</code>个整数，以空格分隔，第三行为整数<code>m</code>。 </p><p><strong>输出</strong> 如果能够在序列中找到整数<code>m</code>，则输出编号（如果存在多个编号，返回编号最小的），如果不存在，则输出<code>None</code>。</p><p>样例输入： </p><p><code>10</code> </p><p><code>1 2 4 5 6 7 8 9 10 11</code> <code>10</code> </p><p>样例输出： </p><p><code>9</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n,m,s,b,mid,i;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="type">int</span> a[n];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line">s=<span class="number">0</span>;</span><br><span class="line">b=n<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(s&lt;=b)</span><br><span class="line">&#123;</span><br><span class="line">    mid=(b+s)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(m&gt;a[mid])</span><br><span class="line">        &#123;</span><br><span class="line">            s=mid+<span class="number">1</span>;</span><br><span class="line">        &#125; </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(m&lt;a[mid])</span><br><span class="line">        &#123;</span><br><span class="line">            b=mid<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(m==a[mid]) </span><br><span class="line"> &#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,mid+<span class="number">1</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> &#125;  </span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;None&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="④冒泡排序、选择排序异同"><a href="#④冒泡排序、选择排序异同" class="headerlink" title="④冒泡排序、选择排序异同"></a>④冒泡排序、选择排序异同</h1><h2 id="1冒泡排序"><a href="#1冒泡排序" class="headerlink" title="1冒泡排序"></a>1冒泡排序</h2><p>冒泡：两两比较待排序记录的关键字，发现两个记录的次序相反时即进行交换，直到没有反序的记录为止。</p><p><img src="D:\Hexo blog\blog-demo\source\img.2\冒泡排序图.gif" alt="冒泡排序图"></p><p>代码实现：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i,j,t,a[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)#外层循环，控制轮数</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>;j&lt;=<span class="number">9</span>-i;j++)#内层循环，控制次数</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[j]&gt;=a[j+<span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">t=a[j+<span class="number">1</span>];</span><br><span class="line">a[j+<span class="number">1</span>]=a[j];</span><br><span class="line">a[j]=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2选择排序"><a href="#2选择排序" class="headerlink" title="2选择排序"></a>2选择排序</h2><p>选择：第一次从待排序的中数据元素选出最小（或最大）的一个元素，存放在序列的起始位置，然后再从剩余的未排序元素中寻找到最小（大）元素，然后放到已排序的序列的末尾。以此类推，直到全部待排序的数据元素的个数为零。选择排序是不稳定的排序方法。</p><p><img src="D:\Hexo blog\blog-demo\source\img.2\选择排序图.gif" alt="选择排序图"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i,j,t,a[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)#外层循环，控制比较的轮数</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j=i+<span class="number">1</span>;j&lt;=<span class="number">9</span>;j++)#内层循环，控制比较的次数</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i]&lt;=a[j])</span><br><span class="line">&#123;</span><br><span class="line">t=a[j];</span><br><span class="line">a[j]=a[i];</span><br><span class="line">a[i]=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3冒泡和选择排序异同"><a href="#3冒泡和选择排序异同" class="headerlink" title="3冒泡和选择排序异同"></a>3冒泡和选择排序异同</h2><p>二者相同之处：<br>1.均使用两次循环，一个为外层循环，一个为内层循环。<br>2.外层循环的表达方式相同。<br>3.交换的核心相同。</p><p>二者不同之处：<br>1.内层循环的表达方式不同。<br>冒泡排序是：for (j=0;j&lt;=9-i;j++)<br>选择排序是：for (j=i+1;j&lt;=9;j++)<br>虽然两个排序每轮比较的次数是相同的，但是采用了不同的表达方式。<br>2.交换的算法表达不同。<br>冒泡排序：<br>t=a[j+1];<br>a[j+1]=a[j];<br>a[j]=t;<br>选择排序：<br>t=a[j];<br>a[j]=a[i];<br>a[i]=t;<br>但是二者本质相同。</p><h1 id="⑤杨辉三角"><a href="#⑤杨辉三角" class="headerlink" title="⑤杨辉三角"></a>⑤杨辉三角</h1><p>打印出杨辉三角前10行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>][<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">a[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">&#125;   <span class="comment">//给每列第一个数进行赋值</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i][<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;<span class="comment">//输出每列第一个数，即1.</span></span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= i; j++) &#123;<span class="comment">//遍历数组行第n行打印n个数,故j&lt;=i</span></span><br><span class="line">a[i][j] = a[i - <span class="number">1</span>][j - <span class="number">1</span>] + a[i - <span class="number">1</span>][j];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i][j]);</span><br><span class="line"><span class="keyword">if</span> (j &lt; i) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;   <span class="comment">//题目要求每输出一个数就要打印空格，并且最后一个数不用打印空格</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="⑥辗转相除法求最大公因数与最小公倍数"><a href="#⑥辗转相除法求最大公因数与最小公倍数" class="headerlink" title="⑥辗转相除法求最大公因数与最小公倍数"></a>⑥辗转相除法求最大公因数与最小公倍数</h1><p>题目描述:写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果。两个整数由键盘输入。</p><p><strong>输入</strong> 两个正整数 </p><p><strong>输出</strong> 最大公约数 最小公倍数 如果输入的数中包含负数，则输出<code>Input Error</code></p><p>测试说明</p><p>样例输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6 15</span><br></pre></td></tr></table></figure><p>样例输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 30</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//编写最大公约数GCD函数</span></span><br><span class="line"><span class="comment">/*********Begin*********/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">arr</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t, low, high, zen;</span><br><span class="line"><span class="keyword">if</span> (x &lt; y)</span><br><span class="line">&#123;</span><br><span class="line">t = x;</span><br><span class="line">x = y;</span><br><span class="line">y = t;</span><br><span class="line">&#125;</span><br><span class="line">zen = x % y;</span><br><span class="line"><span class="keyword">while</span> (zen != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = y;</span><br><span class="line">y = zen;</span><br><span class="line">zen = x % y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*********End**********/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//编写最小公倍数LCM函数</span></span><br><span class="line"><span class="comment">/*********Begin*********/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">brr</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t, zen;</span><br><span class="line"><span class="type">int</span> min;</span><br><span class="line"><span class="type">int</span> j, k;</span><br><span class="line">j = x;</span><br><span class="line">k = y;</span><br><span class="line"><span class="keyword">if</span> (x &lt; y)</span><br><span class="line">&#123;</span><br><span class="line">t = x;</span><br><span class="line">x = y;</span><br><span class="line">y = t;</span><br><span class="line">&#125;</span><br><span class="line">zen = x % y;</span><br><span class="line"><span class="keyword">while</span> (zen != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = y;</span><br><span class="line">y = zen;</span><br><span class="line">zen = x % y;</span><br><span class="line">&#125;</span><br><span class="line">min = j * k / y;</span><br><span class="line"><span class="keyword">return</span> min;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*********End**********/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*********Begin*********/</span></span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="keyword">if</span> (a &lt; <span class="number">0</span> || b &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Input Error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr(a, b));<span class="comment">//输出最大公因数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, brr(a, b));<span class="comment">//输出最小公倍数，但此地方出现了小问题，导致a，b较大的时候会导致输出的数字为负数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*********End**********/</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="⑦Ascll码表"><a href="#⑦Ascll码表" class="headerlink" title="⑦Ascll码表"></a>⑦Ascll码表</h1><p><img src="/img.2/Ascll码表.png" alt="Ascll码表"></p><p>0 48</p><p>A 65</p><p>a 97</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
